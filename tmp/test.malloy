##! experimental
source: model_cubeserviceofficetxn is bayada.table(‘model.cubeserviceofficetxn’) extend {
}
query: `di_src_q` is `model_cubeserviceofficetxn` -> {
where: (parse_timestamp!timestamp(‘%Y%m%d’, `ServiceDateKey`) >= @2023-02-28 and parse_timestamp!timestamp(‘%Y%m%d’, `ServiceDateKey`) <= @2025-02-28);
where: (parse_timestamp!timestamp(‘%Y%m%d’, `ServiceDateKey`)).quarter = (parse_timestamp!timestamp(‘%Y%m%d’, `ServiceDateKey`)).quarter;
group_by: `quarter_start` is (parse_timestamp!timestamp(‘%Y%m%d’, `ServiceDateKey`)).quarter;
aggregate: `total_billed_hours` is source.sum(`CurrentPeriodTotalBilledHours`);
aggregate: `total_revenue` is source.sum(`CurrentPeriodTotalBilled`)
}
query: `di_src_number_of_workers` is `model_cubeserviceofficetxn` -> {
extend: {
join_one: di_src_q is di_src_q on `di_src_q`.`quarter_start` = (parse_timestamp!timestamp(‘%Y%m%d’, `ServiceDateKey`)).quarter
};
where: (`di_src_q`.`quarter_start` != null);
where: `di_src_q`.`quarter_start` = `di_src_q`.`quarter_start`;
group_by: `quarter_start` is `di_src_q`.`quarter_start`;
aggregate: `number_of_workers` is count(`WorkerID`)
}
run: `di_src_number_of_workers` -> {
extend: {
join_one: di_src_q is di_src_q on `di_src_q`.`quarter_start` = `quarter_start`
};
select: `c0_quarter` is format_date!string(‘%Y Q%Q’, `quarter_start`);
select: `c1_quarter_start` is `quarter_start`;
select: `c2_number_of_workers` is `number_of_workers`;
select: `c3_total_billed_hours_0` is `di_src_q`.`total_billed_hours`;
select: `c4_total_billed_hours` is round(`di_src_q`.`total_billed_hours`, 2);
select: `c5_total_revenue_0` is `di_src_q`.`total_revenue`;
select: `c6_total_revenue` is round(`di_src_q`.`total_revenue`, 2);
order_by: `c1_quarter_start` DESC;
limit: 10000
}
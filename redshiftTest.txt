
> malloy@0.0.1 test
> jest --runInBand

  console.log
    Error in SQL:
     SELECT 
       CONCAT('foo','bar') as "f0",
       CONCAT(1,'bar') as "f1",
       CONCAT('cons',true) as "f2",
       CONCAT('foo',DATE '2003-01-01') as "f3",
       CONCAT('foo',TIMESTAMP '2003-01-01 12:00:00') as "f4",
       '' as "f5"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3,4,5,6
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       FLOOR(1.9) as "f0",
       FLOOR(-1.9) as "f1",
       FLOOR(NULL) as "f2"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CEIL(1.9) as "f0",
       CEIL(-1.9) as "f1",
       CEIL(NULL) as "f2"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       REPLACE('aaaa','a','c') as "f0",
       REGEXP_REPLACE('aaaa', '.', 'c', 'g') as "f1",
       REGEXP_REPLACE('axbxc', '(a).(b).(c)', '\0 - \1 - \2 - \3', 'g') as "f2",
       REPLACE('aaaa','','c') as "f3",
       REPLACE(NULL,'a','c') as "f4",
       REPLACE('aaaa',NULL,'c') as "f5",
       REPLACE('aaaa','a',NULL) as "f6"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3,4,5,6,7
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       ROUND(((
            SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0."aircraft_model_code",aircraft_models_0."seats"))::text)) a
            ) a
          ))::NUMERIC) as "f"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       ROUND(((
            SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0."aircraft_model_code",aircraft_models_0."seats"))::text)) a
            ) a
          ))::NUMERIC) as "f"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       ROUND(((
            SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0."aircraft_model_code",CASE WHEN 1=1 THEN aircraft_models_0."seats" END))::text)) a
            ) a
          ))::NUMERIC) as "f"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          airports_0."county"
          END as "county__1",
        CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base."state"  ORDER BY  CASE WHEN group_set=1 THEN
          airports_0."county"
          END asc NULLS LAST ) END as "row_num__1"
      FROM "malloytest"."state_facts" as base
       LEFT JOIN "malloytest"."airports" AS airports_0
        ON airports_0."state"=base."state"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "county__1" as "county", 
        "row_num__1"::DOUBLE PRECISION as "row_num"
        ) as __x)  ORDER BY  "county__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "q"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  base."state" asc NULLS LAST ) END as "row_num__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__0" as "state",
      (ARRAY_AGG("row_num__0") FILTER (WHERE group_set=0 AND "row_num__0" IS NOT NULL))[1] as "row_num",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state"
        ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "nested"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1) as "first_letter",
       (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 as "states_with_first_letter_ish",
       RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST ) as "r"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1) as "first_letter",
       (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 as "states_with_first_letter_ish",
       RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST ) as "r",
       -(RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST )) as "neg_r"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."faa_region" as "faa_region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "airport_count__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "id__0",
        CASE WHEN group_set IN (1,2) THEN
          base."fac_type"
          END as "fac_type__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "airport_count__1",
        CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base."faa_region"  ORDER BY  CASE WHEN group_set=1 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "id2__1",
        CASE WHEN group_set=2 THEN
          AVG(base."elevation")
          END as "avg_elevation__2"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "faa_region__0" as "faa_region__0",
        MAX("airport_count__0") as "airport_count__0",
        MAX("id__0") as "id__0",
        CASE WHEN group_set IN (1,2) THEN
          "fac_type__1"
          END as "fac_type__1",
        MAX("airport_count__1") as "airport_count__1",
        MAX("id2__1") as "id2__1",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "avg_elevation__2"::DOUBLE PRECISION as "avg_elevation") as __x)) FILTER (WHERE group_set=2))[1]) as "elevation__1"
      FROM __stage0
      GROUP BY 1,2,5
    )
    , __stage2 AS (
      SELECT
        "faa_region__0" as "faa_region",
        (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
        (ARRAY_AGG("id__0") FILTER (WHERE group_set=0 AND "id__0" IS NOT NULL))[1] as "id",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "fac_type__1" as "fac_type", 
          "airport_count__1"::DOUBLE PRECISION as "airport_count", 
          "id2__1"::DOUBLE PRECISION as "id2", 
          "elevation__1" as "elevation"
          ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as "by_fac_type"
      FROM __stage1
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(by_fac_type_0,'id2')::double precision as "id2"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."by_fac_type") as by_fac_type_0 ON true
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       base."state" as "state",
       LAG((base."state"),1,'NONE') OVER(  ORDER BY  base."state" asc NULLS LAST ) as "prev_state"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       base."state" as "state",
       DATE_TRUNC('year', (LAG(TIMESTAMP '2011-11-11 11:11:11',1,LOCALTIMESTAMP) OVER(  ORDER BY  base."state" asc NULLS LAST )))=DATE_TRUNC('year', LOCALTIMESTAMP) as "lag_val"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."county"
          END as "county__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1",
        CASE WHEN group_set=1 THEN FIRST_VALUE(CASE WHEN group_set=1 THEN
          COUNT(1)
          END) OVER(PARTITION BY group_set, base."state"  ORDER BY  CASE WHEN group_set=1 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "first_count__1"
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" IS NOT NULL
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "county__1" as "county", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count", 
        "first_count__1"::DOUBLE PRECISION as "first_count"
        ) as __x)  ORDER BY  "aircraft_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as "by_county"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       base."state" as "state",
       base."births" as "births",
       FIRST_VALUE((base."births")) OVER(  ORDER BY  base."births" desc NULLS LAST ) as "most_births"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       aircraft_models_0."seats" as "seats",
       LAG(COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(aircraft_models_0."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0)) OVER(  ORDER BY  aircraft_models_0."seats" asc NULLS LAST ) as "prev_sum_of_seats"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       ABS(-3) as "f0",
       ABS(3) as "f1",
       ABS(NULL) as "f2"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       SIGN(100) as "f0",
       SIGN(-2) as "f1",
       SIGN(0) as "f2",
       SIGN(NULL) as "f3"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3,4
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COALESCE(CAST('NaN' AS double precision) = NUMERIC 'NaN', false) as "f0",
       COALESCE(100 = NUMERIC 'NaN', false) as "f1",
       COALESCE(NULL = NUMERIC 'NaN', false) as "f2"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN NUM_NULLS(1,10,-100) > 0 THEN NULL ELSE GREATEST(1,10,-100) END as "f0",
       ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE GREATEST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)>=DATE '2004-01-01') and ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE GREATEST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)<DATE '2005-01-01') as "f1",
       (CASE WHEN NUM_NULLS(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') > 0 THEN NULL ELSE GREATEST(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') END)=TIMESTAMP '2023-05-26 11:59:00' as "f2",
       CASE WHEN NUM_NULLS('a','b') > 0 THEN NULL ELSE GREATEST('a','b') END as "f3",
       CASE WHEN NUM_NULLS(1,NULL,0) > 0 THEN NULL ELSE GREATEST(1,NULL,0) END as "f4",
       CASE WHEN NUM_NULLS(NULL,NULL) > 0 THEN NULL ELSE GREATEST(NULL,NULL) END as "f5"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3,4,5,6
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN NUM_NULLS(1,10,-100) > 0 THEN NULL ELSE LEAST(1,10,-100) END as "f0",
       ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE LEAST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)>=DATE '1994-01-01') and ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE LEAST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)<DATE '1995-01-01') as "f1",
       (CASE WHEN NUM_NULLS(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') > 0 THEN NULL ELSE LEAST(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') END)=TIMESTAMP '2023-05-26 11:58:00' as "f2",
       CASE WHEN NUM_NULLS('a','b') > 0 THEN NULL ELSE LEAST('a','b') END as "f3",
       CASE WHEN NUM_NULLS(1,NULL,0) > 0 THEN NULL ELSE LEAST(1,NULL,0) END as "f4",
       CASE WHEN NUM_NULLS(NULL,NULL) > 0 THEN NULL ELSE LEAST(NULL,NULL) END as "f5"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3,4,5,6
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       DIV(3,2) as "f0",
       DIV(NULL,2) as "f1",
       DIV(2,NULL) as "f2"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COALESCE(STARTS_WITH('hello world', 'hello'), false) as "f0",
       COALESCE(STARTS_WITH('hello world', 'world'), false) as "f1",
       COALESCE(STARTS_WITH(NULL, 'world'), false) as "f2",
       COALESCE(STARTS_WITH('hello world', NULL), false) as "f3"
    FROM "malloytest"."state_facts" as base
    GROUP BY 1,2,3,4
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      LIMIT 10
    )
    SELECT 
       base."state" as "state",
       LEAD((base."state"),1,'NONE') OVER(  ORDER BY  base."state" asc NULLS LAST ) as "next_state"
    FROM __stage0 as base
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      LIMIT 5
    )
    SELECT 
       base."state" as "state",
       base."births" as "births",
       MIN((base."births")) OVER(  ORDER BY  base."births" asc NULLS LAST ) as "min_c",
       MAX((base."births")) OVER(  ORDER BY  base."births" asc NULLS LAST ) as "max_c",
       SUM((base."births")) OVER(  ORDER BY  base."births" asc NULLS LAST ) as "sum_c",
       MIN((base."births")) OVER(  ) as "min_w",
       MAX((base."births")) OVER(  ) as "max_w",
       SUM((base."births")) OVER(  ) as "sum_w"
    FROM __stage0 as base
    GROUP BY 1,2
    ORDER BY 2 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name") as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."city", base."name") as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY LENGTH(base."name")) as "f"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(base."name", ',' ORDER BY aircraft_models_0."model") as "f"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
    WHERE base."name" ~ '.*ADVENTURE.*'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" DESC) as "f"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), ',' ORDER BY (a::json->>'f3'), (a::json->>'f4')) as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",base."state",base."popular_name",base."state"))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), ',') as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",'o'))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), '') as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",'o',''))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(DISTINCT aircraft_0."name", ',' ORDER BY aircraft_0."name" ASC) as "f_dist",
       STRING_AGG(aircraft_0."name", ',' ORDER BY aircraft_0."name") as "f_all"
    FROM "malloytest"."aircraft_models" as base
     LEFT JOIN "malloytest"."aircraft" AS aircraft_0
      ON base."aircraft_model_code"=aircraft_0."aircraft_model_code"
    WHERE aircraft_0."name" IN ('RAYTHEON AIRCRAFT COMPANY','FOWLER IRA R DBA')

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(DISTINCT base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(DISTINCT base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" DESC) as "f"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COUNT(1) as "c",
       SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1) as "l",
       LAG((SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1))) OVER(PARTITION BY (COUNT(1))  ORDER BY  SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1) ASC NULLS LAST ) as "prev"
    FROM "malloytest"."state_facts" as base
    GROUP BY 2
    ORDER BY 2 ASC NULLS LAST
    LIMIT 5

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       base."name" as "name",
       RANK() OVER( ORDER BY COUNT(DISTINCT aircraft_models_0."aircraft_model_code") DESC, COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(aircraft_models_0."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) DESC ) as "r"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
    WHERE base."name" IN ('UNITED AIR LINES INC','FEDERAL EXPRESS CORP','AMERICAN AIRLINES INC','CESSNA AIRCRAFT COMPANY')
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/functions.spec.ts (369.645 s)
  concat
    ✕ works - redshift (10802 ms)
  round
    ✕ works - redshift (4823 ms)
  floor
    ✕ works - redshift (1348 ms)
  ceil
    ✕ works - redshift (1396 ms)
  length
    ✓ works - redshift (4655 ms)
  lower
    ✓ works - redshift (4766 ms)
  upper
    ✓ works - redshift (1411 ms)
  regexp_extract
    ✓ works - redshift (4637 ms)
  replace
    ✕ works - redshift (1334 ms)
  substr
    ✓ works - redshift (4792 ms)
  raw function call
    ✓ works - redshift (4829 ms)
  stddev
    ✕ works - redshift (6821 ms)
    ✕ works with struct - redshift (1373 ms)
    ✕ works with implicit parameter - redshift (1435 ms)
    ✕ works with filter - redshift (1388 ms)
  row_number
    ✓ works when the order by is a dimension  - redshift (1406 ms)
    ✓ works when the order by is a dimension in the other order  - redshift (4652 ms)
    ✓ works when the order by is a measure - redshift (1476 ms)
    ✓ works when the order by is a measure but there is no group by - redshift (7833 ms)
    ✕ works inside nest - redshift (1533 ms)
    ✕ works outside nest, but with a nest nearby - redshift (1388 ms)
  rank
    ✓ works ordered by dimension - redshift (7989 ms)
    ✕ works ordered by aggregate - redshift (1363 ms)
    ✕ works using unary minus in calculate block - redshift (1360 ms)
    ✕ properly isolated nested calculations - redshift (1407 ms)
  lag
    ✓ works with one param - redshift (7997 ms)
    ✓ works with expression field - redshift (8034 ms)
    ✓ works with expression - redshift (8910 ms)
    ✓ works with field, ordering by expression field - redshift (8992 ms)
    ✓ works with offset - redshift (9032 ms)
    ✕ works with default value - redshift (1508 ms)
    ✕ works with now as the default value - redshift (1371 ms)
  output field in calculate
    ✓ output field referenceable in calculate - redshift (4674 ms)
  first_value
    ✕ works in nest - redshift (1405 ms)
    ✕ works outside nest - redshift (1374 ms)
    ✓ works with an aggregate which is not in the query - redshift (7908 ms)
    ✕ works with a localized aggregate - redshift (1367 ms)
  trunc
    ✕ works - redshift (4680 ms)
  log
    ✓ works - redshift (4669 ms)
  ln
    ✓ works - redshift (4630 ms)
  exp
    ✓ works - redshift (4664 ms)
  cos
    ✓ works - redshift (4619 ms)
  acos
    ✓ works - redshift (1444 ms)
  sin
    ✓ works - redshift (1423 ms)
  asin
    ✓ works - redshift (1438 ms)
  tan
    ✓ works - redshift (1472 ms)
  atan
    ✓ works - redshift (1575 ms)
  atan2
    ✓ works - redshift (4737 ms)
  sqrt
    ✓ works - redshift (1433 ms)
  pow
    ✓ works - redshift (1461 ms)
  abs
    ✕ works - redshift (1383 ms)
  sign
    ✕ works - redshift (1365 ms)
  is_inf
    ✕ works - redshift (4737 ms)
  is_nan
    ✕ works - redshift (3481 ms)
  greatest
    ✕ works - redshift (1360 ms)
  least
    ✕ works - redshift (1367 ms)
  div
    ✕ works - redshift (1366 ms)
  strpos
    ✓ works - redshift (4706 ms)
  starts_with
    ✕ works - redshift (1430 ms)
  ends_with
    ✕ works - redshift (4666 ms)
  trim
    ✓ trim works - redshift (4657 ms)
  ltrim
    ✓ ltrim works - redshift (4650 ms)
  rtrim
    ✓ rtrim works - redshift (1422 ms)
  rand
    ✕ is usually not the same value - redshift (7029 ms)
  pi
    ✕ is pi - redshift (4750 ms)
  byte_length
    ✓ works - redshift (4704 ms)
  ifnull
    ✓ works - redshift (4658 ms)
  coalesce
    ✓ works - redshift (4721 ms)
  nullif
    ✓ works - redshift (4797 ms)
  chr
    ✓ works - redshift (4794 ms)
  ascii
    ✓ works - redshift (4659 ms)
  unicode
    ✓ works - redshift (4926 ms)
  string_repeat
    ✓ works - redshift (4721 ms)
    ○ skipped works floor decimal - redshift
  reverse
    ✓ works - redshift (4707 ms)
  lead
    ✓ works with one param - redshift (4732 ms)
    ✓ works with offset - redshift (6888 ms)
    ✕ works with default value - redshift (1369 ms)
  count_approx
    ○ skipped works generally
    ○ skipped works with fanout
  last_value
    ✓ works - redshift (7913 ms)
  avg_moving
    ✓ works - redshift (4658 ms)
    ✓ works forward - redshift (8019 ms)
  sum_moving
    ✓ works - redshift (4760 ms)
    ✓ works forward - redshift (4775 ms)
  min, max, sum / window, cumulative
    ✕ works - redshift (1362 ms)
  hll_functions
    ○ skipped hyperloglog basic - redshift
    ○ skipped hyperloglog combine - redshift
    ○ skipped hyperloglog import/export - redshift
  snowflake_statistical_functions
    ○ skipped stddev works - redshift
    ○ skipped stddev_pop works - redshift
    ○ skipped variance works - redshift
    ○ skipped var_pop works - redshift
    ○ skipped var_samp works - redshift
    ○ skipped corr works - redshift
    ○ skipped covar_pop works - redshift
    ○ skipped covar_samp works - redshift
    ○ skipped percent_rank basic - redshift
    ○ skipped percent_rank with partition - redshift
  dialect functions
    duckdb
      ○ skipped to_timestamp
      ○ skipped list_extract
      ○ skipped date_part,to_seconds
    trino
      ○ skipped from_unixtime
  redshift
    string_agg
      ✕ works no order by - redshift (1401 ms)
      ✕ works with dotted shortcut - redshift (1393 ms)
      ✕ works with order by field - redshift (1468 ms)
      ✓ works with order by direction - redshift (22 ms)
      ✕ works with multiple order_bys - redshift (1489 ms)
      ✕ works with order by expression - redshift (1369 ms)
      ✕ works with order by join expression - redshift (1477 ms)
      ✕ works with order asc - redshift (1381 ms)
      ✕ works with order desc - redshift (1362 ms)
      ✕ works with fanout and order_by - redshift (1399 ms)
      ✕ works with fanout - redshift (1580 ms)
      ✕ works with fanout and separator - redshift (1323 ms)
      ✓ works with limit - redshift (30 ms)
    string_agg_distinct
      ✕ actually distincts - redshift (1497 ms)
      ✕ works no order by - redshift (1362 ms)
      ✕ works with dotted shortcut - redshift (1312 ms)
      ✕ works with order by direction - redshift (1446 ms)
      ✕ works with order asc - redshift (1359 ms)
      ✕ works with order desc - redshift (1483 ms)
      ✓ works with limit - redshift (14 ms)
    partition_by
      ✕ works - redshift (15 ms)
      ✕ works with aggregate - redshift (1342 ms)
      ✕ works with multiple order_bys - redshift (1377 ms)
      ✓ can be used in a select (7883 ms)

  ● concat › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "17fe031e-4c96-4093-b8b9-ae9453f6435d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:24:55.563Z",
      "Database": "dev",
      "Duration": 53336150,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", boolean) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "50330e55-69ca-4b2d-b74e-7295c652f4a8",
      "RedshiftPid": 1073873261,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:24:55.668Z",
          "Duration": 53336150,
          "HasResultSet": false,
          "Id": "50330e55-69ca-4b2d-b74e-7295c652f4a8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:24:56.138Z"
        },
        {
          "CreatedAt": "2025-02-28T02:24:55.672Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", boolean) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "50330e55-69ca-4b2d-b74e-7295c652f4a8:2",
          "QueryString": "SELECT \n   CONCAT('foo','bar') as \"f0\",\n   CONCAT(1,'bar') as \"f1\",\n   CONCAT('cons',true) as \"f2\",\n   CONCAT('foo',DATE '2003-01-01') as \"f3\",\n   CONCAT('foo',TIMESTAMP '2003-01-01 12:00:00') as \"f4\",\n   '' as \"f5\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4,5,6\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:24:56.138Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:24:56.203Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● round › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: "1"

      119 |       // console.log(databaseName, result.sql);
      120 |       // console.log(result.data);
    > 121 |       expect(result.data.path(0, `f${i}`).value).toBe(testCase[1]);
          |                                                  ^
      122 |     });
      123 |   };
      124 |

      at test/src/databases/all/functions.spec.ts:121:50
          at Array.forEach (<anonymous>)
      at funcTestMultiple (test/src/databases/all/functions.spec.ts:118:15)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:161:7)

  ● floor › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "94c93d2b-0077-4ce3-a73f-b334c9b5e8ef",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:01.781Z",
      "Database": "dev",
      "Duration": 53411088,
      "Error": "Query #2 failed with ERROR: function floor(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "04db8646-ec82-4af0-a3c7-0baa0dfe77e5",
      "RedshiftPid": 1073987682,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:01.881Z",
          "Duration": 53411088,
          "HasResultSet": false,
          "Id": "04db8646-ec82-4af0-a3c7-0baa0dfe77e5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:02.314Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:01.884Z",
          "Duration": -1,
          "Error": "ERROR: function floor(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "04db8646-ec82-4af0-a3c7-0baa0dfe77e5:2",
          "QueryString": "SELECT \n   FLOOR(1.9) as \"f0\",\n   FLOOR(-1.9) as \"f1\",\n   FLOOR(NULL) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:02.314Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:02.379Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● ceil › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "16c85105-36f7-4aef-b6b5-8ca9936b2255",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:03.157Z",
      "Database": "dev",
      "Duration": 52677381,
      "Error": "Query #2 failed with ERROR: function ceil(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "07792093-c0d6-4749-b59c-238a2e133f6b",
      "RedshiftPid": 1073791095,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:03.262Z",
          "Duration": 52677381,
          "HasResultSet": false,
          "Id": "07792093-c0d6-4749-b59c-238a2e133f6b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:03.722Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:03.266Z",
          "Duration": -1,
          "Error": "ERROR: function ceil(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "07792093-c0d6-4749-b59c-238a2e133f6b:2",
          "QueryString": "SELECT \n   CEIL(1.9) as \"f0\",\n   CEIL(-1.9) as \"f1\",\n   CEIL(NULL) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:03.722Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:03.787Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● replace › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e1e47daa-04fe-441b-9af8-92cba83d7568",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:20.002Z",
      "Database": "dev",
      "Duration": 52732111,
      "Error": "Query #2 failed with ERROR: invalid input syntax for integer: \"g\"",
      "HasResultSet": false,
      "Id": "5b5c8d69-21f3-44c5-b9cc-c063c1a25af9",
      "RedshiftPid": 1073987687,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:20.095Z",
          "Duration": 52732111,
          "HasResultSet": false,
          "Id": "5b5c8d69-21f3-44c5-b9cc-c063c1a25af9:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:20.529Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:20.098Z",
          "Duration": -1,
          "Error": "ERROR: invalid input syntax for integer: \"g\"",
          "HasResultSet": false,
          "Id": "5b5c8d69-21f3-44c5-b9cc-c063c1a25af9:2",
          "QueryString": "SELECT \n   REPLACE('aaaa','a','c') as \"f0\",\n   REGEXP_REPLACE('aaaa', '.', 'c', 'g') as \"f1\",\n   REGEXP_REPLACE('axbxc', '(a).(b).(c)', '\\0 - \\1 - \\2 - \\3', 'g') as \"f2\",\n   REPLACE('aaaa','','c') as \"f3\",\n   REPLACE(NULL,'a','c') as \"f4\",\n   REPLACE('aaaa',NULL,'c') as \"f5\",\n   REPLACE('aaaa','a',NULL) as \"f6\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4,5,6,7\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:20.529Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:20.593Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● stddev › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: 29
    Received: "29"

      87 |     if (expected.success !== undefined) {
      88 |       const result = await run();
    > 89 |       expect(result.data.path(0, 'f').value).toBe(expected.success);
         |                                              ^
      90 |     } else {
      91 |       expect(run).rejects.toThrowError(expected.error);
      92 |     }

      at funcTestGeneral (test/src/databases/all/functions.spec.ts:89:46)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:298:7)

  ● stddev › works with struct - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9a4eb94b-fb17-4bc2-9c60-d94ed310e66b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:37.795Z",
      "Database": "dev",
      "Duration": 51524191,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
      "HasResultSet": false,
      "Id": "98573829-bf7e-4449-b4dd-c6782aca211d",
      "RedshiftPid": 1073766501,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:37.902Z",
          "Duration": 51524191,
          "HasResultSet": false,
          "Id": "98573829-bf7e-4449-b4dd-c6782aca211d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:38.346Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:37.906Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
          "HasResultSet": false,
          "Id": "98573829-bf7e-4449-b4dd-c6782aca211d:2",
          "QueryString": "SELECT \n   ROUND(((\n        SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0.\"aircraft_model_code\",aircraft_models_0.\"seats\"))::text)) a\n        ) a\n      ))::NUMERIC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:38.346Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:38.411Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● stddev › works with implicit parameter - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0bb174fb-3bd8-458c-a269-0c9c7e7a502e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:39.216Z",
      "Database": "dev",
      "Duration": 52240431,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
      "HasResultSet": false,
      "Id": "4f794a26-86fa-4931-9400-a6081f99cef1",
      "RedshiftPid": 1073881214,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:39.321Z",
          "Duration": 52240431,
          "HasResultSet": false,
          "Id": "4f794a26-86fa-4931-9400-a6081f99cef1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:39.797Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:39.324Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
          "HasResultSet": false,
          "Id": "4f794a26-86fa-4931-9400-a6081f99cef1:2",
          "QueryString": "SELECT \n   ROUND(((\n        SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0.\"aircraft_model_code\",aircraft_models_0.\"seats\"))::text)) a\n        ) a\n      ))::NUMERIC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:39.797Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:39.861Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● stddev › works with filter - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "82b98c2c-8360-4674-a6c0-fed41566e6cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:40.633Z",
      "Database": "dev",
      "Duration": 52044906,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
      "HasResultSet": false,
      "Id": "1f74f50a-7d6a-4966-afef-5f875ec0e8cc",
      "RedshiftPid": 1073848434,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:40.732Z",
          "Duration": 52044906,
          "HasResultSet": false,
          "Id": "1f74f50a-7d6a-4966-afef-5f875ec0e8cc:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:41.192Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:40.735Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
          "HasResultSet": false,
          "Id": "1f74f50a-7d6a-4966-afef-5f875ec0e8cc:2",
          "QueryString": "SELECT \n   ROUND(((\n        SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0.\"aircraft_model_code\",CASE WHEN 1=1 THEN aircraft_models_0.\"seats\" END))::text)) a\n        ) a\n      ))::NUMERIC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:41.192Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:41.257Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● row_number › works inside nest - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e733cdfa-3527-4316-ad6b-4e9496bf0623",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:57.489Z",
      "Database": "dev",
      "Duration": 44057639,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
      "HasResultSet": false,
      "Id": "6b3cc7ef-51c0-47ab-b226-8dc639c522e6",
      "RedshiftPid": 1073873013,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:57.603Z",
          "Duration": 44057639,
          "HasResultSet": false,
          "Id": "6b3cc7ef-51c0-47ab-b226-8dc639c522e6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:58.042Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:57.606Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
          "HasResultSet": false,
          "Id": "6b3cc7ef-51c0-47ab-b226-8dc639c522e6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      airports_0.\"county\"\n      END as \"county__1\",\n    CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base.\"state\"  ORDER BY  CASE WHEN group_set=1 THEN\n      airports_0.\"county\"\n      END asc NULLS LAST ) END as \"row_num__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n   LEFT JOIN \"malloytest\".\"airports\" AS airports_0\n    ON airports_0.\"state\"=base.\"state\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"county__1\" as \"county\", \n    \"row_num__1\"::DOUBLE PRECISION as \"row_num\"\n    ) as __x)  ORDER BY  \"county__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"q\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:58.042Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:58.108Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● row_number › works outside nest, but with a nest nearby - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "04c12d67-c82c-4cfd-862c-a98eb0f1051c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:58.915Z",
      "Database": "dev",
      "Duration": 43685151,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"row_num__0\") FILTER\", at line 15, column 28\n  Position: 453",
      "HasResultSet": false,
      "Id": "71c79e26-1079-485d-a9e5-4ddb52322197",
      "RedshiftPid": 1073971305,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:59.014Z",
          "Duration": 43685151,
          "HasResultSet": false,
          "Id": "71c79e26-1079-485d-a9e5-4ddb52322197:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:59.478Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:59.017Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"row_num__0\") FILTER\", at line 15, column 28\n  Position: 453",
          "HasResultSet": false,
          "Id": "71c79e26-1079-485d-a9e5-4ddb52322197:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  base.\"state\" asc NULLS LAST ) END as \"row_num__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__0\" as \"state\",\n  (ARRAY_AGG(\"row_num__0\") FILTER (WHERE group_set=0 AND \"row_num__0\" IS NOT NULL))[1] as \"row_num\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\"\n    ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"nested\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:59.478Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:59.542Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● rank › works ordered by aggregate - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ec2f86e2-1015-424b-a487-6821639d72d3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:08.278Z",
      "Database": "dev",
      "Duration": 52219436,
      "Error": "Query #2 failed with ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     631631[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073766504]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "2bf6dd2e-80b0-449e-bd36-83047083c762",
      "RedshiftPid": 1073766504,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:08.369Z",
          "Duration": 52219436,
          "HasResultSet": false,
          "Id": "2bf6dd2e-80b0-449e-bd36-83047083c762:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:08.828Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:08.372Z",
          "Duration": -1,
          "Error": "ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     631631[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073766504]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "2bf6dd2e-80b0-449e-bd36-83047083c762:2",
          "QueryString": "SELECT \n   SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) as \"first_letter\",\n   (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 as \"states_with_first_letter_ish\",\n   RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST ) as \"r\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:08.828Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:08.892Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● rank › works using unary minus in calculate block - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f92fa976-5ffc-48e9-906d-9e8db50b5217",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:09.650Z",
      "Database": "dev",
      "Duration": 43102273,
      "Error": "Query #2 failed with ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     631638[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073750122]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "ab7ff448-6b4d-4321-aca0-2dfa4c3652fe",
      "RedshiftPid": 1073750122,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:09.738Z",
          "Duration": 43102273,
          "HasResultSet": false,
          "Id": "ab7ff448-6b4d-4321-aca0-2dfa4c3652fe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:10.176Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:09.741Z",
          "Duration": -1,
          "Error": "ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     631638[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073750122]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "ab7ff448-6b4d-4321-aca0-2dfa4c3652fe:2",
          "QueryString": "SELECT \n   SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) as \"first_letter\",\n   (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 as \"states_with_first_letter_ish\",\n   RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST ) as \"r\",\n   -(RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST )) as \"neg_r\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:10.176Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:10.241Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● rank › properly isolated nested calculations - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8ce33039-1286-48dd-9b05-cb0fc485d8cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:11.029Z",
      "Database": "dev",
      "Duration": 43468589,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 39, column 73\n  Position: 1390",
      "HasResultSet": false,
      "Id": "18a7520d-a085-4755-891a-be9571894b9f",
      "RedshiftPid": 1073881211,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:11.129Z",
          "Duration": 43468589,
          "HasResultSet": false,
          "Id": "18a7520d-a085-4755-891a-be9571894b9f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:11.571Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:11.132Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 39, column 73\n  Position: 1390",
          "HasResultSet": false,
          "Id": "18a7520d-a085-4755-891a-be9571894b9f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"faa_region\" as \"faa_region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"id__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"fac_type\"\n      END as \"fac_type__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base.\"faa_region\"  ORDER BY  CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"id2__1\",\n    CASE WHEN group_set=2 THEN\n      AVG(base.\"elevation\")\n      END as \"avg_elevation__2\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"faa_region__0\" as \"faa_region__0\",\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    MAX(\"id__0\") as \"id__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"fac_type__1\"\n      END as \"fac_type__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    MAX(\"id2__1\") as \"id2__1\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"avg_elevation__2\"::DOUBLE PRECISION as \"avg_elevation\") as __x)) FILTER (WHERE group_set=2))[1]) as \"elevation__1\"\n  FROM __stage0\n  GROUP BY 1,2,5\n)\n, __stage2 AS (\n  SELECT\n    \"faa_region__0\" as \"faa_region\",\n    (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n    (ARRAY_AGG(\"id__0\") FILTER (WHERE group_set=0 AND \"id__0\" IS NOT NULL))[1] as \"id\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"fac_type__1\" as \"fac_type\", \n      \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n      \"id2__1\"::DOUBLE PRECISION as \"id2\", \n      \"elevation__1\" as \"elevation\"\n      ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_fac_type\"\n  FROM __stage1\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(by_fac_type_0,'id2')::double precision as \"id2\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"by_fac_type\") as by_fac_type_0 ON true\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:11.571Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:11.637Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."faa_region" as "faa_region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "airport_count__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "id__0",
        CASE WHEN group_set IN (1,2) THEN
          base."fac_type"
          END as "fac_type__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "airport_count__1",
        CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base."faa_region"  ORDER BY  CASE WHEN group_set=1 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "id2__1",
        CASE WHEN group_set=2 THEN
          AVG(base."elevation")
          END as "avg_elevation__2"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "faa_region__0" as "faa_region__0",
        MAX("airport_count__0") as "airport_count__0",
        MAX("id__0") as "id__0",
        CASE WHEN group_set IN (1,2) THEN
          "fac_type__1"
          END as "fac_type__1",
        MAX("airport_count__1") as "airport_count__1",
        MAX("id2__1") as "id2__1",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "avg_elevation__2"::DOUBLE PRECISION as "avg_elevation") as __x)) FILTER (WHERE group_set=2))[1]) as "elevation__1"
      FROM __stage0
      GROUP BY 1,2,5
    )
    , __stage2 AS (
      SELECT
        "faa_region__0" as "faa_region",
        (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
        (ARRAY_AGG("id__0") FILTER (WHERE group_set=0 AND "id__0" IS NOT NULL))[1] as "id",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "fac_type__1" as "fac_type", 
          "airport_count__1"::DOUBLE PRECISION as "airport_count", 
          "id2__1"::DOUBLE PRECISION as "id2", 
          "elevation__1" as "elevation"
          ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as "by_fac_type"
      FROM __stage1
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(by_fac_type_0,'id2')::double precision as "id2"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."by_fac_type") as by_fac_type_0 ON true
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8ce33039-1286-48dd-9b05-cb0fc485d8cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:11.029Z",
      "Database": "dev",
      "Duration": 43468589,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 39, column 73\n  Position: 1390",
      "HasResultSet": false,
      "Id": "18a7520d-a085-4755-891a-be9571894b9f",
      "RedshiftPid": 1073881211,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:11.129Z",
          "Duration": 43468589,
          "HasResultSet": false,
          "Id": "18a7520d-a085-4755-891a-be9571894b9f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:11.571Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:11.132Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 39, column 73\n  Position: 1390",
          "HasResultSet": false,
          "Id": "18a7520d-a085-4755-891a-be9571894b9f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"faa_region\" as \"faa_region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"id__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"fac_type\"\n      END as \"fac_type__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base.\"faa_region\"  ORDER BY  CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"id2__1\",\n    CASE WHEN group_set=2 THEN\n      AVG(base.\"elevation\")\n      END as \"avg_elevation__2\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"faa_region__0\" as \"faa_region__0\",\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    MAX(\"id__0\") as \"id__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"fac_type__1\"\n      END as \"fac_type__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    MAX(\"id2__1\") as \"id2__1\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"avg_elevation__2\"::DOUBLE PRECISION as \"avg_elevation\") as __x)) FILTER (WHERE group_set=2))[1]) as \"elevation__1\"\n  FROM __stage0\n  GROUP BY 1,2,5\n)\n, __stage2 AS (\n  SELECT\n    \"faa_region__0\" as \"faa_region\",\n    (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n    (ARRAY_AGG(\"id__0\") FILTER (WHERE group_set=0 AND \"id__0\" IS NOT NULL))[1] as \"id\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"fac_type__1\" as \"fac_type\", \n      \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n      \"id2__1\"::DOUBLE PRECISION as \"id2\", \n      \"elevation__1\" as \"elevation\"\n      ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_fac_type\"\n  FROM __stage1\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(by_fac_type_0,'id2')::double precision as \"id2\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"by_fac_type\") as by_fac_type_0 ON true\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:11.571Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:11.637Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:508:10)

  ● lag › works with default value - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8337d8a0-6f68-488b-89fb-b8d80b9d5770",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:55.430Z",
      "Database": "dev",
      "Duration": 44705993,
      "Error": "Query #2 failed with ERROR: Default parameter not be supported for window function lag",
      "HasResultSet": false,
      "Id": "b853cc20-33a0-40f4-b538-5c2d177c9669",
      "RedshiftPid": 1073873021,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:55.546Z",
          "Duration": 44705993,
          "HasResultSet": false,
          "Id": "b853cc20-33a0-40f4-b538-5c2d177c9669:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:56.007Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:55.549Z",
          "Duration": -1,
          "Error": "ERROR: Default parameter not be supported for window function lag",
          "HasResultSet": false,
          "Id": "b853cc20-33a0-40f4-b538-5c2d177c9669:2",
          "QueryString": "SELECT \n   base.\"state\" as \"state\",\n   LAG((base.\"state\"),1,'NONE') OVER(  ORDER BY  base.\"state\" asc NULLS LAST ) as \"prev_state\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:56.007Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:56.072Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● lag › works with now as the default value - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "29b2dced-2e78-4df7-b64c-6920312e518f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:56.900Z",
      "Database": "dev",
      "Duration": 52344324,
      "Error": "Query #2 failed with ERROR: Default parameter not be supported for window function lag",
      "HasResultSet": false,
      "Id": "e7add416-da13-40fd-ac9c-fb31eff85750",
      "RedshiftPid": 1073963222,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:56.990Z",
          "Duration": 52344324,
          "HasResultSet": false,
          "Id": "e7add416-da13-40fd-ac9c-fb31eff85750:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:57.441Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:56.994Z",
          "Duration": -1,
          "Error": "ERROR: Default parameter not be supported for window function lag",
          "HasResultSet": false,
          "Id": "e7add416-da13-40fd-ac9c-fb31eff85750:2",
          "QueryString": "SELECT \n   base.\"state\" as \"state\",\n   DATE_TRUNC('year', (LAG(TIMESTAMP '2011-11-11 11:11:11',1,LOCALTIMESTAMP) OVER(  ORDER BY  base.\"state\" asc NULLS LAST )))=DATE_TRUNC('year', LOCALTIMESTAMP) as \"lag_val\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:57.441Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:57.505Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● first_value › works in nest - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b1e07c26-dde5-4d61-a5ce-ccf04f11b334",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:02.961Z",
      "Database": "dev",
      "Duration": 44100788,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 27, column 16\n  Position: 880",
      "HasResultSet": false,
      "Id": "fccb0b04-76b1-4bb6-88ed-aabb8c4bd8f6",
      "RedshiftPid": 1073823869,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:03.054Z",
          "Duration": 44100788,
          "HasResultSet": false,
          "Id": "fccb0b04-76b1-4bb6-88ed-aabb8c4bd8f6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:03.494Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:03.058Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 27, column 16\n  Position: 880",
          "HasResultSet": false,
          "Id": "fccb0b04-76b1-4bb6-88ed-aabb8c4bd8f6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"county\"\n      END as \"county__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=1 THEN FIRST_VALUE(CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END) OVER(PARTITION BY group_set, base.\"state\"  ORDER BY  CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"first_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" IS NOT NULL\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"county__1\" as \"county\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n    \"first_count__1\"::DOUBLE PRECISION as \"first_count\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_county\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:03.494Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:03.560Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● first_value › works outside nest - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1139e2b7-b89d-4f2b-b3c4-47a6d512d3a8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:04.343Z",
      "Database": "dev",
      "Duration": 44837269,
      "Error": "Query #2 failed with ERROR: Aggregate window functions with an ORDER BY clause require a frame clause",
      "HasResultSet": false,
      "Id": "ce5b44db-a0f1-424d-8547-ccd12f91f9e6",
      "RedshiftPid": 1073963122,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:04.446Z",
          "Duration": 44837269,
          "HasResultSet": false,
          "Id": "ce5b44db-a0f1-424d-8547-ccd12f91f9e6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:04.866Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:04.449Z",
          "Duration": -1,
          "Error": "ERROR: Aggregate window functions with an ORDER BY clause require a frame clause",
          "HasResultSet": false,
          "Id": "ce5b44db-a0f1-424d-8547-ccd12f91f9e6:2",
          "QueryString": "SELECT \n   base.\"state\" as \"state\",\n   base.\"births\" as \"births\",\n   FIRST_VALUE((base.\"births\")) OVER(  ORDER BY  base.\"births\" desc NULLS LAST ) as \"most_births\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:04.866Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:04.931Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● first_value › works with a localized aggregate - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9e11c99a-b154-4233-8c3c-ab3a678f1fa5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:13.616Z",
      "Database": "dev",
      "Duration": 44650210,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "339b208d-48dd-4b12-b35d-ef9891e1eb9b",
      "RedshiftPid": 1073832040,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:13.726Z",
          "Duration": 44650210,
          "HasResultSet": false,
          "Id": "339b208d-48dd-4b12-b35d-ef9891e1eb9b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:14.171Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:13.729Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "339b208d-48dd-4b12-b35d-ef9891e1eb9b:2",
          "QueryString": "SELECT \n   aircraft_models_0.\"seats\" as \"seats\",\n   LAG(COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)) OVER(  ORDER BY  aircraft_models_0.\"seats\" asc NULLS LAST ) as \"prev_sum_of_seats\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:14.171Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:14.235Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● trunc › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: "2"

      119 |       // console.log(databaseName, result.sql);
      120 |       // console.log(result.data);
    > 121 |       expect(result.data.path(0, `f${i}`).value).toBe(testCase[1]);
          |                                                  ^
      122 |     });
      123 |   };
      124 |

      at test/src/databases/all/functions.spec.ts:121:50
          at Array.forEach (<anonymous>)
      at funcTestMultiple (test/src/databases/all/functions.spec.ts:118:15)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:717:7)

  ● abs › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c97f2fb4-51bf-4284-9afe-a76a018c30f3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:53.262Z",
      "Database": "dev",
      "Duration": 42628474,
      "Error": "Query #2 failed with ERROR: function abs(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "de5381dc-c2e5-4aa7-a774-04b8455f241d",
      "RedshiftPid": 1073774714,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:53.344Z",
          "Duration": 42628474,
          "HasResultSet": false,
          "Id": "de5381dc-c2e5-4aa7-a774-04b8455f241d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:53.793Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:53.347Z",
          "Duration": -1,
          "Error": "ERROR: function abs(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "de5381dc-c2e5-4aa7-a774-04b8455f241d:2",
          "QueryString": "SELECT \n   ABS(-3) as \"f0\",\n   ABS(3) as \"f1\",\n   ABS(NULL) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:53.793Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:53.858Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● sign › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "723adfb2-8d5d-481b-9c6a-7468daad6cbc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:54.615Z",
      "Database": "dev",
      "Duration": 53220495,
      "Error": "Query #2 failed with ERROR: function sign(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "fe50fc5b-f530-4a0b-aa54-b453ff3070e0",
      "RedshiftPid": 1073782902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:54.717Z",
          "Duration": 53220495,
          "HasResultSet": false,
          "Id": "fe50fc5b-f530-4a0b-aa54-b453ff3070e0:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:55.170Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:54.720Z",
          "Duration": -1,
          "Error": "ERROR: function sign(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "fe50fc5b-f530-4a0b-aa54-b453ff3070e0:2",
          "QueryString": "SELECT \n   SIGN(100) as \"f0\",\n   SIGN(-2) as \"f1\",\n   SIGN(0) as \"f2\",\n   SIGN(NULL) as \"f3\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:55.170Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:55.233Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● is_inf › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: null

      119 |       // console.log(databaseName, result.sql);
      120 |       // console.log(result.data);
    > 121 |       expect(result.data.path(0, `f${i}`).value).toBe(testCase[1]);
          |                                                  ^
      122 |     });
      123 |   };
      124 |

      at test/src/databases/all/functions.spec.ts:121:50
          at Array.forEach (<anonymous>)
      at funcTestMultiple (test/src/databases/all/functions.spec.ts:118:15)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:846:7)

  ● is_nan › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "64c9562b-7aa3-40da-a4c0-7df9dcdf186a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:00.708Z",
      "Database": "dev",
      "Duration": 43929850,
      "Error": "Query #2 failed with ERROR: Assert\n  Detail: \n  -----------------------------------------------\n  error:  Assert\n  code:      1000\n  context:   precision <= 38 - precision=32767, 38=38. \n  query:     -1[child_sequence:1]\n  location:  pg_utils.cpp:5380\n  process:   padbmaster [pid=1073946732]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "d0c013a5-aa64-4bcc-9067-7db20fe0b5f2",
      "RedshiftPid": 1073946732,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:00.796Z",
          "Duration": 43929850,
          "HasResultSet": false,
          "Id": "d0c013a5-aa64-4bcc-9067-7db20fe0b5f2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:03.027Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:00.800Z",
          "Duration": -1,
          "Error": "ERROR: Assert\n  Detail: \n  -----------------------------------------------\n  error:  Assert\n  code:      1000\n  context:   precision <= 38 - precision=32767, 38=38. \n  query:     -1[child_sequence:1]\n  location:  pg_utils.cpp:5380\n  process:   padbmaster [pid=1073946732]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "d0c013a5-aa64-4bcc-9067-7db20fe0b5f2:2",
          "QueryString": "SELECT \n   COALESCE(CAST('NaN' AS double precision) = NUMERIC 'NaN', false) as \"f0\",\n   COALESCE(100 = NUMERIC 'NaN', false) as \"f1\",\n   COALESCE(NULL = NUMERIC 'NaN', false) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:03.027Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:03.090Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● greatest › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "35a08650-e584-4ac2-b718-9336fa8af38f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:04.214Z",
      "Database": "dev",
      "Duration": 45368466,
      "Error": "Query #2 failed with ERROR: function num_nulls(integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "52466ef7-c670-442d-81dd-064a83eb6d8a",
      "RedshiftPid": 1073791100,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:04.310Z",
          "Duration": 45368466,
          "HasResultSet": false,
          "Id": "52466ef7-c670-442d-81dd-064a83eb6d8a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:04.744Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:04.313Z",
          "Duration": -1,
          "Error": "ERROR: function num_nulls(integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "52466ef7-c670-442d-81dd-064a83eb6d8a:2",
          "QueryString": "SELECT \n   CASE WHEN NUM_NULLS(1,10,-100) > 0 THEN NULL ELSE GREATEST(1,10,-100) END as \"f0\",\n   ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE GREATEST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)>=DATE '2004-01-01') and ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE GREATEST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)<DATE '2005-01-01') as \"f1\",\n   (CASE WHEN NUM_NULLS(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') > 0 THEN NULL ELSE GREATEST(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') END)=TIMESTAMP '2023-05-26 11:59:00' as \"f2\",\n   CASE WHEN NUM_NULLS('a','b') > 0 THEN NULL ELSE GREATEST('a','b') END as \"f3\",\n   CASE WHEN NUM_NULLS(1,NULL,0) > 0 THEN NULL ELSE GREATEST(1,NULL,0) END as \"f4\",\n   CASE WHEN NUM_NULLS(NULL,NULL) > 0 THEN NULL ELSE GREATEST(NULL,NULL) END as \"f5\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4,5,6\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:04.744Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:04.810Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● least › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f4fe9506-8587-47d9-9270-ef6bf3401247",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:05.590Z",
      "Database": "dev",
      "Duration": 45037011,
      "Error": "Query #2 failed with ERROR: function num_nulls(integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "fe62db65-dfa0-42b6-9e49-70933eccfd4b",
      "RedshiftPid": 1073782894,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:05.676Z",
          "Duration": 45037011,
          "HasResultSet": false,
          "Id": "fe62db65-dfa0-42b6-9e49-70933eccfd4b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:06.110Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:05.679Z",
          "Duration": -1,
          "Error": "ERROR: function num_nulls(integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "fe62db65-dfa0-42b6-9e49-70933eccfd4b:2",
          "QueryString": "SELECT \n   CASE WHEN NUM_NULLS(1,10,-100) > 0 THEN NULL ELSE LEAST(1,10,-100) END as \"f0\",\n   ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE LEAST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)>=DATE '1994-01-01') and ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE LEAST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)<DATE '1995-01-01') as \"f1\",\n   (CASE WHEN NUM_NULLS(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') > 0 THEN NULL ELSE LEAST(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') END)=TIMESTAMP '2023-05-26 11:58:00' as \"f2\",\n   CASE WHEN NUM_NULLS('a','b') > 0 THEN NULL ELSE LEAST('a','b') END as \"f3\",\n   CASE WHEN NUM_NULLS(1,NULL,0) > 0 THEN NULL ELSE LEAST(1,NULL,0) END as \"f4\",\n   CASE WHEN NUM_NULLS(NULL,NULL) > 0 THEN NULL ELSE LEAST(NULL,NULL) END as \"f5\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4,5,6\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:06.110Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:06.176Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● div › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b5525e51-33ed-48fb-82cd-9ac87c0a37b3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:06.935Z",
      "Database": "dev",
      "Duration": 52239539,
      "Error": "Query #2 failed with ERROR: function div(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "eed55c99-3666-4ac2-b137-5aac5a1616a8",
      "RedshiftPid": 1073979491,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:07.024Z",
          "Duration": 52239539,
          "HasResultSet": false,
          "Id": "eed55c99-3666-4ac2-b137-5aac5a1616a8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:07.468Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:07.027Z",
          "Duration": -1,
          "Error": "ERROR: function div(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "eed55c99-3666-4ac2-b137-5aac5a1616a8:2",
          "QueryString": "SELECT \n   DIV(3,2) as \"f0\",\n   DIV(NULL,2) as \"f1\",\n   DIV(2,NULL) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:07.468Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:07.533Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● starts_with › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b2593d6c-e3c3-4106-93cd-c56e2dc7f8cb",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:13.034Z",
      "Database": "dev",
      "Duration": 43140568,
      "Error": "Query #2 failed with ERROR: function starts_with(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5b181d38-5fe3-4984-879c-c7728c97bf6a",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:13.119Z",
          "Duration": 43140568,
          "HasResultSet": false,
          "Id": "5b181d38-5fe3-4984-879c-c7728c97bf6a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:13.582Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:13.144Z",
          "Duration": -1,
          "Error": "ERROR: function starts_with(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5b181d38-5fe3-4984-879c-c7728c97bf6a:2",
          "QueryString": "SELECT \n   COALESCE(STARTS_WITH('hello world', 'hello'), false) as \"f0\",\n   COALESCE(STARTS_WITH('hello world', 'world'), false) as \"f1\",\n   COALESCE(STARTS_WITH(NULL, 'world'), false) as \"f2\",\n   COALESCE(STARTS_WITH('hello world', NULL), false) as \"f3\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:13.582Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:13.646Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● ends_with › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: null

      119 |       // console.log(databaseName, result.sql);
      120 |       // console.log(result.data);
    > 121 |       expect(result.data.path(0, `f${i}`).value).toBe(testCase[1]);
          |                                                  ^
      122 |     });
      123 |   };
      124 |

      at test/src/databases/all/functions.spec.ts:121:50
          at Array.forEach (<anonymous>)
      at funcTestMultiple (test/src/databases/all/functions.spec.ts:118:15)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:935:7)

  ● rand › is usually not the same value - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: null

      87 |     if (expected.success !== undefined) {
      88 |       const result = await run();
    > 89 |       expect(result.data.path(0, 'f').value).toBe(expected.success);
         |                                              ^
      90 |     } else {
      91 |       expect(run).rejects.toThrowError(expected.error);
      92 |     }

      at funcTestGeneral (test/src/databases/all/functions.spec.ts:89:46)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:990:7)

  ● pi › is pi - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: null

      87 |     if (expected.success !== undefined) {
      88 |       const result = await run();
    > 89 |       expect(result.data.path(0, 'f').value).toBe(expected.success);
         |                                              ^
      90 |     } else {
      91 |       expect(run).rejects.toThrowError(expected.error);
      92 |     }

      at funcTestGeneral (test/src/databases/all/functions.spec.ts:89:46)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:995:7)

  ● lead › works with default value - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6c1a195d-cb30-4747-bc4a-2c03d6b96257",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:29:35.948Z",
      "Database": "dev",
      "Duration": 44579012,
      "Error": "Query #2 failed with ERROR: Default parameter not be supported for window function lead",
      "HasResultSet": false,
      "Id": "5cfcfd96-d43c-4aa3-8b41-8c52f62f54d1",
      "RedshiftPid": 1073848432,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:29:36.030Z",
          "Duration": 44579012,
          "HasResultSet": false,
          "Id": "5cfcfd96-d43c-4aa3-8b41-8c52f62f54d1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:29:36.462Z"
        },
        {
          "CreatedAt": "2025-02-28T02:29:36.034Z",
          "Duration": -1,
          "Error": "ERROR: Default parameter not be supported for window function lead",
          "HasResultSet": false,
          "Id": "5cfcfd96-d43c-4aa3-8b41-8c52f62f54d1:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  LIMIT 10\n)\nSELECT \n   base.\"state\" as \"state\",\n   LEAD((base.\"state\"),1,'NONE') OVER(  ORDER BY  base.\"state\" asc NULLS LAST ) as \"next_state\"\nFROM __stage0 as base\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:29:36.462Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:29:36.527Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● min, max, sum / window, cumulative › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d88511c4-d3ce-4816-8202-56bb73964316",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:07.438Z",
      "Database": "dev",
      "Duration": 44470485,
      "Error": "Query #2 failed with ERROR: Aggregate window functions with an ORDER BY clause require a frame clause",
      "HasResultSet": false,
      "Id": "02239399-307e-43f3-835d-222ec565b569",
      "RedshiftPid": 1073766511,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:07.529Z",
          "Duration": 44470485,
          "HasResultSet": false,
          "Id": "02239399-307e-43f3-835d-222ec565b569:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:07.961Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:07.532Z",
          "Duration": -1,
          "Error": "ERROR: Aggregate window functions with an ORDER BY clause require a frame clause",
          "HasResultSet": false,
          "Id": "02239399-307e-43f3-835d-222ec565b569:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  LIMIT 5\n)\nSELECT \n   base.\"state\" as \"state\",\n   base.\"births\" as \"births\",\n   MIN((base.\"births\")) OVER(  ORDER BY  base.\"births\" asc NULLS LAST ) as \"min_c\",\n   MAX((base.\"births\")) OVER(  ORDER BY  base.\"births\" asc NULLS LAST ) as \"max_c\",\n   SUM((base.\"births\")) OVER(  ORDER BY  base.\"births\" asc NULLS LAST ) as \"sum_c\",\n   MIN((base.\"births\")) OVER(  ) as \"min_w\",\n   MAX((base.\"births\")) OVER(  ) as \"max_w\",\n   SUM((base.\"births\")) OVER(  ) as \"sum_w\"\nFROM __stage0 as base\nGROUP BY 1,2\nORDER BY 2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:07.961Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:08.026Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift › string_agg › works no order by - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4c0dd09e-96c1-48a6-b8dd-c4a1ef689caf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:08.825Z",
      "Database": "dev",
      "Duration": 51767068,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20",
      "RedshiftPid": 1073963112,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:08.913Z",
          "Duration": 51767068,
          "HasResultSet": false,
          "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:09.361Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:08.917Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:09.361Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:09.425Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4c0dd09e-96c1-48a6-b8dd-c4a1ef689caf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:08.825Z",
      "Database": "dev",
      "Duration": 51767068,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20",
      "RedshiftPid": 1073963112,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:08.913Z",
          "Duration": 51767068,
          "HasResultSet": false,
          "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:09.361Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:08.917Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:09.361Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:09.425Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1475:11)

  ● redshift › string_agg › works with dotted shortcut - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a3984623-06ec-4d9f-ab3c-a95e14daa897",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:10.195Z",
      "Database": "dev",
      "Duration": 46006182,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a",
      "RedshiftPid": 1073938547,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:10.298Z",
          "Duration": 46006182,
          "HasResultSet": false,
          "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:10.726Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:10.301Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:10.726Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:10.791Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a3984623-06ec-4d9f-ab3c-a95e14daa897",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:10.195Z",
      "Database": "dev",
      "Duration": 46006182,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a",
      "RedshiftPid": 1073938547,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:10.298Z",
          "Duration": 46006182,
          "HasResultSet": false,
          "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:10.726Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:10.301Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:10.726Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:10.791Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1482:11)

  ● redshift › string_agg › works with order by field - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a7981366-fd05-452d-9099-a7429a71bf57",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:11.636Z",
      "Database": "dev",
      "Duration": 45181493,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0",
      "RedshiftPid": 1073963113,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:11.749Z",
          "Duration": 45181493,
          "HasResultSet": false,
          "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:12.191Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:11.752Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:12.191Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:12.256Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name") as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a7981366-fd05-452d-9099-a7429a71bf57",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:11.636Z",
      "Database": "dev",
      "Duration": 45181493,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0",
      "RedshiftPid": 1073963113,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:11.749Z",
          "Duration": 45181493,
          "HasResultSet": false,
          "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:12.191Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:11.752Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:12.191Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:12.256Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1492:11)

  ● redshift › string_agg › works with multiple order_bys - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ab535bdc-c28b-485e-91e4-54ca282e3800",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:13.136Z",
      "Database": "dev",
      "Duration": 44755550,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4",
      "RedshiftPid": 1073840350,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:13.257Z",
          "Duration": 44755550,
          "HasResultSet": false,
          "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:13.751Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:13.261Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"city\", base.\"name\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:13.751Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:13.776Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."city", base."name") as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ab535bdc-c28b-485e-91e4-54ca282e3800",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:13.136Z",
      "Database": "dev",
      "Duration": 44755550,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4",
      "RedshiftPid": 1073840350,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:13.257Z",
          "Duration": 44755550,
          "HasResultSet": false,
          "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:13.751Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:13.261Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"city\", base.\"name\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:13.751Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:13.776Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1516:11)

  ● redshift › string_agg › works with order by expression - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d9f39699-8981-402a-ad60-2288010fca6d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:13.144Z",
      "Database": "dev",
      "Duration": 51997912,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe",
      "RedshiftPid": 1073758311,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:13.267Z",
          "Duration": 51997912,
          "HasResultSet": false,
          "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:13.731Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:13.270Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:13.731Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:13.796Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d9f39699-8981-402a-ad60-2288010fca6d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:13.144Z",
      "Database": "dev",
      "Duration": 51997912,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe",
      "RedshiftPid": 1073758311,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:13.267Z",
          "Duration": 51997912,
          "HasResultSet": false,
          "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:13.731Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:13.270Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:13.731Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:13.796Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1504:11)

  ● redshift › string_agg › works with order by expression - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ec56d775-9efe-4467-9ad3-7e5ae691ac66",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:14.577Z",
      "Database": "dev",
      "Duration": 44520717,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062",
      "RedshiftPid": 1073750124,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:14.671Z",
          "Duration": 44520717,
          "HasResultSet": false,
          "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:15.091Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:14.674Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY LENGTH(base.\"name\")) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:15.091Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:15.156Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY LENGTH(base."name")) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ec56d775-9efe-4467-9ad3-7e5ae691ac66",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:14.577Z",
      "Database": "dev",
      "Duration": 44520717,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062",
      "RedshiftPid": 1073750124,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:14.671Z",
          "Duration": 44520717,
          "HasResultSet": false,
          "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:15.091Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:14.674Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY LENGTH(base.\"name\")) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:15.091Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:15.156Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1532:11)

  ● redshift › string_agg › works with order by join expression - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9553a15-73bb-46b3-8b92-2e358829fb4a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:15.989Z",
      "Database": "dev",
      "Duration": 52774617,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171",
      "RedshiftPid": 1073774690,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:16.114Z",
          "Duration": 52774617,
          "HasResultSet": false,
          "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:16.589Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:16.117Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY aircraft_models_0.\"model\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nWHERE base.\"name\" ~ '.*ADVENTURE.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:16.589Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:16.654Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',' ORDER BY aircraft_models_0."model") as "f"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
    WHERE base."name" ~ '.*ADVENTURE.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9553a15-73bb-46b3-8b92-2e358829fb4a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:15.989Z",
      "Database": "dev",
      "Duration": 52774617,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171",
      "RedshiftPid": 1073774690,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:16.114Z",
          "Duration": 52774617,
          "HasResultSet": false,
          "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:16.589Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:16.117Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY aircraft_models_0.\"model\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nWHERE base.\"name\" ~ '.*ADVENTURE.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:16.589Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:16.654Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1542:11)

  ● redshift › string_agg › works with order asc - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "357f916f-bd64-4b3e-a32a-2549feb542f2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:17.429Z",
      "Database": "dev",
      "Duration": 44869047,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75",
      "RedshiftPid": 1073979489,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:17.527Z",
          "Duration": 44869047,
          "HasResultSet": false,
          "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:17.940Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:17.531Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:17.940Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:18.006Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "357f916f-bd64-4b3e-a32a-2549feb542f2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:17.429Z",
      "Database": "dev",
      "Duration": 44869047,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75",
      "RedshiftPid": 1073979489,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:17.527Z",
          "Duration": 44869047,
          "HasResultSet": false,
          "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:17.940Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:17.531Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:17.940Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:18.006Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1556:11)

  ● redshift › string_agg › works with order desc - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5c195f7f-a5cd-4fde-8b0b-db4ec1d09e02",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:18.792Z",
      "Database": "dev",
      "Duration": 44529233,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5",
      "RedshiftPid": 1073873023,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:18.884Z",
          "Duration": 44529233,
          "HasResultSet": false,
          "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:19.330Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:18.887Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" DESC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:19.330Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:19.394Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" DESC) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5c195f7f-a5cd-4fde-8b0b-db4ec1d09e02",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:18.792Z",
      "Database": "dev",
      "Duration": 44529233,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5",
      "RedshiftPid": 1073873023,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:18.884Z",
          "Duration": 44529233,
          "HasResultSet": false,
          "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:19.330Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:18.887Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" DESC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:19.330Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:19.394Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1570:11)

  ● redshift › string_agg › works with fanout and order_by - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8e2b0a19-f96c-4086-b92b-4b79f9e6ad98",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:20.165Z",
      "Database": "dev",
      "Duration": 44471312,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"->>'f2'), ',' ORDER\", at line 4, column 49\n  Position: 121",
      "HasResultSet": false,
      "Id": "3f356856-f935-4dae-8990-fb2112bd6633",
      "RedshiftPid": 1073971307,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:20.273Z",
          "Duration": 44471312,
          "HasResultSet": false,
          "Id": "3f356856-f935-4dae-8990-fb2112bd6633:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:20.717Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:20.276Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"->>'f2'), ',' ORDER\", at line 4, column 49\n  Position: 121",
          "HasResultSet": false,
          "Id": "3f356856-f935-4dae-8990-fb2112bd6633:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), ',' ORDER BY (a::json->>'f3'), (a::json->>'f4')) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",base.\"state\",base.\"popular_name\",base.\"state\"))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:20.717Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:20.782Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), ',' ORDER BY (a::json->>'f3'), (a::json->>'f4')) as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",base."state",base."popular_name",base."state"))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8e2b0a19-f96c-4086-b92b-4b79f9e6ad98",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:20.165Z",
      "Database": "dev",
      "Duration": 44471312,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"->>'f2'), ',' ORDER\", at line 4, column 49\n  Position: 121",
      "HasResultSet": false,
      "Id": "3f356856-f935-4dae-8990-fb2112bd6633",
      "RedshiftPid": 1073971307,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:20.273Z",
          "Duration": 44471312,
          "HasResultSet": false,
          "Id": "3f356856-f935-4dae-8990-fb2112bd6633:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:20.717Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:20.276Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"->>'f2'), ',' ORDER\", at line 4, column 49\n  Position: 121",
          "HasResultSet": false,
          "Id": "3f356856-f935-4dae-8990-fb2112bd6633:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), ',' ORDER BY (a::json->>'f3'), (a::json->>'f4')) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",base.\"state\",base.\"popular_name\",base.\"state\"))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:20.717Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:20.782Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1597:11)

  ● redshift › string_agg › works with fanout - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "febfe1dc-7825-4fdf-80ba-61316895f787",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:21.699Z",
      "Database": "dev",
      "Duration": 53428738,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 163",
      "HasResultSet": false,
      "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d",
      "RedshiftPid": 1073799292,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:21.821Z",
          "Duration": 53428738,
          "HasResultSet": false,
          "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:22.300Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:21.825Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 163",
          "HasResultSet": false,
          "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), ',') as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",'o'))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:22.300Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:22.366Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), ',') as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",'o'))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "febfe1dc-7825-4fdf-80ba-61316895f787",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:21.699Z",
      "Database": "dev",
      "Duration": 53428738,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 163",
      "HasResultSet": false,
      "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d",
      "RedshiftPid": 1073799292,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:21.821Z",
          "Duration": 53428738,
          "HasResultSet": false,
          "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:22.300Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:21.825Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 163",
          "HasResultSet": false,
          "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), ',') as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",'o'))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:22.300Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:22.366Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1618:11)

  ● redshift › string_agg › works with fanout and separator - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f2274ea3-3754-4953-997d-72347868debd",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:23.118Z",
      "Database": "dev",
      "Duration": 44206237,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 162",
      "HasResultSet": false,
      "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6",
      "RedshiftPid": 1073840233,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:23.205Z",
          "Duration": 44206237,
          "HasResultSet": false,
          "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:23.633Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:23.208Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 162",
          "HasResultSet": false,
          "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), '') as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",'o',''))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:23.633Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:23.699Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), '') as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",'o',''))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f2274ea3-3754-4953-997d-72347868debd",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:23.118Z",
      "Database": "dev",
      "Duration": 44206237,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 162",
      "HasResultSet": false,
      "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6",
      "RedshiftPid": 1073840233,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:23.205Z",
          "Duration": 44206237,
          "HasResultSet": false,
          "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:23.633Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:23.208Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 162",
          "HasResultSet": false,
          "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), '') as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",'o',''))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:23.633Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:23.699Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1634:11)

  ● redshift › string_agg_distinct › actually distincts - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3264a843-15f7-43e1-8bd1-3de70e6e5a71",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:24.575Z",
      "Database": "dev",
      "Duration": 52881235,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"aircraft_0.\"name\", ',' ORDER\", at line 2, column 47\n  Position: 55",
      "HasResultSet": false,
      "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de",
      "RedshiftPid": 1073741930,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:24.696Z",
          "Duration": 52881235,
          "HasResultSet": false,
          "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:25.157Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:24.699Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"aircraft_0.\"name\", ',' ORDER\", at line 2, column 47\n  Position: 55",
          "HasResultSet": false,
          "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT aircraft_0.\"name\", ',' ORDER BY aircraft_0.\"name\" ASC) as \"f_dist\",\n   STRING_AGG(aircraft_0.\"name\", ',' ORDER BY aircraft_0.\"name\") as \"f_all\"\nFROM \"malloytest\".\"aircraft_models\" as base\n LEFT JOIN \"malloytest\".\"aircraft\" AS aircraft_0\n  ON base.\"aircraft_model_code\"=aircraft_0.\"aircraft_model_code\"\nWHERE aircraft_0.\"name\" IN ('RAYTHEON AIRCRAFT COMPANY','FOWLER IRA R DBA')\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:25.157Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:25.221Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(DISTINCT aircraft_0."name", ',' ORDER BY aircraft_0."name" ASC) as "f_dist",
       STRING_AGG(aircraft_0."name", ',' ORDER BY aircraft_0."name") as "f_all"
    FROM "malloytest"."aircraft_models" as base
     LEFT JOIN "malloytest"."aircraft" AS aircraft_0
      ON base."aircraft_model_code"=aircraft_0."aircraft_model_code"
    WHERE aircraft_0."name" IN ('RAYTHEON AIRCRAFT COMPANY','FOWLER IRA R DBA')

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3264a843-15f7-43e1-8bd1-3de70e6e5a71",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:24.575Z",
      "Database": "dev",
      "Duration": 52881235,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"aircraft_0.\"name\", ',' ORDER\", at line 2, column 47\n  Position: 55",
      "HasResultSet": false,
      "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de",
      "RedshiftPid": 1073741930,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:24.696Z",
          "Duration": 52881235,
          "HasResultSet": false,
          "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:25.157Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:24.699Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"aircraft_0.\"name\", ',' ORDER\", at line 2, column 47\n  Position: 55",
          "HasResultSet": false,
          "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT aircraft_0.\"name\", ',' ORDER BY aircraft_0.\"name\" ASC) as \"f_dist\",\n   STRING_AGG(aircraft_0.\"name\", ',' ORDER BY aircraft_0.\"name\") as \"f_all\"\nFROM \"malloytest\".\"aircraft_models\" as base\n LEFT JOIN \"malloytest\".\"aircraft\" AS aircraft_0\n  ON base.\"aircraft_model_code\"=aircraft_0.\"aircraft_model_code\"\nWHERE aircraft_0.\"name\" IN ('RAYTHEON AIRCRAFT COMPANY','FOWLER IRA R DBA')\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:25.157Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:25.221Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1681:11)

  ● redshift › string_agg_distinct › works no order by - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "97e1235c-f0f4-480d-af30-1b9993cfde7a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:25.964Z",
      "Database": "dev",
      "Duration": 45430489,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6",
      "RedshiftPid": 1073897594,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:26.072Z",
          "Duration": 45430489,
          "HasResultSet": false,
          "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:26.486Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:26.075Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:26.486Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:26.561Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(DISTINCT base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "97e1235c-f0f4-480d-af30-1b9993cfde7a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:25.964Z",
      "Database": "dev",
      "Duration": 45430489,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6",
      "RedshiftPid": 1073897594,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:26.072Z",
          "Duration": 45430489,
          "HasResultSet": false,
          "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:26.486Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:26.075Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:26.486Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:26.561Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1692:11)

  ● redshift › string_agg_distinct › works with dotted shortcut - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d7ed30fa-7d6c-4569-909b-55ae86ec6a09",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:27.310Z",
      "Database": "dev",
      "Duration": 44587411,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50",
      "RedshiftPid": 1073791073,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:27.397Z",
          "Duration": 44587411,
          "HasResultSet": false,
          "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:27.817Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:27.400Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:27.817Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:27.884Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(DISTINCT base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d7ed30fa-7d6c-4569-909b-55ae86ec6a09",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:27.310Z",
      "Database": "dev",
      "Duration": 44587411,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50",
      "RedshiftPid": 1073791073,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:27.397Z",
          "Duration": 44587411,
          "HasResultSet": false,
          "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:27.817Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:27.400Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:27.817Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:27.884Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1701:11)

  ● redshift › string_agg_distinct › works with order by direction - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4459a7a3-0c3f-4e4c-beda-cdbbbf55e548",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:28.703Z",
      "Database": "dev",
      "Duration": 44607969,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 41\n  Position: 49",
      "HasResultSet": false,
      "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1",
      "RedshiftPid": 1073864817,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:28.822Z",
          "Duration": 44607969,
          "HasResultSet": false,
          "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:29.269Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:28.826Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 41\n  Position: 49",
          "HasResultSet": false,
          "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:29.269Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:29.334Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4459a7a3-0c3f-4e4c-beda-cdbbbf55e548",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:28.703Z",
      "Database": "dev",
      "Duration": 44607969,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 41\n  Position: 49",
      "HasResultSet": false,
      "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1",
      "RedshiftPid": 1073864817,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:28.822Z",
          "Duration": 44607969,
          "HasResultSet": false,
          "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:29.269Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:28.826Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 41\n  Position: 49",
          "HasResultSet": false,
          "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:29.269Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:29.334Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1713:11)

  ● redshift › string_agg_distinct › works with order asc - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bb05094e-ab42-45d5-8319-a44398650117",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:30.111Z",
      "Database": "dev",
      "Duration": 48621904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
      "HasResultSet": false,
      "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff",
      "RedshiftPid": 1073823850,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:30.197Z",
          "Duration": 48621904,
          "HasResultSet": false,
          "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:30.646Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:30.200Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
          "HasResultSet": false,
          "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:30.646Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:30.712Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bb05094e-ab42-45d5-8319-a44398650117",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:30.111Z",
      "Database": "dev",
      "Duration": 48621904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
      "HasResultSet": false,
      "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff",
      "RedshiftPid": 1073823850,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:30.197Z",
          "Duration": 48621904,
          "HasResultSet": false,
          "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:30.646Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:30.200Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
          "HasResultSet": false,
          "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:30.646Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:30.712Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1727:11)

  ● redshift › string_agg_distinct › works with order desc - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "46a3c540-6209-4c2f-a908-dc720c8cd73f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:31.535Z",
      "Database": "dev",
      "Duration": 50520500,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
      "HasResultSet": false,
      "Id": "1362ddce-15be-4877-9381-18a859cd2c2f",
      "RedshiftPid": 1073946731,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:31.662Z",
          "Duration": 50520500,
          "HasResultSet": false,
          "Id": "1362ddce-15be-4877-9381-18a859cd2c2f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:32.131Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:31.666Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
          "HasResultSet": false,
          "Id": "1362ddce-15be-4877-9381-18a859cd2c2f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" DESC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:32.131Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:32.195Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" DESC) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "46a3c540-6209-4c2f-a908-dc720c8cd73f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:31.535Z",
      "Database": "dev",
      "Duration": 50520500,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
      "HasResultSet": false,
      "Id": "1362ddce-15be-4877-9381-18a859cd2c2f",
      "RedshiftPid": 1073946731,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:31.662Z",
          "Duration": 50520500,
          "HasResultSet": false,
          "Id": "1362ddce-15be-4877-9381-18a859cd2c2f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:32.131Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:31.666Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
          "HasResultSet": false,
          "Id": "1362ddce-15be-4877-9381-18a859cd2c2f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" DESC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:32.131Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:32.195Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1741:11)

  ● redshift › partition_by › works - redshift

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 16: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |         where: dep_time < @2002
      |                ^
    line 4: year() requires time type, not 'sql native'
      |           yr is year(dep_time)
      |                 ^
    line 5: quarter() requires time type, not 'sql native'
      |           qtr is quarter(dep_time)
      |                  ^

      1787 |         order_by: yr, qtr
      1788 |         where: dep_time < @2002
    > 1789 |       }`).malloyResultMatches(expressionModel, [
           |           ^
      1790 |         {yr: 2000, qtr: 1, qtr_flights: 12148, last_yr_qtr_flights: null},
      1791 |         {yr: 2000, qtr: 2, qtr_flights: 11599, last_yr_qtr_flights: null},
      1792 |         {yr: 2000, qtr: 3, qtr_flights: 12075, last_yr_qtr_flights: null},

      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1789:11)

  ● redshift › partition_by › works with aggregate - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "81a97b31-54e5-4224-97ea-00adec3510df",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:32.949Z",
      "Database": "dev",
      "Duration": 44003938,
      "Error": "Query #2 failed with ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     632399[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073913964]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216",
      "RedshiftPid": 1073913964,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:33.049Z",
          "Duration": 44003938,
          "HasResultSet": false,
          "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:33.487Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:33.053Z",
          "Duration": -1,
          "Error": "ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     632399[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073913964]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216:2",
          "QueryString": "SELECT \n   COUNT(1) as \"c\",\n   SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) as \"l\",\n   LAG((SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1))) OVER(PARTITION BY (COUNT(1))  ORDER BY  SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) ASC NULLS LAST ) as \"prev\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 2\nORDER BY 2 ASC NULLS LAST\nLIMIT 5\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:33.487Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:33.552Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COUNT(1) as "c",
       SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1) as "l",
       LAG((SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1))) OVER(PARTITION BY (COUNT(1))  ORDER BY  SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1) ASC NULLS LAST ) as "prev"
    FROM "malloytest"."state_facts" as base
    GROUP BY 2
    ORDER BY 2 ASC NULLS LAST
    LIMIT 5

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "81a97b31-54e5-4224-97ea-00adec3510df",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:32.949Z",
      "Database": "dev",
      "Duration": 44003938,
      "Error": "Query #2 failed with ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     632399[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073913964]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216",
      "RedshiftPid": 1073913964,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:33.049Z",
          "Duration": 44003938,
          "HasResultSet": false,
          "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:33.487Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:33.053Z",
          "Duration": -1,
          "Error": "ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     632399[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073913964]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216:2",
          "QueryString": "SELECT \n   COUNT(1) as \"c\",\n   SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) as \"l\",\n   LAG((SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1))) OVER(PARTITION BY (COUNT(1))  ORDER BY  SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) ASC NULLS LAST ) as \"prev\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 2\nORDER BY 2 ASC NULLS LAST\nLIMIT 5\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:33.487Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:33.552Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1813:11)

  ● redshift › partition_by › works with multiple order_bys - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a59695d0-e0d4-4a5d-bedc-1291064fe207",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:34.345Z",
      "Database": "dev",
      "Duration": 55117992,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74",
      "RedshiftPid": 1073758322,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:34.444Z",
          "Duration": 55117992,
          "HasResultSet": false,
          "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:34.873Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:34.447Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74:2",
          "QueryString": "SELECT \n   base.\"name\" as \"name\",\n   RANK() OVER( ORDER BY COUNT(DISTINCT aircraft_models_0.\"aircraft_model_code\") DESC, COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) DESC ) as \"r\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nWHERE base.\"name\" IN ('UNITED AIR LINES INC','FEDERAL EXPRESS CORP','AMERICAN AIRLINES INC','CESSNA AIRCRAFT COMPANY')\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:34.873Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:34.939Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       base."name" as "name",
       RANK() OVER( ORDER BY COUNT(DISTINCT aircraft_models_0."aircraft_model_code") DESC, COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(aircraft_models_0."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) DESC ) as "r"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
    WHERE base."name" IN ('UNITED AIR LINES INC','FEDERAL EXPRESS CORP','AMERICAN AIRLINES INC','CESSNA AIRCRAFT COMPANY')
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a59695d0-e0d4-4a5d-bedc-1291064fe207",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:34.345Z",
      "Database": "dev",
      "Duration": 55117992,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74",
      "RedshiftPid": 1073758322,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:34.444Z",
          "Duration": 55117992,
          "HasResultSet": false,
          "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:34.873Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:34.447Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74:2",
          "QueryString": "SELECT \n   base.\"name\" as \"name\",\n   RANK() OVER( ORDER BY COUNT(DISTINCT aircraft_models_0.\"aircraft_model_code\") DESC, COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) DESC ) as \"r\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nWHERE base.\"name\" IN ('UNITED AIR LINES INC','FEDERAL EXPRESS CORP','AMERICAN AIRLINES INC','CESSNA AIRCRAFT COMPANY')\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:34.873Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:34.939Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1839:11)

  console.log
    Error in SQL:
     SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(aircraft_models_0."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "total_seats",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(CASE WHEN aircraft_models_0."manufacturer"='BOEING' THEN aircraft_models_0."seats" END,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "boeing_seats"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "popular_name__0" as "popular_name",
      (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 3

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set IN (1,2,3) THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__2",
        CASE WHEN group_set=3 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "inline_sum__3"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      GROUP BY 1,3,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 WHEN group_set=3 THEN 1 ELSE group_set END as group_set,
        MAX("airport_count__0") as "airport_count__0",
        CASE WHEN group_set IN (1,2,3) THEN
          "popular_name__1"
          END as "popular_name__1",
        MAX("airport_count__1") as "airport_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "airport_count__2"::DOUBLE PRECISION as "airport_count"
          ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as "by_state__1",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "inline_sum__3"::DOUBLE PRECISION as "inline_sum") as __x)) FILTER (WHERE group_set=3))[1]) as "inline__1"
      FROM __stage0
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count", 
        "by_state__1" as "by_state", 
        "inline__1" as "inline"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as "o"
    FROM __stage1

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set IN (1,2) THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,3,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        MAX("airport_count__0") as "airport_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "popular_name__1"
          END as "popular_name__1",
        MAX("airport_count__1") as "airport_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "airport_count__2"::DOUBLE PRECISION as "airport_count"
          ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as "by_state__1"
      FROM __stage0
      GROUP BY 1,3
    )
    , __stage2 AS (
      SELECT
        (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "airport_count__1"::DOUBLE PRECISION as "airport_count", 
          "by_state__1" as "by_state"
          ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as "o"
      FROM __stage1
    )
    SELECT 
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(by_state_0,'airport_count')::double precision),0) as "airport_count"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."o") as o_0 ON true
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(o_0,'by_state')) as by_state_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          aircraft_models_0."manufacturer"
          END as "manufacturer__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1"
      FROM "malloytest"."aircraft" as base
       LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
        ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE (group_set NOT IN (1) OR (group_set IN (1) AND aircraft_models_0."manufacturer" LIKE 'B%'))
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "manufacturer__1" as "manufacturer", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count"
        ) as __x)  ORDER BY  "aircraft_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as "b"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."region" as "region__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1"
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."region" IS NOT NULL
      GROUP BY 1,2,3
      HAVING (group_set<>1 OR (group_set=1 AND (CASE WHEN group_set=1 THEN
        COUNT(1)
        END)>50))
    )
    SELECT
      "region__0" as "region",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count"
        ) as __x)  ORDER BY  "state__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:10]),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST
    LIMIT 10

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."region" as "region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1",
        CASE WHEN group_set=2 THEN
          base."city"
          END as "city__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "aircraft_count__2",
        CASE WHEN group_set=1 THEN CASE WHEN (CASE WHEN group_set=1 THEN
          COUNT(1)
          END)>45 THEN 0 ELSE 1 END END as __delete__1,
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>500 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,6
      HAVING (group_set<>2 OR (group_set=2 AND (CASE WHEN group_set=2 THEN
        COUNT(1)
        END)>5))
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1,2) THEN __delete__0 END) OVER(partition by CAST("region__0" as VARCHAR)) as __shaving__0,
        MAX(CASE WHEN group_set IN (1,2) THEN __delete__1 END) OVER(partition by CAST("state__1" as VARCHAR),CAST("region__0" as VARCHAR)) as __shaving__1 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1,2) AND __shaving__0=1)OR (group_set IN (1,2) AND __shaving__1=1)
      ))
    , __stage3 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "region__0" as "region__0",
        MAX("aircraft_count__0") as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "state__1"
          END as "state__1",
        MAX("aircraft_count__1") as "aircraft_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "city__2" as "city", 
          "aircraft_count__2"::DOUBLE PRECISION as "aircraft_count"
          ) as __x)  ORDER BY  "aircraft_count__2" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_city__1"
      FROM __stage2
      GROUP BY 1,2,4
    )
    SELECT
      "region__0" as "region",
      (ARRAY_AGG("aircraft_count__0") FILTER (WHERE group_set=0 AND "aircraft_count__0" IS NOT NULL))[1] as "aircraft_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count", 
        "by_city__1" as "by_city"
        ) as __x)  ORDER BY  "aircraft_count__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage3
    GROUP BY 1
    ORDER BY 2 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        (FLOOR(base."seats"*1.0/20))*20.0 as "seats_bucketed__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_model_count__0",
        CASE WHEN group_set=1 THEN
          base."engines"
          END as "engines__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_model_count__1",
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>400 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft_models" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE ((FLOOR(base."seats"*1.0/20))*20.0)>0
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST("seats_bucketed__0" as VARCHAR)) as __shaving__0 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)
      ))
    SELECT
      "seats_bucketed__0" as "seats_bucketed",
      (ARRAY_AGG("aircraft_model_count__0") FILTER (WHERE group_set=0 AND "aircraft_model_count__0" IS NOT NULL))[1] as "aircraft_model_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "engines__1"::DOUBLE PRECISION as "engines", 
        "aircraft_model_count__1"::DOUBLE PRECISION as "aircraft_model_count"
        ) as __x)  ORDER BY  "aircraft_model_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "foo"
    FROM __stage2
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 1) as "first__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 2)
          END as "first_two__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1",
        CASE WHEN group_set=2 THEN
          SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 3)
          END as "first_three__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "aircraft_count__2"
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,6
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "first__0" as "first__0",
        MAX("aircraft_count__0") as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "first_two__1"
          END as "first_two__1",
        MAX("aircraft_count__1") as "aircraft_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "first_three__2" as "first_three", 
          "aircraft_count__2"::DOUBLE PRECISION as "aircraft_count"
          ) as __x)  ORDER BY  "aircraft_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "aircraft__1"
      FROM __stage0
      GROUP BY 1,2,4
    )
    , __stage2 AS (
      SELECT
        "first__0" as "first",
        (ARRAY_AGG("aircraft_count__0") FILTER (WHERE group_set=0 AND "aircraft_count__0" IS NOT NULL))[1] as "aircraft_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "first_two__1" as "first_two", 
          "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count", 
          "aircraft__1" as "aircraft"
          ) as __x)  ORDER BY  "aircraft_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "aircraft"
      FROM __stage1
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(aircraft_0,'first_three') as "first_three",
       base."aircraft_count" as "aircraft_count"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."aircraft") as aircraft_2 ON true
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(aircraft_2,'aircraft')) as aircraft_0 ON true
    ORDER BY 2 desc NULLS LAST,1 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         'x' as "expect",
         'x' as "got"
      FROM (SELECT 1 as one) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}x{single-quote} == x',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base."got")) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         '''' as "expect",
         '''' as "got"
      FROM (SELECT 1 as one) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{single-quote}{single-quote} == {single-quote}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base."got")) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         '\' as "expect",
         '\' as "got"
      FROM (SELECT 1 as one) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{backslash}{single-quote} == {backslash}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base."got")) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/expr.spec.ts (89.425 s)
  redshift
    ✕ basic calculations (4757 ms)
    ✓ join dependencies tracked from annotated references (1410 ms)
    ✕ Floor() -or any function bustage with aggregates (1412 ms)
    ✓ computes mod correctly (2909 ms)
    ✕ model: expression fixups. (1396 ms)
    ✕ simple turtle (2785 ms)
    ✕ double turtle (1403 ms)
    ✕ double turtle - pipeline (1369 ms)
    ✓ model: turtle (1432 ms)
    ✕ model: filtered turtle (1398 ms)
    ✓ model: simple having (1493 ms)
    ✕ model: having in a nest (1377 ms)
    ✕ model: turtle having on main (1424 ms)
    ✕ model: having float group by partition (1347 ms)
    ✓ model: aggregate functions distinct min max (1473 ms)
    ✕ model: dates named (1460 ms)
    ✓ named query metadata undefined (1480 ms)
    ✓ named query metadata named (1419 ms)
    ✓ named query metadata named head of pipeline (1407 ms)
    ✓ filtered explores basic (1437 ms)
    ✓ sql cast (1422 ms)
    ✓ case expressions (1469 ms)
    ✓ sql safe cast (1540 ms)
    ✓ many_field.sum() has correct locality (1416 ms)
    ✕ query with aliasname used twice (1357 ms)
    ✓ joined filtered sources (1418 ms)
    ✓ joined filtered explores with NO dependencies (1472 ms)
    ✓ nullish ?? operator (3061 ms)
    ✕ dimension expressions expanded with parens properly (1433 ms)
    ○ skipped joined filtered explores with dependencies
    sql expr functions
      ✓ sql_string (1436 ms)
      ✓ sql_number (1569 ms)
      ✓ sql_number can be sum()med (1481 ms)
      ✕ sql_boolean (1524 ms)
      ✓ sql_date (1521 ms)
      ✓ sql_timestamp (1429 ms)
      ✓ with ${TABLE}.field (1466 ms)
      ✓ with ${field} (1402 ms)
      [not yet supported]
        ✓ ${view_name.dimension_name} - one path (25 ms)
        ✓ ${view_name.dimension_name} - multiple paths (13 ms)
        ✓ ${view_name.SQL_TABLE_NAME} (14 ms)
    alternations with not-eq
      ○ skipped x not-eq y or z : x eq y
      ○ skipped x not-eq y or z : x eq z
      ○ skipped x not-eq y or z : else
      ○ skipped x not-eq y and not-eq z : x eq y
      ○ skipped x not-eq y and not-eq z : x eq z
      ○ skipped x not-eq y and not-eq z : else
    string literal quoting
      ✕ quote single character (1417 ms)
      ✕ quote single quote (1383 ms)
      ✓ quote double quote (1453 ms)
      ✕ quote backslash (1374 ms)
    null safe booleans
      ✓ select boolean (2833 ms)
      ✕ not boolean (1598 ms)
      ✕ numeric != non-null to null (1474 ms)
      ✕ string !~ non-null to null (1406 ms)
      ✕ regex !~ non-null to null (1427 ms)
      ✕ numeric != null-to-null (1417 ms)
      ✕ string !~ null-to-null (1416 ms)

  ● redshift › basic calculations

    SQL Generated:
      SELECT 
         COALESCE(SUM(base."seats"),0) as "total_seats",
         COALESCE(SUM(base."seats"),0) as "total_seats2",
         COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0) as "boeing_seats",
         COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0) as "boeing_seats2",
         (COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0)) as "boeing_seats3",
         FLOOR(((COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0))*1.0/(COALESCE(SUM(base."seats"),0)))*100) as "percent_boeing_floor"
      FROM "malloytest"."aircraft_models" as base
      
    Expected {percent_boeing_floor: 55} Got: Non Numeric '"55"'

      76 |           percent_boeing_floor,
      77 |       }
    > 78 |     `).malloyResultMatches(expressionModel, {
         |        ^
      79 |       total_seats: 452415,
      80 |       total_seats2: 452415,
      81 |       boeing_seats: 252771,

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:78:8)

  ● redshift › Floor() -or any function bustage with aggregates

    SQL Generated:
      SELECT 
         FLOOR(((COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0))*1.0/(COALESCE(SUM(base."seats"),0)))*100) as "percent_boeing_floor",
         FLOOR(((COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0))*1.0/(COALESCE(SUM(base."seats"),0)))*100) as "percent_boeing_floor2"
      FROM "malloytest"."aircraft_models" as base
      
    Expected {percent_boeing_floor: 55} Got: Non Numeric '"55"'
    Expected {percent_boeing_floor2: 55} Got: Non Numeric '"55"'

      104 |           percent_boeing_floor2 is floor(boeing_seats / total_seats * 100)
      105 |       }
    > 106 |     `).malloyResultMatches(expressionModel, {
          |        ^
      107 |       percent_boeing_floor: 55,
      108 |       percent_boeing_floor2: 55,
      109 |     });

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:106:8)

  ● redshift › model: expression fixups.

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1ccc17b8-d19f-4e5b-852b-de0820eeeab4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:05.237Z",
      "Database": "dev",
      "Duration": 53284226,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "53f6c755-4d84-4889-95d1-155c236d56c2",
      "RedshiftPid": 1073963113,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:05.319Z",
          "Duration": 53284226,
          "HasResultSet": false,
          "Id": "53f6c755-4d84-4889-95d1-155c236d56c2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:05.781Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:05.322Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "53f6c755-4d84-4889-95d1-155c236d56c2:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"total_seats\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(CASE WHEN aircraft_models_0.\"manufacturer\"='BOEING' THEN aircraft_models_0.\"seats\" END,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"boeing_seats\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:05.781Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:05.846Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(aircraft_models_0."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "total_seats",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(CASE WHEN aircraft_models_0."manufacturer"='BOEING' THEN aircraft_models_0."seats" END,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "boeing_seats"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1ccc17b8-d19f-4e5b-852b-de0820eeeab4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:05.237Z",
      "Database": "dev",
      "Duration": 53284226,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "53f6c755-4d84-4889-95d1-155c236d56c2",
      "RedshiftPid": 1073963113,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:05.319Z",
          "Duration": 53284226,
          "HasResultSet": false,
          "Id": "53f6c755-4d84-4889-95d1-155c236d56c2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:05.781Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:05.322Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "53f6c755-4d84-4889-95d1-155c236d56c2:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"total_seats\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(CASE WHEN aircraft_models_0.\"manufacturer\"='BOEING' THEN aircraft_models_0.\"seats\" END,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"boeing_seats\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:05.781Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:05.846Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:126:8)

  ● redshift › simple turtle

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7753f7b7-8734-4842-9524-cec7af53abc1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:08.048Z",
      "Database": "dev",
      "Duration": 44539767,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 20, column 34\n  Position: 569",
      "HasResultSet": false,
      "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8",
      "RedshiftPid": 1073799291,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:08.139Z",
          "Duration": 44539767,
          "HasResultSet": false,
          "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:08.572Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:08.142Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 20, column 34\n  Position: 569",
          "HasResultSet": false,
          "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 3\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:08.572Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:08.638Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "popular_name__0" as "popular_name",
      (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 3

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7753f7b7-8734-4842-9524-cec7af53abc1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:08.048Z",
      "Database": "dev",
      "Duration": 44539767,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 20, column 34\n  Position: 569",
      "HasResultSet": false,
      "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8",
      "RedshiftPid": 1073799291,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:08.139Z",
          "Duration": 44539767,
          "HasResultSet": false,
          "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:08.572Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:08.142Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 20, column 34\n  Position: 569",
          "HasResultSet": false,
          "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 3\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:08.572Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:08.638Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:146:8)

  ● redshift › double turtle

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7fe2928c-5f09-46f0-b2b9-8a2c8d385a1d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:09.439Z",
      "Database": "dev",
      "Duration": 44029358,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1247",
      "HasResultSet": false,
      "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2",
      "RedshiftPid": 1073856611,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:09.538Z",
          "Duration": 44029358,
          "HasResultSet": false,
          "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:09.966Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:09.541Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1247",
          "HasResultSet": false,
          "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2,3) THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__2\",\n    CASE WHEN group_set=3 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"inline_sum__3\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  GROUP BY 1,3,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 WHEN group_set=3 THEN 1 ELSE group_set END as group_set,\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2,3) THEN\n      \"popular_name__1\"\n      END as \"popular_name__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n      ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as \"by_state__1\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"inline_sum__3\"::DOUBLE PRECISION as \"inline_sum\") as __x)) FILTER (WHERE group_set=3))[1]) as \"inline__1\"\n  FROM __stage0\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n    \"by_state__1\" as \"by_state\", \n    \"inline__1\" as \"inline\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as \"o\"\nFROM __stage1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:09.966Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:10.031Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set IN (1,2,3) THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__2",
        CASE WHEN group_set=3 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "inline_sum__3"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      GROUP BY 1,3,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 WHEN group_set=3 THEN 1 ELSE group_set END as group_set,
        MAX("airport_count__0") as "airport_count__0",
        CASE WHEN group_set IN (1,2,3) THEN
          "popular_name__1"
          END as "popular_name__1",
        MAX("airport_count__1") as "airport_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "airport_count__2"::DOUBLE PRECISION as "airport_count"
          ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as "by_state__1",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "inline_sum__3"::DOUBLE PRECISION as "inline_sum") as __x)) FILTER (WHERE group_set=3))[1]) as "inline__1"
      FROM __stage0
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count", 
        "by_state__1" as "by_state", 
        "inline__1" as "inline"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as "o"
    FROM __stage1

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7fe2928c-5f09-46f0-b2b9-8a2c8d385a1d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:09.439Z",
      "Database": "dev",
      "Duration": 44029358,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1247",
      "HasResultSet": false,
      "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2",
      "RedshiftPid": 1073856611,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:09.538Z",
          "Duration": 44029358,
          "HasResultSet": false,
          "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:09.966Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:09.541Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1247",
          "HasResultSet": false,
          "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2,3) THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__2\",\n    CASE WHEN group_set=3 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"inline_sum__3\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  GROUP BY 1,3,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 WHEN group_set=3 THEN 1 ELSE group_set END as group_set,\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2,3) THEN\n      \"popular_name__1\"\n      END as \"popular_name__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n      ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as \"by_state__1\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"inline_sum__3\"::DOUBLE PRECISION as \"inline_sum\") as __x)) FILTER (WHERE group_set=3))[1]) as \"inline__1\"\n  FROM __stage0\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n    \"by_state__1\" as \"by_state\", \n    \"inline__1\" as \"inline\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as \"o\"\nFROM __stage1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:09.966Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:10.031Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:170:8)

  ● redshift › double turtle - pipeline

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "df63b982-6dfd-4e0a-8d6f-04b66892e0fc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:10.827Z",
      "Database": "dev",
      "Duration": 43162790,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 34, column 18\n  Position: 1114",
      "HasResultSet": false,
      "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4",
      "RedshiftPid": 1073774705,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:10.918Z",
          "Duration": 43162790,
          "HasResultSet": false,
          "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:11.337Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:10.922Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 34, column 18\n  Position: 1114",
          "HasResultSet": false,
          "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,3,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"popular_name__1\"\n      END as \"popular_name__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n      ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as \"by_state__1\"\n  FROM __stage0\n  GROUP BY 1,3\n)\n, __stage2 AS (\n  SELECT\n    (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n      \"by_state__1\" as \"by_state\"\n      ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as \"o\"\n  FROM __stage1\n)\nSELECT \n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(by_state_0,'airport_count')::double precision),0) as \"airport_count\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"o\") as o_0 ON true\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(o_0,'by_state')) as by_state_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:11.337Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:11.402Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set IN (1,2) THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,3,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        MAX("airport_count__0") as "airport_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "popular_name__1"
          END as "popular_name__1",
        MAX("airport_count__1") as "airport_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "airport_count__2"::DOUBLE PRECISION as "airport_count"
          ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as "by_state__1"
      FROM __stage0
      GROUP BY 1,3
    )
    , __stage2 AS (
      SELECT
        (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "airport_count__1"::DOUBLE PRECISION as "airport_count", 
          "by_state__1" as "by_state"
          ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as "o"
      FROM __stage1
    )
    SELECT 
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(by_state_0,'airport_count')::double precision),0) as "airport_count"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."o") as o_0 ON true
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(o_0,'by_state')) as by_state_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "df63b982-6dfd-4e0a-8d6f-04b66892e0fc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:10.827Z",
      "Database": "dev",
      "Duration": 43162790,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 34, column 18\n  Position: 1114",
      "HasResultSet": false,
      "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4",
      "RedshiftPid": 1073774705,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:10.918Z",
          "Duration": 43162790,
          "HasResultSet": false,
          "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:11.337Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:10.922Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 34, column 18\n  Position: 1114",
          "HasResultSet": false,
          "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,3,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"popular_name__1\"\n      END as \"popular_name__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n      ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as \"by_state__1\"\n  FROM __stage0\n  GROUP BY 1,3\n)\n, __stage2 AS (\n  SELECT\n    (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n      \"by_state__1\" as \"by_state\"\n      ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as \"o\"\n  FROM __stage1\n)\nSELECT \n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(by_state_0,'airport_count')::double precision),0) as \"airport_count\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"o\") as o_0 ON true\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(o_0,'by_state')) as by_state_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:11.337Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:11.402Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:196:8)

  ● redshift › model: filtered turtle

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "da6e69b5-0739-48d8-91cb-70483e62cfe5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:13.654Z",
      "Database": "dev",
      "Duration": 52407797,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 16\n  Position: 762",
      "HasResultSet": false,
      "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad",
      "RedshiftPid": 1073840253,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:13.752Z",
          "Duration": 52407797,
          "HasResultSet": false,
          "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:14.202Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:13.755Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 16\n  Position: 762",
          "HasResultSet": false,
          "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      aircraft_models_0.\"manufacturer\"\n      END as \"manufacturer__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n   LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n    ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE (group_set NOT IN (1) OR (group_set IN (1) AND aircraft_models_0.\"manufacturer\" LIKE 'B%'))\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"manufacturer__1\" as \"manufacturer\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as \"b\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:14.202Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:14.268Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          aircraft_models_0."manufacturer"
          END as "manufacturer__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1"
      FROM "malloytest"."aircraft" as base
       LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
        ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE (group_set NOT IN (1) OR (group_set IN (1) AND aircraft_models_0."manufacturer" LIKE 'B%'))
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "manufacturer__1" as "manufacturer", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count"
        ) as __x)  ORDER BY  "aircraft_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as "b"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "da6e69b5-0739-48d8-91cb-70483e62cfe5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:13.654Z",
      "Database": "dev",
      "Duration": 52407797,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 16\n  Position: 762",
      "HasResultSet": false,
      "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad",
      "RedshiftPid": 1073840253,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:13.752Z",
          "Duration": 52407797,
          "HasResultSet": false,
          "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:14.202Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:13.755Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 16\n  Position: 762",
          "HasResultSet": false,
          "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      aircraft_models_0.\"manufacturer\"\n      END as \"manufacturer__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n   LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n    ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE (group_set NOT IN (1) OR (group_set IN (1) AND aircraft_models_0.\"manufacturer\" LIKE 'B%'))\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"manufacturer__1\" as \"manufacturer\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as \"b\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:14.202Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:14.268Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:215:8)

  ● redshift › model: having in a nest

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c63a59ad-c7ae-4afe-8c74-853e3bc09b59",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:16.534Z",
      "Database": "dev",
      "Duration": 44431824,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 677",
      "HasResultSet": false,
      "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c",
      "RedshiftPid": 1073922153,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:16.631Z",
          "Duration": 44431824,
          "HasResultSet": false,
          "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:17.055Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:16.634Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 677",
          "HasResultSet": false,
          "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"region\" as \"region__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"region\" IS NOT NULL\n  GROUP BY 1,2,3\n  HAVING (group_set<>1 OR (group_set=1 AND (CASE WHEN group_set=1 THEN\n    COUNT(1)\n    END)>50))\n)\nSELECT\n  \"region__0\" as \"region\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\"\n    ) as __x)  ORDER BY  \"state__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:10]),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\nLIMIT 10\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:17.055Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:17.121Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."region" as "region__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1"
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."region" IS NOT NULL
      GROUP BY 1,2,3
      HAVING (group_set<>1 OR (group_set=1 AND (CASE WHEN group_set=1 THEN
        COUNT(1)
        END)>50))
    )
    SELECT
      "region__0" as "region",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count"
        ) as __x)  ORDER BY  "state__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:10]),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST
    LIMIT 10

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c63a59ad-c7ae-4afe-8c74-853e3bc09b59",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:16.534Z",
      "Database": "dev",
      "Duration": 44431824,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 677",
      "HasResultSet": false,
      "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c",
      "RedshiftPid": 1073922153,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:16.631Z",
          "Duration": 44431824,
          "HasResultSet": false,
          "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:17.055Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:16.634Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 677",
          "HasResultSet": false,
          "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"region\" as \"region__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"region\" IS NOT NULL\n  GROUP BY 1,2,3\n  HAVING (group_set<>1 OR (group_set=1 AND (CASE WHEN group_set=1 THEN\n    COUNT(1)\n    END)>50))\n)\nSELECT\n  \"region__0\" as \"region\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\"\n    ) as __x)  ORDER BY  \"state__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:10]),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\nLIMIT 10\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:17.055Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:17.121Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:246:8)

  ● redshift › model: turtle having on main

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ee2af781-ab3b-42b1-845c-3fc1f941807a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:17.914Z",
      "Database": "dev",
      "Duration": 45545964,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 56, column 18\n  Position: 1911",
      "HasResultSet": false,
      "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3",
      "RedshiftPid": 1073930472,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:18.013Z",
          "Duration": 45545964,
          "HasResultSet": false,
          "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:18.465Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:18.016Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 56, column 18\n  Position: 1911",
          "HasResultSet": false,
          "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"region\" as \"region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"city\"\n      END as \"city__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"aircraft_count__2\",\n    CASE WHEN group_set=1 THEN CASE WHEN (CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)>45 THEN 0 ELSE 1 END END as __delete__1,\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>500 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,6\n  HAVING (group_set<>2 OR (group_set=2 AND (CASE WHEN group_set=2 THEN\n    COUNT(1)\n    END)>5))\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1,2) THEN __delete__0 END) OVER(partition by CAST(\"region__0\" as VARCHAR)) as __shaving__0,\n    MAX(CASE WHEN group_set IN (1,2) THEN __delete__1 END) OVER(partition by CAST(\"state__1\" as VARCHAR),CAST(\"region__0\" as VARCHAR)) as __shaving__1 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1,2) AND __shaving__0=1)OR (group_set IN (1,2) AND __shaving__1=1)\n  ))\n, __stage3 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"region__0\" as \"region__0\",\n    MAX(\"aircraft_count__0\") as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"state__1\"\n      END as \"state__1\",\n    MAX(\"aircraft_count__1\") as \"aircraft_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"city__2\" as \"city\", \n      \"aircraft_count__2\"::DOUBLE PRECISION as \"aircraft_count\"\n      ) as __x)  ORDER BY  \"aircraft_count__2\" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_city__1\"\n  FROM __stage2\n  GROUP BY 1,2,4\n)\nSELECT\n  \"region__0\" as \"region\",\n  (ARRAY_AGG(\"aircraft_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_count__0\" IS NOT NULL))[1] as \"aircraft_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n    \"by_city__1\" as \"by_city\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage3\nGROUP BY 1\nORDER BY 2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:18.465Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:18.531Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."region" as "region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1",
        CASE WHEN group_set=2 THEN
          base."city"
          END as "city__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "aircraft_count__2",
        CASE WHEN group_set=1 THEN CASE WHEN (CASE WHEN group_set=1 THEN
          COUNT(1)
          END)>45 THEN 0 ELSE 1 END END as __delete__1,
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>500 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,6
      HAVING (group_set<>2 OR (group_set=2 AND (CASE WHEN group_set=2 THEN
        COUNT(1)
        END)>5))
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1,2) THEN __delete__0 END) OVER(partition by CAST("region__0" as VARCHAR)) as __shaving__0,
        MAX(CASE WHEN group_set IN (1,2) THEN __delete__1 END) OVER(partition by CAST("state__1" as VARCHAR),CAST("region__0" as VARCHAR)) as __shaving__1 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1,2) AND __shaving__0=1)OR (group_set IN (1,2) AND __shaving__1=1)
      ))
    , __stage3 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "region__0" as "region__0",
        MAX("aircraft_count__0") as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "state__1"
          END as "state__1",
        MAX("aircraft_count__1") as "aircraft_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "city__2" as "city", 
          "aircraft_count__2"::DOUBLE PRECISION as "aircraft_count"
          ) as __x)  ORDER BY  "aircraft_count__2" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_city__1"
      FROM __stage2
      GROUP BY 1,2,4
    )
    SELECT
      "region__0" as "region",
      (ARRAY_AGG("aircraft_count__0") FILTER (WHERE group_set=0 AND "aircraft_count__0" IS NOT NULL))[1] as "aircraft_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count", 
        "by_city__1" as "by_city"
        ) as __x)  ORDER BY  "aircraft_count__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage3
    GROUP BY 1
    ORDER BY 2 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ee2af781-ab3b-42b1-845c-3fc1f941807a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:17.914Z",
      "Database": "dev",
      "Duration": 45545964,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 56, column 18\n  Position: 1911",
      "HasResultSet": false,
      "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3",
      "RedshiftPid": 1073930472,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:18.013Z",
          "Duration": 45545964,
          "HasResultSet": false,
          "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:18.465Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:18.016Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 56, column 18\n  Position: 1911",
          "HasResultSet": false,
          "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"region\" as \"region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"city\"\n      END as \"city__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"aircraft_count__2\",\n    CASE WHEN group_set=1 THEN CASE WHEN (CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)>45 THEN 0 ELSE 1 END END as __delete__1,\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>500 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,6\n  HAVING (group_set<>2 OR (group_set=2 AND (CASE WHEN group_set=2 THEN\n    COUNT(1)\n    END)>5))\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1,2) THEN __delete__0 END) OVER(partition by CAST(\"region__0\" as VARCHAR)) as __shaving__0,\n    MAX(CASE WHEN group_set IN (1,2) THEN __delete__1 END) OVER(partition by CAST(\"state__1\" as VARCHAR),CAST(\"region__0\" as VARCHAR)) as __shaving__1 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1,2) AND __shaving__0=1)OR (group_set IN (1,2) AND __shaving__1=1)\n  ))\n, __stage3 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"region__0\" as \"region__0\",\n    MAX(\"aircraft_count__0\") as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"state__1\"\n      END as \"state__1\",\n    MAX(\"aircraft_count__1\") as \"aircraft_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"city__2\" as \"city\", \n      \"aircraft_count__2\"::DOUBLE PRECISION as \"aircraft_count\"\n      ) as __x)  ORDER BY  \"aircraft_count__2\" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_city__1\"\n  FROM __stage2\n  GROUP BY 1,2,4\n)\nSELECT\n  \"region__0\" as \"region\",\n  (ARRAY_AGG(\"aircraft_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_count__0\" IS NOT NULL))[1] as \"aircraft_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n    \"by_city__1\" as \"by_city\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage3\nGROUP BY 1\nORDER BY 2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:18.465Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:18.531Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:271:8)

  ● redshift › model: having float group by partition

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "dabd21bb-1ea4-4e31-9aaf-a26d9220f738",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:19.323Z",
      "Database": "dev",
      "Duration": 42903555,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"aircraft_model_count__0\") FILTER\", at line 34, column 41\n  Position: 1025",
      "HasResultSet": false,
      "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d",
      "RedshiftPid": 1073938528,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:19.405Z",
          "Duration": 42903555,
          "HasResultSet": false,
          "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:19.830Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:19.408Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"aircraft_model_count__0\") FILTER\", at line 34, column 41\n  Position: 1025",
          "HasResultSet": false,
          "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    (FLOOR(base.\"seats\"*1.0/20))*20.0 as \"seats_bucketed__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_model_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"engines\"\n      END as \"engines__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_model_count__1\",\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>400 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft_models\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE ((FLOOR(base.\"seats\"*1.0/20))*20.0)>0\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST(\"seats_bucketed__0\" as VARCHAR)) as __shaving__0 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)\n  ))\nSELECT\n  \"seats_bucketed__0\" as \"seats_bucketed\",\n  (ARRAY_AGG(\"aircraft_model_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_model_count__0\" IS NOT NULL))[1] as \"aircraft_model_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"engines__1\"::DOUBLE PRECISION as \"engines\", \n    \"aircraft_model_count__1\"::DOUBLE PRECISION as \"aircraft_model_count\"\n    ) as __x)  ORDER BY  \"aircraft_model_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"foo\"\nFROM __stage2\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:19.830Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:19.895Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        (FLOOR(base."seats"*1.0/20))*20.0 as "seats_bucketed__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_model_count__0",
        CASE WHEN group_set=1 THEN
          base."engines"
          END as "engines__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_model_count__1",
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>400 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft_models" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE ((FLOOR(base."seats"*1.0/20))*20.0)>0
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST("seats_bucketed__0" as VARCHAR)) as __shaving__0 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)
      ))
    SELECT
      "seats_bucketed__0" as "seats_bucketed",
      (ARRAY_AGG("aircraft_model_count__0") FILTER (WHERE group_set=0 AND "aircraft_model_count__0" IS NOT NULL))[1] as "aircraft_model_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "engines__1"::DOUBLE PRECISION as "engines", 
        "aircraft_model_count__1"::DOUBLE PRECISION as "aircraft_model_count"
        ) as __x)  ORDER BY  "aircraft_model_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "foo"
    FROM __stage2
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "dabd21bb-1ea4-4e31-9aaf-a26d9220f738",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:19.323Z",
      "Database": "dev",
      "Duration": 42903555,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"aircraft_model_count__0\") FILTER\", at line 34, column 41\n  Position: 1025",
      "HasResultSet": false,
      "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d",
      "RedshiftPid": 1073938528,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:19.405Z",
          "Duration": 42903555,
          "HasResultSet": false,
          "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:19.830Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:19.408Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"aircraft_model_count__0\") FILTER\", at line 34, column 41\n  Position: 1025",
          "HasResultSet": false,
          "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    (FLOOR(base.\"seats\"*1.0/20))*20.0 as \"seats_bucketed__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_model_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"engines\"\n      END as \"engines__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_model_count__1\",\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>400 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft_models\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE ((FLOOR(base.\"seats\"*1.0/20))*20.0)>0\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST(\"seats_bucketed__0\" as VARCHAR)) as __shaving__0 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)\n  ))\nSELECT\n  \"seats_bucketed__0\" as \"seats_bucketed\",\n  (ARRAY_AGG(\"aircraft_model_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_model_count__0\" IS NOT NULL))[1] as \"aircraft_model_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"engines__1\"::DOUBLE PRECISION as \"engines\", \n    \"aircraft_model_count__1\"::DOUBLE PRECISION as \"aircraft_model_count\"\n    ) as __x)  ORDER BY  \"aircraft_model_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"foo\"\nFROM __stage2\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:19.830Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:19.895Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:292:11)

  ● redshift › model: dates named

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 8: Cannot do time truncation on type 'number'
      |           t_timestamp_date is t_timestamp.day,
      |                               ^
    line 9: Cannot do time truncation on type 'number'
      |           t_timestamp_hour is t_timestamp.hour,
      |                               ^
    line 10: Cannot do time truncation on type 'number'
      |           t_timestamp_minute is t_timestamp.minute,
      |                                 ^
    line 11: Cannot do time truncation on type 'number'
      |           t_timestamp_second is t_timestamp.second,
      |                                 ^
    line 12: Cannot do time truncation on type 'number'
      |           t_timestamp_month is t_timestamp.month,
      |                                ^
    line 13: Cannot do time truncation on type 'number'
      |           t_timestamp_year is t_timestamp.year,
      |                               ^

      342 |           t_timestamp_year is t_timestamp.year,
      343 |       }
    > 344 |     `).malloyResultMatches(runtime, {
          |        ^
      345 |         t_date: new Date('2020-03-02'),
      346 |         t_date_month: new Date('2020-03-01'),
      347 |         t_date_year: new Date('2020-01-01'),

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:344:8)

  ● redshift › sql expr functions › sql_boolean

    SQL Generated:
      SELECT 
         base."seats" > 20 as "boolean_1",
         base."engines" = 2 as "boolean_2"
      FROM "malloytest"."aircraft_models" as base
      WHERE base."aircraft_model_code"='0270202'
      GROUP BY 1,2
      ORDER BY 1 asc NULLS LAST
      
    Expected {boolean_1: true} Got: null
    Expected {boolean_2: false} Got: null

      521 |           group_by: boolean_2 is sql_boolean("\${engines} = 2")
      522 |         }
    > 523 |   `).malloyResultMatches(expressionModel, {
          |      ^
      524 |         boolean_1: booleanResult(true, databaseName),
      525 |         boolean_2: booleanResult(false, databaseName),
      526 |       });

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:523:6)

  ● redshift › query with aliasname used twice

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "300ee431-ad60-45f6-bf56-0c0dab42ec79",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:47.079Z",
      "Database": "dev",
      "Duration": 44497102,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 18\n  Position: 1312",
      "HasResultSet": false,
      "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590",
      "RedshiftPid": 1073987709,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:47.168Z",
          "Duration": 44497102,
          "HasResultSet": false,
          "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:47.594Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:47.171Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 18\n  Position: 1312",
          "HasResultSet": false,
          "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 1) as \"first__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 2)\n      END as \"first_two__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=2 THEN\n      SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 3)\n      END as \"first_three__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"aircraft_count__2\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,6\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"first__0\" as \"first__0\",\n    MAX(\"aircraft_count__0\") as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"first_two__1\"\n      END as \"first_two__1\",\n    MAX(\"aircraft_count__1\") as \"aircraft_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"first_three__2\" as \"first_three\", \n      \"aircraft_count__2\"::DOUBLE PRECISION as \"aircraft_count\"\n      ) as __x)  ORDER BY  \"aircraft_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"aircraft__1\"\n  FROM __stage0\n  GROUP BY 1,2,4\n)\n, __stage2 AS (\n  SELECT\n    \"first__0\" as \"first\",\n    (ARRAY_AGG(\"aircraft_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_count__0\" IS NOT NULL))[1] as \"aircraft_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"first_two__1\" as \"first_two\", \n      \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n      \"aircraft__1\" as \"aircraft\"\n      ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"aircraft\"\n  FROM __stage1\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(aircraft_0,'first_three') as \"first_three\",\n   base.\"aircraft_count\" as \"aircraft_count\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"aircraft\") as aircraft_2 ON true\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(aircraft_2,'aircraft')) as aircraft_0 ON true\nORDER BY 2 desc NULLS LAST,1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:47.594Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:47.656Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 1) as "first__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 2)
          END as "first_two__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1",
        CASE WHEN group_set=2 THEN
          SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 3)
          END as "first_three__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "aircraft_count__2"
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,6
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "first__0" as "first__0",
        MAX("aircraft_count__0") as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "first_two__1"
          END as "first_two__1",
        MAX("aircraft_count__1") as "aircraft_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "first_three__2" as "first_three", 
          "aircraft_count__2"::DOUBLE PRECISION as "aircraft_count"
          ) as __x)  ORDER BY  "aircraft_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "aircraft__1"
      FROM __stage0
      GROUP BY 1,2,4
    )
    , __stage2 AS (
      SELECT
        "first__0" as "first",
        (ARRAY_AGG("aircraft_count__0") FILTER (WHERE group_set=0 AND "aircraft_count__0" IS NOT NULL))[1] as "aircraft_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "first_two__1" as "first_two", 
          "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count", 
          "aircraft__1" as "aircraft"
          ) as __x)  ORDER BY  "aircraft_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "aircraft"
      FROM __stage1
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(aircraft_0,'first_three') as "first_three",
       base."aircraft_count" as "aircraft_count"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."aircraft") as aircraft_2 ON true
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(aircraft_2,'aircraft')) as aircraft_0 ON true
    ORDER BY 2 desc NULLS LAST,1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "300ee431-ad60-45f6-bf56-0c0dab42ec79",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:47.079Z",
      "Database": "dev",
      "Duration": 44497102,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 18\n  Position: 1312",
      "HasResultSet": false,
      "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590",
      "RedshiftPid": 1073987709,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:47.168Z",
          "Duration": 44497102,
          "HasResultSet": false,
          "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:47.594Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:47.171Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 18\n  Position: 1312",
          "HasResultSet": false,
          "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 1) as \"first__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 2)\n      END as \"first_two__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=2 THEN\n      SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 3)\n      END as \"first_three__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"aircraft_count__2\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,6\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"first__0\" as \"first__0\",\n    MAX(\"aircraft_count__0\") as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"first_two__1\"\n      END as \"first_two__1\",\n    MAX(\"aircraft_count__1\") as \"aircraft_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"first_three__2\" as \"first_three\", \n      \"aircraft_count__2\"::DOUBLE PRECISION as \"aircraft_count\"\n      ) as __x)  ORDER BY  \"aircraft_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"aircraft__1\"\n  FROM __stage0\n  GROUP BY 1,2,4\n)\n, __stage2 AS (\n  SELECT\n    \"first__0\" as \"first\",\n    (ARRAY_AGG(\"aircraft_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_count__0\" IS NOT NULL))[1] as \"aircraft_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"first_two__1\" as \"first_two\", \n      \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n      \"aircraft__1\" as \"aircraft\"\n      ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"aircraft\"\n  FROM __stage1\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(aircraft_0,'first_three') as \"first_three\",\n   base.\"aircraft_count\" as \"aircraft_count\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"aircraft\") as aircraft_2 ON true\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(aircraft_2,'aircraft')) as aircraft_0 ON true\nORDER BY 2 desc NULLS LAST,1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:47.594Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:47.656Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:655:10)

  ● redshift › string literal quoting › quote single character

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bbf4a5fb-03ab-4a29-bc25-6e9bda85aa0a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:51.377Z",
      "Database": "dev",
      "Duration": 49606473,
      "Error": "Query #2 failed with ERROR: failed to find conversion function from \"unknown\" to text",
      "HasResultSet": false,
      "Id": "3c03b1cb-010f-4e53-8fda-34028de5b532",
      "RedshiftPid": 1073799274,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:51.478Z",
          "Duration": 49606473,
          "HasResultSet": false,
          "Id": "3c03b1cb-010f-4e53-8fda-34028de5b532:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:51.908Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:51.481Z",
          "Duration": -1,
          "Error": "ERROR: failed to find conversion function from \"unknown\" to text",
          "HasResultSet": false,
          "Id": "3c03b1cb-010f-4e53-8fda-34028de5b532:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     'x' as \"expect\",\n     'x' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}x{single-quote} == x',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:51.908Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:51.974Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift › string literal quoting › quote single quote

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "af8606fe-94d8-4dde-a31d-070ec3dba3d3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:52.788Z",
      "Database": "dev",
      "Duration": 45658351,
      "Error": "Query #2 failed with ERROR: failed to find conversion function from \"unknown\" to text",
      "HasResultSet": false,
      "Id": "30631126-9594-4023-a1f7-c127fef65380",
      "RedshiftPid": 1073979506,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:52.868Z",
          "Duration": 45658351,
          "HasResultSet": false,
          "Id": "30631126-9594-4023-a1f7-c127fef65380:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:53.282Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:52.871Z",
          "Duration": -1,
          "Error": "ERROR: failed to find conversion function from \"unknown\" to text",
          "HasResultSet": false,
          "Id": "30631126-9594-4023-a1f7-c127fef65380:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     '''' as \"expect\",\n     '''' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{single-quote}{single-quote} == {single-quote}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:53.282Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:53.349Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift › string literal quoting › quote backslash

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "01af7117-2d95-46c8-a855-46f309d12941",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:55.590Z",
      "Database": "dev",
      "Duration": 43977730,
      "Error": "Query #2 failed with Unterminated string literal started at position 370 in SQL WITH __stage0 AS (\n  SELECT \n     '\\' as \"expect\",\n     '\\' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{backslash}{single-quote} == {backslash}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n. Expected  char",
      "HasResultSet": false,
      "Id": "f6076439-0828-4fa1-bc4f-ae3a7ab1b540",
      "RedshiftPid": 1073750135,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:55.687Z",
          "Duration": 43977730,
          "HasResultSet": false,
          "Id": "f6076439-0828-4fa1-bc4f-ae3a7ab1b540:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:56.057Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:55.691Z",
          "Duration": -1,
          "Error": "Unterminated string literal started at position 370 in SQL WITH __stage0 AS (\n  SELECT \n     '\\' as \"expect\",\n     '\\' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{backslash}{single-quote} == {backslash}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n. Expected  char",
          "HasResultSet": false,
          "Id": "f6076439-0828-4fa1-bc4f-ae3a7ab1b540:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     '\\' as \"expect\",\n     '\\' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{backslash}{single-quote} == {backslash}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:56.057Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:56.073Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift › null safe booleans › not boolean

    SQL Generated:
      SELECT 
         COALESCE(NOT base."tf",TRUE) as "not_null_boolean"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {not_null_boolean: true} Got: null

      859 |         select:
      860 |           not_null_boolean is not tf
    > 861 |       }`).malloyResultMatches(runtime, {not_null_boolean: is_true});
          |           ^
      862 |     });
      863 |     it('numeric != non-null to null', async () => {
      864 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:861:11)

  ● redshift › null safe booleans › numeric != non-null to null

    SQL Generated:
      SELECT 
         COALESCE(base."x"!=9,true) as "val_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {val_ne_null: true} Got: null

      864 |       await expect(
      865 |         `run: ${nulls} -> { select: val_ne_null is x != 9 }`
    > 866 |       ).malloyResultMatches(runtime, {val_ne_null: is_true});
          |         ^
      867 |     });
      868 |     it('string !~ non-null to null', async () => {
      869 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:866:9)

  ● redshift › null safe booleans › string !~ non-null to null

    SQL Generated:
      SELECT 
         COALESCE(base."a" NOT LIKE 'z',true) as "val_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {val_ne_null: true} Got: null

      869 |       await expect(
      870 |         `run: ${nulls} -> { select: val_ne_null is a !~ 'z' }`
    > 871 |       ).malloyResultMatches(runtime, {val_ne_null: is_true});
          |         ^
      872 |     });
      873 |     it('regex !~ non-null to null', async () => {
      874 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:871:9)

  ● redshift › null safe booleans › regex !~ non-null to null

    SQL Generated:
      SELECT 
         COALESCE(NOT (base."a" ~ 'z'),TRUE) as "val_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {val_ne_null: true} Got: null

      874 |       await expect(
      875 |         `run: ${nulls} -> { select: val_ne_null is a !~ r'z' }`
    > 876 |       ).malloyResultMatches(runtime, {val_ne_null: is_true});
          |         ^
      877 |     });
      878 |     it('numeric != null-to-null', async () => {
      879 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:876:9)

  ● redshift › null safe booleans › numeric != null-to-null

    SQL Generated:
      SELECT 
         COALESCE(base."x"!=base."y",true) as "null_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {null_ne_null: true} Got: null

      879 |       await expect(
      880 |         `run: ${nulls} -> { select: null_ne_null is x != y }`
    > 881 |       ).malloyResultMatches(runtime, {null_ne_null: is_true});
          |         ^
      882 |     });
      883 |     it('string !~ null-to-null', async () => {
      884 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:881:9)

  ● redshift › null safe booleans › string !~ null-to-null

    SQL Generated:
      SELECT 
         COALESCE(base."a" NOT LIKE base."b",true) as "null_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {null_ne_null: true} Got: null

      884 |       await expect(
      885 |         `run: ${nulls} -> { select: null_ne_null is a !~ b }`
    > 886 |       ).malloyResultMatches(runtime, {null_ne_null: is_true});
          |         ^
      887 |     });
      888 |   });
      889 |

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:886:9)

  ● redshift › dimension expressions expanded with parens properly

    SQL Generated:
      SELECT 
         false and ((false) or (true)) as "no_paren",
         false and (((false) or (true))) as "paren"
      FROM (SELECT 1 as one) as base
      
    Expected {paren: false} Got: null
    Expected {no_paren: false} Got: null

      897 |           paren is    false and (fot)
      898 |       }`
    > 899 |     ).malloyResultMatches(runtime, {
          |       ^
      900 |       paren: booleanResult(false, databaseName),
      901 |       no_paren: booleanResult(false, databaseName),
      902 |     });

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:899:7)

  console.log
    Error in SQL:
     SELECT 
       FLOOR((CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base."seats" IS NOT NULL THEN base."__distinct_key" END),0)) as "avg_seats",
       FLOOR(AVG(a_0."year_built")) as "avg_year"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."aircraft_models" as x) as base
     LEFT JOIN "malloytest"."aircraft" AS a_0
      ON a_0."aircraft_model_code"=base."aircraft_model_code"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c",
       a_0."state" as "state"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN "malloytest"."airports" AS a_0
      ON base."state"=a_0."state" AND (a_0."state" IN ('NH','CA'))
    GROUP BY 2
    ORDER BY 1 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c"
    FROM "malloytest"."airports" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON base."state"=a_0."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c",
       a_0."state" as "state"
    FROM "malloytest"."airports" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON base."state"=a_0."state" AND (a_0."state" IN ('TX','LA'))
    GROUP BY 2
    ORDER BY 1 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       count(distinct CONCAT(base."state",a_0."state")) as "row_count",
       COUNT(DISTINCT base."__distinct_key") as "left_count",
       COUNT(DISTINCT a_0."__distinct_key") as "right_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum",
       ROUND((COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE((base."airport_count"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as "left_small_sum",
       ROUND((COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE((base."airport_count"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as "right_small_sum"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON 1=1

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         COALESCE(SUM(base."airport_count"),0) as "r"
      FROM "malloytest"."state_facts" as base
    )
    SELECT 
       count(distinct CONCAT(base."state",CAST(a_0."r" AS varchar))) as "row_count",
       COALESCE(SUM(base."airport_count"),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."r",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum",
       COALESCE(SUM(base."airport_count"+a_0."r"),0) as "sum_sum"
    FROM "malloytest"."state_facts" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage0 as x) AS a_0
      ON 1=1

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       count(distinct CONCAT(base."state",a_0."state")) as "row_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON a_0."state" IN ('CA','NY')

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(1) as "ac_count",
       COALESCE(SUM(base."airport_count"),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM __stage2 as base
     INNER JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(1) as "ac_count",
       COALESCE(SUM(base."airport_count"),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM __stage2 as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT base."__distinct_key") as "ac_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage2 as x) as base
     RIGHT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT base."__distinct_key") as "ac_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage2 as x) as base
     FULL JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT am_states_0."__distinct_key") as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage0 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    WHERE base."state"='CA'

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "d__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "d__1"::DOUBLE PRECISION as "d"
          ) as __x)  ORDER BY  "d__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "p"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       base."state" as "state",
       base."c" as "c",
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as "d"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."p") as p_0 ON true
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" ~ '^(A|M)'
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        "popular_name__0" as "popular_name",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "popular_name__1" as "popular_name"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "nested_state"
      FROM __stage0
      GROUP BY 1,2
    )
    SELECT 
       base."state" as "state",
       am_states_0."state" as "am_state",
       COUNT(DISTINCT am_states_0."__distinct_key" || 'x' || (nested_state_0->>'__row_id')) as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage1 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0."nested_state") __xx ))) as nested_state_0 ON true
    WHERE base."state"='CA'
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
          WHEN 1 THEN 'sql native'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'sql native'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'number'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'number'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'number'
          WHEN 15 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 2 THEN base."cancelled"
          WHEN 3 THEN base."carrier"
          WHEN 6 THEN base."destination"
          WHEN 8 THEN base."diverted"
          WHEN 9 THEN base."flight_num"
          WHEN 12 THEN base."origin"
          WHEN 13 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base."arr_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."arr_delay") as VARCHAR)
          WHEN 4 THEN MIN(CAST(base."dep_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."dep_delay") as VARCHAR)
          WHEN 7 THEN MIN(CAST(base."distance" as VARCHAR)) || ' to ' || CAST(MAX(base."distance") as VARCHAR)
          WHEN 10 THEN MIN(CAST(base."flight_time" as VARCHAR)) || ' to ' || CAST(MAX(base."flight_time") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."id2" as VARCHAR)) || ' to ' || CAST(MAX(base."id2") as VARCHAR)
          WHEN 14 THEN MIN(CAST(base."taxi_in" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_in") as VARCHAR)
          WHEN 15 THEN MIN(CAST(base."taxi_out" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_out") as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."flights" as base
      CROSS JOIN GENERATE_SERIES(0,16,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."fieldPath" as "fieldPath",
       base."fieldType" as "fieldType",
       base."fieldValue" as "fieldValue",
       base."weight" as "weight"
    FROM __stage1 as base
    WHERE base."fieldName"='carrier'
    ORDER BY 4 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       (CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."a",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base."a" IS NOT NULL THEN base."__distinct_key" END),0) as "avg_a",
       (CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(x1_0."a",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(x1_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(x1_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN x1_0."a" IS NOT NULL THEN x1_0."__distinct_key" END),0) as "avg_b"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM (
            SELECT 2 as "a"
            UNION ALL SELECT 4
            UNION ALL SELECT null
          ) as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM (
            SELECT 2 as "a"
            UNION ALL SELECT 4
            UNION ALL SELECT null
          ) as x) AS x1_0
      ON 1=1

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("births_per_100k__1") FILTER (WHERE group_set=1 AND "births_per_100k__1" IS NOT NULL))[1] as "births_per_100k"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1",
        CASE WHEN group_set=2 THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("births_per_100k__1") FILTER (WHERE group_set=1 AND "births_per_100k__1" IS NOT NULL))[1] as "births_per_100k",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "total_births__2"::DOUBLE PRECISION as "total_births"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_name"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 1000

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX(CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END) OVER () as "m__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" IN ('CA','NY')
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("m__1") FILTER (WHERE group_set=1 AND "m__1" IS NOT NULL))[1] as "m"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("total_births__0") FILTER (WHERE group_set=0 AND "total_births__0" IS NOT NULL))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_name"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END as "faa_region__1",
        CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END as "fac_type__5",
        CASE WHEN group_set=5 THEN
          COUNT(1)
          END as "c__5",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all___5",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all_state_region__5",
        MAX((CASE WHEN group_set=3 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END) as "all_of_this_type__5",
        MAX((CASE WHEN group_set=4 THEN
          COUNT(1)
          END)) OVER () as "all_top__5"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,5,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,3,7
    )
    SELECT
      "faa_region__1" as "faa_region",
      "state__1" as "state",
      (ARRAY_AGG("c__1") FILTER (WHERE group_set=1 AND "c__1" IS NOT NULL))[1] as "c",
      (ARRAY_AGG("all___1") FILTER (WHERE group_set=1 AND "all___1" IS NOT NULL))[1] as "all_",
      (ARRAY_AGG("airport_count__1") FILTER (WHERE group_set=1 AND "airport_count__1" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__5" as "fac_type", 
        "c__5"::DOUBLE PRECISION as "c", 
        "all___5"::DOUBLE PRECISION as "all_", 
        "all_state_region__5"::DOUBLE PRECISION as "all_state_region", 
        "all_of_this_type__5"::DOUBLE PRECISION as "all_of_this_type", 
        "all_top__5"::DOUBLE PRECISION as "all_top"
        ) as __x)  ORDER BY  "c__5" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2,3,4)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set=3 THEN
          base."fac_type"
          END as "fac_type__3",
        CASE WHEN group_set IN (3,2) THEN
          base."major"
          END as "major__3",
        CASE WHEN group_set=3 THEN
          COUNT(1)
          END as "c__3",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all___3",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN
          base."major"
          END, CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all_major__3"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,6,7
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("c__1") FILTER (WHERE group_set=1 AND "c__1" IS NOT NULL))[1] as "c",
      (ARRAY_AGG("all___1") FILTER (WHERE group_set=1 AND "all___1" IS NOT NULL))[1] as "all_",
      (ARRAY_AGG("airport_count__1") FILTER (WHERE group_set=1 AND "airport_count__1" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__3" as "fac_type", 
        "major__3" as "major", 
        "c__3"::DOUBLE PRECISION as "c", 
        "all___3"::DOUBLE PRECISION as "all_", 
        "all_major__3"::DOUBLE PRECISION as "all_major"
        ) as __x)  ORDER BY  "c__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY base."popular_name"))*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__0" as "popular_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        UPPER(base."popular_name") as "upper_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY UPPER(base."popular_name")))*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "upper_name__0" as "upper_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300.0) as "f__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300.0)) as "ug__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "f__0" as "f",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "ug__1"::DOUBLE PRECISION as "ug"
        ) as __x)  ORDER BY  "ug__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER () as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__2" as "popular_name",
      "state__2" as "state",
      (ARRAY_AGG("total_births__2") FILTER (WHERE group_set=2 AND "total_births__2" IS NOT NULL))[1] as "total_births",
      (ARRAY_AGG("all_births__2") FILTER (WHERE group_set=2 AND "all_births__2" IS NOT NULL))[1] as "all_births",
      (ARRAY_AGG("all_name__2") FILTER (WHERE group_set=2 AND "all_name__2" IS NOT NULL))[1] as "all_name"
    FROM __stage0
    WHERE group_set NOT IN (0,1)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300) as "abc__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300)) as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END, FLOOR(base."airport_count"*1.0/300)) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,5
    )
    SELECT
      "abc__0" as "abc",
      (ARRAY_AGG("total_births__0") FILTER (WHERE group_set=0 AND "total_births__0" IS NOT NULL))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "state__2" as "state", 
        "total_births__2"::DOUBLE PRECISION as "total_births", 
        "all_births__2"::DOUBLE PRECISION as "all_births", 
        "all_name__2"::DOUBLE PRECISION as "all_name"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_stuff"
    FROM __stage0
    WHERE group_set NOT IN (1)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "t__1"::DOUBLE PRECISION as "t") as __x)) FILTER (WHERE group_set=1))[1])))) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        2 as "two__0",
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "two__0" as "two",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 1 asc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."faa_region" as "faa_region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "airport_count__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "airport_count__2"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      WHERE (base."faa_region" IS NULL)
      AND ((group_set NOT IN (1) OR (group_set IN (1) AND base."state" IS NOT NULL)))
      AND ((group_set NOT IN (2) OR (group_set IN (2) AND base."state" IS NOT NULL)))
      GROUP BY 1,2,4,6
    )
    SELECT
      "faa_region__0" as "faa_region",
      (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__2" as "state", 
        "airport_count__2"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:1]),'[]'::JSONB) as "by_state1"
    FROM __stage0
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airports__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."aircraft_count"),0)
          END as "aircrafts__2",
        CASE WHEN group_set=3 THEN
          base."state"
          END as "state__3",
        CASE WHEN group_set=3 THEN
          COALESCE(SUM(base."aircraft_count"),0)
          END as "aircrafts__3"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."popular_name" ~ 'I'
      GROUP BY 1,2,3,5,7
    )
    SELECT
      "popular_name__0" as "popular_name",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'airports')::double precision),0) as "airports"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "airports__1"::DOUBLE PRECISION as "airports"
          ) as __x)  ORDER BY  "airports__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 ASC NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as "aircrafts"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "aircrafts__2"::DOUBLE PRECISION as "aircrafts"
          ) as __x)  ORDER BY  "aircrafts__2" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 ASC NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view2",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as "aircrafts"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__3" as "state", 
          "aircrafts__3"::DOUBLE PRECISION as "aircrafts"
          ) as __x)  ORDER BY  "aircrafts__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 desc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view3"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."state" as "state",
         COALESCE(SUM(base."airport_count"),0) as "airport_count"
      FROM "malloytest"."state_facts" as base
      GROUP BY 1
    )
    SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(foo_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(foo_0."state"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0."state"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(foo_0."state"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0."state"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "x"
    FROM "malloytest"."state_facts" as base
     LEFT JOIN __stage0 AS foo_0
      ON base."state"=foo_0."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         base."state" as "state",
         COALESCE(SUM(base."airport_count"),0) as "airport_count"
      FROM "malloytest"."state_facts" as base
      GROUP BY 1
    )
    , __stage1 AS (
      SELECT 
         base."state" as "state",
         COALESCE(SUM(base."airport_count"),0) as "airport_count"
      FROM __stage0 as base
      GROUP BY 1
    )
    SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(foo_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(foo_0."state"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0."state"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(foo_0."state"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0."state"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "x"
    FROM "malloytest"."state_facts" as base
     LEFT JOIN __stage1 AS foo_0
      ON base."state"=foo_0."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       '\' as "back"
    FROM (SELECT 1 as one) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "P O P__0",
        j_o_space_0."popular_name" as "J P O P__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c o u n t__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "R O W__0",
        CASE WHEN group_set=0 THEN LAG((base."popular_name"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "l a g__0",
        CASE WHEN group_set=1 THEN
          j_o_space_0."state"
          END as "J S__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c o u n t__1"
      FROM "malloytest"."state_facts" as base
       LEFT JOIN "malloytest"."state_facts" AS j_o_space_0
        ON j_o_space_0."state"=base."state"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,7
    )
    SELECT
      "P O P__0" as "P O P",
      "J P O P__0" as "J P O P",
      (ARRAY_AGG("c o u n t__0") FILTER (WHERE group_set=0 AND "c o u n t__0" IS NOT NULL))[1] as "c o u n t",
      (ARRAY_AGG("R O W__0") FILTER (WHERE group_set=0 AND "R O W__0" IS NOT NULL))[1] as "R O W",
      (ARRAY_AGG("l a g__0") FILTER (WHERE group_set=0 AND "l a g__0" IS NOT NULL))[1] as "l a g",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "J S__1" as "J S", 
        "c o u n t__1"::DOUBLE PRECISION as "c o u n t"
        ) as __x)  ORDER BY  "c o u n t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by state"
    FROM __stage0
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/nomodel.spec.ts (141.248 s)
  ✓ parenthesize output field values - redshift (6494 ms)
  ✓ bug 151 which used to throw unknown dialect is still fixed- redshift (8025 ms)
  ✓ refine query from query - redshift (6351 ms)
  ✓ source- not -found  - redshift (36 ms)
  ✕ join_many - redshift (2841 ms)
  ✓ join_many condition no primary key - redshift (2848 ms)
  ✕ join_many filter multiple values - redshift (1356 ms)
  ✕ join_one condition no primary key - redshift (1339 ms)
  ✕ join_one filter multiple values - redshift (1348 ms)
  ✕ join_many cross from  - redshift (1388 ms)
  ✕ join_one only  - redshift (1391 ms)
  ✕ join_many cross ON  - redshift (1351 ms)
  ✓ limit - provided - redshift (1418 ms)
  ✕ join inner- redshift (1491 ms)
  ✕ join left - redshift (1575 ms)
  ✕ join right - redshift (1420 ms)
  ✕ join full - redshift (1369 ms)
  ✕ leafy count - redshift (1359 ms)
  ✕ nest/unnest -basic - redshift (1374 ms)
  ✓ count at root should not use distinct key - redshift (1438 ms)
  ✕ leafy nested count - redshift (1422 ms)
  ✕ basic index - redshift (2758 ms)
  ✕ number as null 2 - redshift (1393 ms)
  ✓ sql block- redshift (2930 ms)
  ✕ avg ignore null- redshift (2765 ms)
  ✓ limit - not provided - redshift (1524 ms)
  ✕ ungrouped top level - redshift (1357 ms)
  ✕ ungrouped top level with nested  - redshift (1359 ms)
  ✕ ungrouped - eliminate rows  - redshift (1395 ms)
  ✕ ungrouped nested with no grouping above - redshift (1315 ms)
  ✕ ungrouped - partial grouping - redshift (1422 ms)
  ✕ ungrouped - all nested - redshift (1342 ms)
  ✕ ungrouped nested  - redshift (1329 ms)
  ✕ ungrouped nested expression  - redshift (1391 ms)
  ✕ ungrouped nested group by float  - redshift (1326 ms)
  ✓ run simple sql - redshift (2891 ms)
  ✓ simple sql is exactly as written - redshift (1504 ms)
  ✓ source from query defined as sql query - redshift (1502 ms)
  ✓ source from query defined as other query - redshift (1585 ms)
  ✕ all with parameters - basic  - redshift (1507 ms)
  ✕ all with parameters - nest  - redshift (1351 ms)
  ✕ single value to udf - redshift (1454 ms)
  ✕ Multi value to udf - redshift (1352 ms)
  ✕ Multi value to udf group by - redshift (1343 ms)
  ✓ sql as source - redshift (2867 ms)
  ✓ sql directly - redshift (1467 ms)
  ✓ sql with turducken- redshift (6209 ms)
  ✓ local declarations external query - redshift (1456 ms)
  ✓ local declarations named query - redshift (1462 ms)
  ✓ local declarations refined named query - redshift (1525 ms)
  ✓ regexp match- redshift (3003 ms)
  ✓ substitution precedence- redshift (6260 ms)
  ✕ array unnest - redshift (1 ms)
  ✕ array unnest x 2 - redshift
  ✕ nest null - redshift (1385 ms)
  ✕ Nested pipelines sort properly - redshift (1356 ms)
  ✕ number as null- redshift (1432 ms)
  ✓ removes surpuflous order_by - solo aggregates - redshift (1433 ms)
  ✓ removes surpuflous order_by - pipeline - redshift (4627 ms)
  ✕ removes surpuflous order_by - joined_query - redshift (1375 ms)
  ✕ removes surpuflous order_by - joined_query pipeline - redshift (1345 ms)
  ○ skipped can unnest simply from file - redshift
  ○ skipped can unnest from file - redshift
  ○ skipped can double unnest - redshift
  quoting and strings
    ✓ backslash quote (2832 ms)
    ✕ backslash backslash (1386 ms)
    ✓ source with reserve word (1422 ms)
    ✕ spaces in names (1557 ms)

  ● join_many - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "afa5a618-6a7d-4b8b-9d60-a3311504e02b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:46.469Z",
      "Database": "dev",
      "Duration": 45052612,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb",
      "RedshiftPid": 1073766522,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:46.564Z",
          "Duration": 45052612,
          "HasResultSet": false,
          "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:47.003Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:46.567Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb:2",
          "QueryString": "SELECT \n   FLOOR((CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base.\"seats\" IS NOT NULL THEN base.\"__distinct_key\" END),0)) as \"avg_seats\",\n   FLOOR(AVG(a_0.\"year_built\")) as \"avg_year\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"aircraft_models\" as x) as base\n LEFT JOIN \"malloytest\".\"aircraft\" AS a_0\n  ON a_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:47.003Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:47.069Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       FLOOR((CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base."seats" IS NOT NULL THEN base."__distinct_key" END),0)) as "avg_seats",
       FLOOR(AVG(a_0."year_built")) as "avg_year"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."aircraft_models" as x) as base
     LEFT JOIN "malloytest"."aircraft" AS a_0
      ON a_0."aircraft_model_code"=base."aircraft_model_code"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "afa5a618-6a7d-4b8b-9d60-a3311504e02b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:46.469Z",
      "Database": "dev",
      "Duration": 45052612,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb",
      "RedshiftPid": 1073766522,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:46.564Z",
          "Duration": 45052612,
          "HasResultSet": false,
          "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:47.003Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:46.567Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb:2",
          "QueryString": "SELECT \n   FLOOR((CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base.\"seats\" IS NOT NULL THEN base.\"__distinct_key\" END),0)) as \"avg_seats\",\n   FLOOR(AVG(a_0.\"year_built\")) as \"avg_year\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"aircraft_models\" as x) as base\n LEFT JOIN \"malloytest\".\"aircraft\" AS a_0\n  ON a_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:47.003Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:47.069Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:139:10)

  ● join_many filter multiple values - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "191f0b82-f322-40ed-8490-94f561f5990f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:50.685Z",
      "Database": "dev",
      "Duration": 44287504,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5",
      "RedshiftPid": 1073750136,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:50.777Z",
          "Duration": 44287504,
          "HasResultSet": false,
          "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:51.185Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:50.781Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\",\n   a_0.\"state\" as \"state\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN \"malloytest\".\"airports\" AS a_0\n  ON base.\"state\"=a_0.\"state\" AND (a_0.\"state\" IN ('NH','CA'))\nGROUP BY 2\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:51.185Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:51.252Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c",
       a_0."state" as "state"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN "malloytest"."airports" AS a_0
      ON base."state"=a_0."state" AND (a_0."state" IN ('NH','CA'))
    GROUP BY 2
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "191f0b82-f322-40ed-8490-94f561f5990f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:50.685Z",
      "Database": "dev",
      "Duration": 44287504,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5",
      "RedshiftPid": 1073750136,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:50.777Z",
          "Duration": 44287504,
          "HasResultSet": false,
          "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:51.185Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:50.781Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\",\n   a_0.\"state\" as \"state\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN \"malloytest\".\"airports\" AS a_0\n  ON base.\"state\"=a_0.\"state\" AND (a_0.\"state\" IN ('NH','CA'))\nGROUP BY 2\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:51.185Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:51.252Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:163:8)

  ● join_one condition no primary key - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0755d6c0-8426-45dc-b67e-32c5dda61466",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:52.045Z",
      "Database": "dev",
      "Duration": 44241406,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3081749b-5373-47b1-b646-3b5b88ca8615",
      "RedshiftPid": 1073905775,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:52.125Z",
          "Duration": 44241406,
          "HasResultSet": false,
          "Id": "3081749b-5373-47b1-b646-3b5b88ca8615:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:52.596Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:52.128Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3081749b-5373-47b1-b646-3b5b88ca8615:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\"\nFROM \"malloytest\".\"airports\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON base.\"state\"=a_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:52.596Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:52.652Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c"
    FROM "malloytest"."airports" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON base."state"=a_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0755d6c0-8426-45dc-b67e-32c5dda61466",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:52.045Z",
      "Database": "dev",
      "Duration": 44241406,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3081749b-5373-47b1-b646-3b5b88ca8615",
      "RedshiftPid": 1073905775,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:52.125Z",
          "Duration": 44241406,
          "HasResultSet": false,
          "Id": "3081749b-5373-47b1-b646-3b5b88ca8615:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:52.596Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:52.128Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3081749b-5373-47b1-b646-3b5b88ca8615:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\"\nFROM \"malloytest\".\"airports\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON base.\"state\"=a_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:52.596Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:52.652Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:179:8)

  ● join_one filter multiple values - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7ddb5b81-91d4-4093-af90-eb1528162cd3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:53.377Z",
      "Database": "dev",
      "Duration": 53717804,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6",
      "RedshiftPid": 1073946726,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:53.462Z",
          "Duration": 53717804,
          "HasResultSet": false,
          "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:53.898Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:53.465Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\",\n   a_0.\"state\" as \"state\"\nFROM \"malloytest\".\"airports\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON base.\"state\"=a_0.\"state\" AND (a_0.\"state\" IN ('TX','LA'))\nGROUP BY 2\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:53.898Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:53.964Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c",
       a_0."state" as "state"
    FROM "malloytest"."airports" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON base."state"=a_0."state" AND (a_0."state" IN ('TX','LA'))
    GROUP BY 2
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7ddb5b81-91d4-4093-af90-eb1528162cd3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:53.377Z",
      "Database": "dev",
      "Duration": 53717804,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6",
      "RedshiftPid": 1073946726,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:53.462Z",
          "Duration": 53717804,
          "HasResultSet": false,
          "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:53.898Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:53.465Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\",\n   a_0.\"state\" as \"state\"\nFROM \"malloytest\".\"airports\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON base.\"state\"=a_0.\"state\" AND (a_0.\"state\" IN ('TX','LA'))\nGROUP BY 2\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:53.898Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:53.964Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:194:8)

  ● join_many cross from  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2b544658-2126-4ca4-bcbf-87f99be115e7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:54.747Z",
      "Database": "dev",
      "Duration": 43340719,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528",
      "RedshiftPid": 1073954940,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:54.853Z",
          "Duration": 43340719,
          "HasResultSet": false,
          "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:55.307Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:54.856Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528:2",
          "QueryString": "SELECT \n   count(distinct CONCAT(base.\"state\",a_0.\"state\")) as \"row_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"left_count\",\n   COUNT(DISTINCT a_0.\"__distinct_key\") as \"right_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\",\n   ROUND((COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE((base.\"airport_count\"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as \"left_small_sum\",\n   ROUND((COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE((base.\"airport_count\"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as \"right_small_sum\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:55.307Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:55.372Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       count(distinct CONCAT(base."state",a_0."state")) as "row_count",
       COUNT(DISTINCT base."__distinct_key") as "left_count",
       COUNT(DISTINCT a_0."__distinct_key") as "right_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum",
       ROUND((COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE((base."airport_count"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as "left_small_sum",
       ROUND((COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE((base."airport_count"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as "right_small_sum"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON 1=1

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2b544658-2126-4ca4-bcbf-87f99be115e7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:54.747Z",
      "Database": "dev",
      "Duration": 43340719,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528",
      "RedshiftPid": 1073954940,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:54.853Z",
          "Duration": 43340719,
          "HasResultSet": false,
          "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:55.307Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:54.856Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528:2",
          "QueryString": "SELECT \n   count(distinct CONCAT(base.\"state\",a_0.\"state\")) as \"row_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"left_count\",\n   COUNT(DISTINCT a_0.\"__distinct_key\") as \"right_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\",\n   ROUND((COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE((base.\"airport_count\"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as \"left_small_sum\",\n   ROUND((COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE((base.\"airport_count\"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as \"right_small_sum\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:55.307Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:55.372Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:222:8)

  ● join_one only  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5d089838-d8d1-4630-b81f-cef8873a4b2a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:56.132Z",
      "Database": "dev",
      "Duration": 53417368,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8",
      "RedshiftPid": 1073823861,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:56.237Z",
          "Duration": 53417368,
          "HasResultSet": false,
          "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:56.681Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:56.240Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     COALESCE(SUM(base.\"airport_count\"),0) as \"r\"\n  FROM \"malloytest\".\"state_facts\" as base\n)\nSELECT \n   count(distinct CONCAT(base.\"state\",CAST(a_0.\"r\" AS varchar))) as \"row_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"r\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\",\n   COALESCE(SUM(base.\"airport_count\"+a_0.\"r\"),0) as \"sum_sum\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage0 as x) AS a_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:56.681Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:56.744Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         COALESCE(SUM(base."airport_count"),0) as "r"
      FROM "malloytest"."state_facts" as base
    )
    SELECT 
       count(distinct CONCAT(base."state",CAST(a_0."r" AS varchar))) as "row_count",
       COALESCE(SUM(base."airport_count"),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."r",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum",
       COALESCE(SUM(base."airport_count"+a_0."r"),0) as "sum_sum"
    FROM "malloytest"."state_facts" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage0 as x) AS a_0
      ON 1=1

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5d089838-d8d1-4630-b81f-cef8873a4b2a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:56.132Z",
      "Database": "dev",
      "Duration": 53417368,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8",
      "RedshiftPid": 1073823861,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:56.237Z",
          "Duration": 53417368,
          "HasResultSet": false,
          "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:56.681Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:56.240Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     COALESCE(SUM(base.\"airport_count\"),0) as \"r\"\n  FROM \"malloytest\".\"state_facts\" as base\n)\nSELECT \n   count(distinct CONCAT(base.\"state\",CAST(a_0.\"r\" AS varchar))) as \"row_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"r\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\",\n   COALESCE(SUM(base.\"airport_count\"+a_0.\"r\"),0) as \"sum_sum\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage0 as x) AS a_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:56.681Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:56.744Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:249:8)

  ● join_many cross ON  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3c9682cc-f6d2-4a3f-aa42-b4016aff8159",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:57.500Z",
      "Database": "dev",
      "Duration": 45432062,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "d1c413cf-6d8f-427e-a9e2-943169206022",
      "RedshiftPid": 1073913981,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:57.591Z",
          "Duration": 45432062,
          "HasResultSet": false,
          "Id": "d1c413cf-6d8f-427e-a9e2-943169206022:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:58.059Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:57.594Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "d1c413cf-6d8f-427e-a9e2-943169206022:2",
          "QueryString": "SELECT \n   count(distinct CONCAT(base.\"state\",a_0.\"state\")) as \"row_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON a_0.\"state\" IN ('CA','NY')\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:58.059Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:58.125Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       count(distinct CONCAT(base."state",a_0."state")) as "row_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON a_0."state" IN ('CA','NY')

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3c9682cc-f6d2-4a3f-aa42-b4016aff8159",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:57.500Z",
      "Database": "dev",
      "Duration": 45432062,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "d1c413cf-6d8f-427e-a9e2-943169206022",
      "RedshiftPid": 1073913981,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:57.591Z",
          "Duration": 45432062,
          "HasResultSet": false,
          "Id": "d1c413cf-6d8f-427e-a9e2-943169206022:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:58.059Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:57.594Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "d1c413cf-6d8f-427e-a9e2-943169206022:2",
          "QueryString": "SELECT \n   count(distinct CONCAT(base.\"state\",a_0.\"state\")) as \"row_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON a_0.\"state\" IN ('CA','NY')\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:58.059Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:58.125Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:272:8)

  ● join inner- redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f30875e4-5f0c-4ced-9f23-3681517215c8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:00.407Z",
      "Database": "dev",
      "Duration": 44566629,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d",
      "RedshiftPid": 1073922167,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:00.507Z",
          "Duration": 44566629,
          "HasResultSet": false,
          "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:00.952Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:00.511Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(1) as \"ac_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM __stage2 as base\n INNER JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:00.952Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:01.028Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(1) as "ac_count",
       COALESCE(SUM(base."airport_count"),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM __stage2 as base
     INNER JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f30875e4-5f0c-4ced-9f23-3681517215c8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:00.407Z",
      "Database": "dev",
      "Duration": 44566629,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d",
      "RedshiftPid": 1073922167,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:00.507Z",
          "Duration": 44566629,
          "HasResultSet": false,
          "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:00.952Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:00.511Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(1) as \"ac_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM __stage2 as base\n INNER JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:00.952Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:01.028Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:345:10)

  ● join left - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a6b0a3ea-7143-4015-a9d1-aa4d13868b8c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:01.938Z",
      "Database": "dev",
      "Duration": 51436577,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920",
      "RedshiftPid": 1073774710,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:02.057Z",
          "Duration": 51436577,
          "HasResultSet": false,
          "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:02.519Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:02.061Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(1) as \"ac_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM __stage2 as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:02.519Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:02.584Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(1) as "ac_count",
       COALESCE(SUM(base."airport_count"),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM __stage2 as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a6b0a3ea-7143-4015-a9d1-aa4d13868b8c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:01.938Z",
      "Database": "dev",
      "Duration": 51436577,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920",
      "RedshiftPid": 1073774710,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:02.057Z",
          "Duration": 51436577,
          "HasResultSet": false,
          "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:02.519Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:02.061Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(1) as \"ac_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM __stage2 as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:02.519Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:02.584Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:371:10)

  ● join right - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f11e4258-bff9-436e-996b-f45a36df2a9b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:03.403Z",
      "Database": "dev",
      "Duration": 52623343,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3",
      "RedshiftPid": 1073995902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:03.490Z",
          "Duration": 52623343,
          "HasResultSet": false,
          "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:03.964Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:03.493Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT base.\"__distinct_key\") as \"ac_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage2 as x) as base\n RIGHT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:03.964Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:04.029Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT base."__distinct_key") as "ac_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage2 as x) as base
     RIGHT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f11e4258-bff9-436e-996b-f45a36df2a9b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:03.403Z",
      "Database": "dev",
      "Duration": 52623343,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3",
      "RedshiftPid": 1073995902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:03.490Z",
          "Duration": 52623343,
          "HasResultSet": false,
          "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:03.964Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:03.493Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT base.\"__distinct_key\") as \"ac_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage2 as x) as base\n RIGHT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:03.964Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:04.029Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:397:10)

  ● join full - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e33f6244-06b8-4bf4-aed6-b24f49e02dd6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:04.779Z",
      "Database": "dev",
      "Duration": 44222407,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106",
      "RedshiftPid": 1073782907,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:04.865Z",
          "Duration": 44222407,
          "HasResultSet": false,
          "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:05.298Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:04.868Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT base.\"__distinct_key\") as \"ac_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage2 as x) as base\n FULL JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:05.298Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:05.365Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT base."__distinct_key") as "ac_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage2 as x) as base
     FULL JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e33f6244-06b8-4bf4-aed6-b24f49e02dd6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:04.779Z",
      "Database": "dev",
      "Duration": 44222407,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106",
      "RedshiftPid": 1073782907,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:04.865Z",
          "Duration": 44222407,
          "HasResultSet": false,
          "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:05.298Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:04.868Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT base.\"__distinct_key\") as \"ac_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage2 as x) as base\n FULL JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:05.298Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:05.365Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:425:10)

  ● leafy count - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "aa59bcca-65e0-4013-a365-a8df659d4a1f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:06.143Z",
      "Database": "dev",
      "Duration": 44067354,
      "Error": "Query #2 failed with ERROR: function gen_random_uuid() does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c",
      "RedshiftPid": 1073864807,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:06.240Z",
          "Duration": 44067354,
          "HasResultSet": false,
          "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:06.644Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:06.244Z",
          "Duration": -1,
          "Error": "ERROR: function gen_random_uuid() does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage0 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nWHERE base.\"state\"='CA'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:06.644Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:06.710Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT am_states_0."__distinct_key") as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage0 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    WHERE base."state"='CA'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "aa59bcca-65e0-4013-a365-a8df659d4a1f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:06.143Z",
      "Database": "dev",
      "Duration": 44067354,
      "Error": "Query #2 failed with ERROR: function gen_random_uuid() does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c",
      "RedshiftPid": 1073864807,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:06.240Z",
          "Duration": 44067354,
          "HasResultSet": false,
          "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:06.644Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:06.244Z",
          "Duration": -1,
          "Error": "ERROR: function gen_random_uuid() does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage0 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nWHERE base.\"state\"='CA'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:06.644Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:06.710Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:454:10)

  ● nest/unnest -basic - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9692b0c0-a262-4cc7-9210-ab83f7ecb022",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:07.507Z",
      "Database": "dev",
      "Duration": 44383454,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 21, column 24\n  Position: 541",
      "HasResultSet": false,
      "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088",
      "RedshiftPid": 1073832038,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:07.603Z",
          "Duration": 44383454,
          "HasResultSet": false,
          "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:08.028Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:07.607Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 21, column 24\n  Position: 541",
          "HasResultSet": false,
          "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"d__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"d__1\"::DOUBLE PRECISION as \"d\"\n      ) as __x)  ORDER BY  \"d__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"p\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   base.\"state\" as \"state\",\n   base.\"c\" as \"c\",\n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as \"d\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"p\") as p_0 ON true\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:08.028Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:08.093Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "d__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "d__1"::DOUBLE PRECISION as "d"
          ) as __x)  ORDER BY  "d__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "p"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       base."state" as "state",
       base."c" as "c",
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as "d"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."p") as p_0 ON true
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9692b0c0-a262-4cc7-9210-ab83f7ecb022",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:07.507Z",
      "Database": "dev",
      "Duration": 44383454,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 21, column 24\n  Position: 541",
      "HasResultSet": false,
      "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088",
      "RedshiftPid": 1073832038,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:07.603Z",
          "Duration": 44383454,
          "HasResultSet": false,
          "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:08.028Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:07.607Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 21, column 24\n  Position: 541",
          "HasResultSet": false,
          "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"d__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"d__1\"::DOUBLE PRECISION as \"d\"\n      ) as __x)  ORDER BY  \"d__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"p\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   base.\"state\" as \"state\",\n   base.\"c\" as \"c\",\n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as \"d\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"p\") as p_0 ON true\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:08.028Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:08.093Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:476:10)

  ● leafy nested count - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "92e4595b-3a22-4614-98e3-ac457ffb48cc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:10.331Z",
      "Database": "dev",
      "Duration": 44270034,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
      "HasResultSet": false,
      "Id": "f32b951c-d768-4491-b875-dec78cb1d587",
      "RedshiftPid": 1073741949,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:10.460Z",
          "Duration": 44270034,
          "HasResultSet": false,
          "Id": "f32b951c-d768-4491-b875-dec78cb1d587:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:10.877Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:10.464Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
          "HasResultSet": false,
          "Id": "f32b951c-d768-4491-b875-dec78cb1d587:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" ~ '^(A|M)'\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    \"popular_name__0\" as \"popular_name\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"popular_name__1\" as \"popular_name\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"nested_state\"\n  FROM __stage0\n  GROUP BY 1,2\n)\nSELECT \n   base.\"state\" as \"state\",\n   am_states_0.\"state\" as \"am_state\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\" || 'x' || (nested_state_0->>'__row_id')) as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage1 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0.\"nested_state\") __xx ))) as nested_state_0 ON true\nWHERE base.\"state\"='CA'\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:10.877Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:10.942Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" ~ '^(A|M)'
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        "popular_name__0" as "popular_name",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "popular_name__1" as "popular_name"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "nested_state"
      FROM __stage0
      GROUP BY 1,2
    )
    SELECT 
       base."state" as "state",
       am_states_0."state" as "am_state",
       COUNT(DISTINCT am_states_0."__distinct_key" || 'x' || (nested_state_0->>'__row_id')) as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage1 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0."nested_state") __xx ))) as nested_state_0 ON true
    WHERE base."state"='CA'
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "92e4595b-3a22-4614-98e3-ac457ffb48cc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:10.331Z",
      "Database": "dev",
      "Duration": 44270034,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
      "HasResultSet": false,
      "Id": "f32b951c-d768-4491-b875-dec78cb1d587",
      "RedshiftPid": 1073741949,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:10.460Z",
          "Duration": 44270034,
          "HasResultSet": false,
          "Id": "f32b951c-d768-4491-b875-dec78cb1d587:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:10.877Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:10.464Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
          "HasResultSet": false,
          "Id": "f32b951c-d768-4491-b875-dec78cb1d587:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" ~ '^(A|M)'\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    \"popular_name__0\" as \"popular_name\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"popular_name__1\" as \"popular_name\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"nested_state\"\n  FROM __stage0\n  GROUP BY 1,2\n)\nSELECT \n   base.\"state\" as \"state\",\n   am_states_0.\"state\" as \"am_state\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\" || 'x' || (nested_state_0->>'__row_id')) as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage1 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0.\"nested_state\") __xx ))) as nested_state_0 ON true\nWHERE base.\"state\"='CA'\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:10.877Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:10.942Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:523:10)

  ● basic index - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "963c703c-926c-4d6e-b8e2-8de9be1ce1e1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:13.132Z",
      "Database": "dev",
      "Duration": 44904915,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:13.230Z",
          "Duration": 44904915,
          "HasResultSet": false,
          "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:13.669Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:13.233Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n      WHEN 1 THEN 'sql native'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'sql native'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'number'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'number'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'number'\n      WHEN 15 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 2 THEN base.\"cancelled\"\n      WHEN 3 THEN base.\"carrier\"\n      WHEN 6 THEN base.\"destination\"\n      WHEN 8 THEN base.\"diverted\"\n      WHEN 9 THEN base.\"flight_num\"\n      WHEN 12 THEN base.\"origin\"\n      WHEN 13 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base.\"arr_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"arr_delay\") as VARCHAR)\n      WHEN 4 THEN MIN(CAST(base.\"dep_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"dep_delay\") as VARCHAR)\n      WHEN 7 THEN MIN(CAST(base.\"distance\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"distance\") as VARCHAR)\n      WHEN 10 THEN MIN(CAST(base.\"flight_time\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"flight_time\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"id2\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id2\") as VARCHAR)\n      WHEN 14 THEN MIN(CAST(base.\"taxi_in\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_in\") as VARCHAR)\n      WHEN 15 THEN MIN(CAST(base.\"taxi_out\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_out\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"flights\" as base\n  CROSS JOIN GENERATE_SERIES(0,16,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"fieldPath\" as \"fieldPath\",\n   base.\"fieldType\" as \"fieldType\",\n   base.\"fieldValue\" as \"fieldValue\",\n   base.\"weight\" as \"weight\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='carrier'\nORDER BY 4 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:13.669Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:13.735Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
          WHEN 1 THEN 'sql native'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'sql native'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'number'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'number'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'number'
          WHEN 15 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 2 THEN base."cancelled"
          WHEN 3 THEN base."carrier"
          WHEN 6 THEN base."destination"
          WHEN 8 THEN base."diverted"
          WHEN 9 THEN base."flight_num"
          WHEN 12 THEN base."origin"
          WHEN 13 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base."arr_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."arr_delay") as VARCHAR)
          WHEN 4 THEN MIN(CAST(base."dep_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."dep_delay") as VARCHAR)
          WHEN 7 THEN MIN(CAST(base."distance" as VARCHAR)) || ' to ' || CAST(MAX(base."distance") as VARCHAR)
          WHEN 10 THEN MIN(CAST(base."flight_time" as VARCHAR)) || ' to ' || CAST(MAX(base."flight_time") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."id2" as VARCHAR)) || ' to ' || CAST(MAX(base."id2") as VARCHAR)
          WHEN 14 THEN MIN(CAST(base."taxi_in" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_in") as VARCHAR)
          WHEN 15 THEN MIN(CAST(base."taxi_out" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_out") as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."flights" as base
      CROSS JOIN GENERATE_SERIES(0,16,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."fieldPath" as "fieldPath",
       base."fieldType" as "fieldType",
       base."fieldValue" as "fieldValue",
       base."weight" as "weight"
    FROM __stage1 as base
    WHERE base."fieldName"='carrier'
    ORDER BY 4 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "963c703c-926c-4d6e-b8e2-8de9be1ce1e1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:13.132Z",
      "Database": "dev",
      "Duration": 44904915,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:13.230Z",
          "Duration": 44904915,
          "HasResultSet": false,
          "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:13.669Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:13.233Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n      WHEN 1 THEN 'sql native'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'sql native'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'number'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'number'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'number'\n      WHEN 15 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 2 THEN base.\"cancelled\"\n      WHEN 3 THEN base.\"carrier\"\n      WHEN 6 THEN base.\"destination\"\n      WHEN 8 THEN base.\"diverted\"\n      WHEN 9 THEN base.\"flight_num\"\n      WHEN 12 THEN base.\"origin\"\n      WHEN 13 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base.\"arr_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"arr_delay\") as VARCHAR)\n      WHEN 4 THEN MIN(CAST(base.\"dep_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"dep_delay\") as VARCHAR)\n      WHEN 7 THEN MIN(CAST(base.\"distance\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"distance\") as VARCHAR)\n      WHEN 10 THEN MIN(CAST(base.\"flight_time\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"flight_time\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"id2\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id2\") as VARCHAR)\n      WHEN 14 THEN MIN(CAST(base.\"taxi_in\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_in\") as VARCHAR)\n      WHEN 15 THEN MIN(CAST(base.\"taxi_out\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_out\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"flights\" as base\n  CROSS JOIN GENERATE_SERIES(0,16,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"fieldPath\" as \"fieldPath\",\n   base.\"fieldType\" as \"fieldType\",\n   base.\"fieldValue\" as \"fieldValue\",\n   base.\"weight\" as \"weight\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='carrier'\nORDER BY 4 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:13.669Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:13.735Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:543:10)

  ● number as null 2 - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5276ae18-ae77-408b-9142-1c3206e50954",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:14.522Z",
      "Database": "dev",
      "Duration": 44106109,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f",
      "RedshiftPid": 1073864801,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:14.618Z",
          "Duration": 44106109,
          "HasResultSet": false,
          "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:15.042Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:14.621Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:15.042Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:15.107Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5276ae18-ae77-408b-9142-1c3206e50954",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:14.522Z",
      "Database": "dev",
      "Duration": 44106109,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f",
      "RedshiftPid": 1073864801,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:14.618Z",
          "Duration": 44106109,
          "HasResultSet": false,
          "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:15.042Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:14.621Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:15.042Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:15.107Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:562:10)

  ● avg ignore null- redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e756c5c8-2caa-4a8e-85a2-b71cb148cd04",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:20.245Z",
      "Database": "dev",
      "Duration": 51977403,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5",
      "RedshiftPid": 1073995902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:20.333Z",
          "Duration": 51977403,
          "HasResultSet": false,
          "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:20.777Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:20.336Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5:2",
          "QueryString": "SELECT \n   (CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"a\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base.\"a\" IS NOT NULL THEN base.\"__distinct_key\" END),0) as \"avg_a\",\n   (CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(x1_0.\"a\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(x1_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(x1_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN x1_0.\"a\" IS NOT NULL THEN x1_0.\"__distinct_key\" END),0) as \"avg_b\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM (\n        SELECT 2 as \"a\"\n        UNION ALL SELECT 4\n        UNION ALL SELECT null\n      ) as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM (\n        SELECT 2 as \"a\"\n        UNION ALL SELECT 4\n        UNION ALL SELECT null\n      ) as x) AS x1_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:20.777Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:20.853Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."a",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base."a" IS NOT NULL THEN base."__distinct_key" END),0) as "avg_a",
       (CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(x1_0."a",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(x1_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(x1_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN x1_0."a" IS NOT NULL THEN x1_0."__distinct_key" END),0) as "avg_b"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM (
            SELECT 2 as "a"
            UNION ALL SELECT 4
            UNION ALL SELECT null
          ) as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM (
            SELECT 2 as "a"
            UNION ALL SELECT 4
            UNION ALL SELECT null
          ) as x) AS x1_0
      ON 1=1

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e756c5c8-2caa-4a8e-85a2-b71cb148cd04",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:20.245Z",
      "Database": "dev",
      "Duration": 51977403,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5",
      "RedshiftPid": 1073995902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:20.333Z",
          "Duration": 51977403,
          "HasResultSet": false,
          "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:20.777Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:20.336Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5:2",
          "QueryString": "SELECT \n   (CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"a\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base.\"a\" IS NOT NULL THEN base.\"__distinct_key\" END),0) as \"avg_a\",\n   (CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(x1_0.\"a\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(x1_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(x1_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN x1_0.\"a\" IS NOT NULL THEN x1_0.\"__distinct_key\" END),0) as \"avg_b\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM (\n        SELECT 2 as \"a\"\n        UNION ALL SELECT 4\n        UNION ALL SELECT null\n      ) as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM (\n        SELECT 2 as \"a\"\n        UNION ALL SELECT 4\n        UNION ALL SELECT null\n      ) as x) AS x1_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:20.777Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:20.853Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:589:11)

  ● ungrouped top level - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "66faac9c-b8db-4630-9fd9-1faddbdb2bb6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:23.104Z",
      "Database": "dev",
      "Duration": 44103400,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 18, column 36\n  Position: 507",
      "HasResultSet": false,
      "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6",
      "RedshiftPid": 1073971327,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:23.192Z",
          "Duration": 44103400,
          "HasResultSet": false,
          "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:23.619Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:23.195Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 18, column 36\n  Position: 507",
          "HasResultSet": false,
          "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"births_per_100k__1\") FILTER (WHERE group_set=1 AND \"births_per_100k__1\" IS NOT NULL))[1] as \"births_per_100k\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:23.619Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:23.684Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("births_per_100k__1") FILTER (WHERE group_set=1 AND "births_per_100k__1" IS NOT NULL))[1] as "births_per_100k"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "66faac9c-b8db-4630-9fd9-1faddbdb2bb6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:23.104Z",
      "Database": "dev",
      "Duration": 44103400,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 18, column 36\n  Position: 507",
      "HasResultSet": false,
      "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6",
      "RedshiftPid": 1073971327,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:23.192Z",
          "Duration": 44103400,
          "HasResultSet": false,
          "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:23.619Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:23.195Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 18, column 36\n  Position: 507",
          "HasResultSet": false,
          "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"births_per_100k__1\") FILTER (WHERE group_set=1 AND \"births_per_100k__1\" IS NOT NULL))[1] as \"births_per_100k\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:23.619Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:23.684Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:615:11)

  ● ungrouped top level with nested  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bdbcc91a-0496-4fa7-8762-2cba0faab3a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:24.452Z",
      "Database": "dev",
      "Duration": 44957502,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 24, column 36\n  Position: 705",
      "HasResultSet": false,
      "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a",
      "RedshiftPid": 1073946734,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:24.558Z",
          "Duration": 44957502,
          "HasResultSet": false,
          "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:24.966Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:24.562Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 24, column 36\n  Position: 705",
          "HasResultSet": false,
          "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"births_per_100k__1\") FILTER (WHERE group_set=1 AND \"births_per_100k__1\" IS NOT NULL))[1] as \"births_per_100k\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 1000\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:24.966Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:25.032Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1",
        CASE WHEN group_set=2 THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("births_per_100k__1") FILTER (WHERE group_set=1 AND "births_per_100k__1" IS NOT NULL))[1] as "births_per_100k",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "total_births__2"::DOUBLE PRECISION as "total_births"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_name"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 1000

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bdbcc91a-0496-4fa7-8762-2cba0faab3a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:24.452Z",
      "Database": "dev",
      "Duration": 44957502,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 24, column 36\n  Position: 705",
      "HasResultSet": false,
      "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a",
      "RedshiftPid": 1073946734,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:24.558Z",
          "Duration": 44957502,
          "HasResultSet": false,
          "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:24.966Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:24.562Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 24, column 36\n  Position: 705",
          "HasResultSet": false,
          "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"births_per_100k__1\") FILTER (WHERE group_set=1 AND \"births_per_100k__1\" IS NOT NULL))[1] as \"births_per_100k\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 1000\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:24.966Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:25.032Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:633:11)

  ● ungrouped - eliminate rows  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bea86484-ed36-4410-a014-3788364f45d7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:25.838Z",
      "Database": "dev",
      "Duration": 44388411,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"m__1\") FILTER\", at line 17, column 22\n  Position: 417",
      "HasResultSet": false,
      "Id": "a120a671-b428-4b08-aae4-6422ada5572e",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:25.937Z",
          "Duration": 44388411,
          "HasResultSet": false,
          "Id": "a120a671-b428-4b08-aae4-6422ada5572e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:26.376Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:25.940Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"m__1\") FILTER\", at line 17, column 22\n  Position: 417",
          "HasResultSet": false,
          "Id": "a120a671-b428-4b08-aae4-6422ada5572e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX(CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END) OVER () as \"m__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" IN ('CA','NY')\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"m__1\") FILTER (WHERE group_set=1 AND \"m__1\" IS NOT NULL))[1] as \"m\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:26.376Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:26.441Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX(CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END) OVER () as "m__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" IN ('CA','NY')
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("m__1") FILTER (WHERE group_set=1 AND "m__1" IS NOT NULL))[1] as "m"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bea86484-ed36-4410-a014-3788364f45d7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:25.838Z",
      "Database": "dev",
      "Duration": 44388411,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"m__1\") FILTER\", at line 17, column 22\n  Position: 417",
      "HasResultSet": false,
      "Id": "a120a671-b428-4b08-aae4-6422ada5572e",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:25.937Z",
          "Duration": 44388411,
          "HasResultSet": false,
          "Id": "a120a671-b428-4b08-aae4-6422ada5572e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:26.376Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:25.940Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"m__1\") FILTER\", at line 17, column 22\n  Position: 417",
          "HasResultSet": false,
          "Id": "a120a671-b428-4b08-aae4-6422ada5572e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX(CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END) OVER () as \"m__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" IN ('CA','NY')\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"m__1\") FILTER (WHERE group_set=1 AND \"m__1\" IS NOT NULL))[1] as \"m\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:26.376Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:26.441Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:646:11)

  ● ungrouped nested with no grouping above - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "29dc459c-46ab-4019-ba3b-6f3df9dbd22c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:27.204Z",
      "Database": "dev",
      "Duration": 53577638,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 20, column 33\n  Position: 593",
      "HasResultSet": false,
      "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c",
      "RedshiftPid": 1073815653,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:27.277Z",
          "Duration": 53577638,
          "HasResultSet": false,
          "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:27.717Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:27.280Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 20, column 33\n  Position: 593",
          "HasResultSet": false,
          "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"total_births__0\") FILTER (WHERE group_set=0 AND \"total_births__0\" IS NOT NULL))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:27.717Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:27.782Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("total_births__0") FILTER (WHERE group_set=0 AND "total_births__0" IS NOT NULL))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_name"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "29dc459c-46ab-4019-ba3b-6f3df9dbd22c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:27.204Z",
      "Database": "dev",
      "Duration": 53577638,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 20, column 33\n  Position: 593",
      "HasResultSet": false,
      "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c",
      "RedshiftPid": 1073815653,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:27.277Z",
          "Duration": 53577638,
          "HasResultSet": false,
          "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:27.717Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:27.280Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 20, column 33\n  Position: 593",
          "HasResultSet": false,
          "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"total_births__0\") FILTER (WHERE group_set=0 AND \"total_births__0\" IS NOT NULL))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:27.717Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:27.782Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:666:13)

  ● ungrouped - partial grouping - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "51eeedf3-fe8e-45c3-9172-61a64472e4a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:28.559Z",
      "Database": "dev",
      "Duration": 52458839,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 55, column 22\n  Position: 1628",
      "HasResultSet": false,
      "Id": "8926adde-616b-4119-ac5a-d82edbe779a3",
      "RedshiftPid": 1073750137,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:28.658Z",
          "Duration": 52458839,
          "HasResultSet": false,
          "Id": "8926adde-616b-4119-ac5a-d82edbe779a3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:29.111Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:28.661Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 55, column 22\n  Position: 1628",
          "HasResultSet": false,
          "Id": "8926adde-616b-4119-ac5a-d82edbe779a3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END as \"faa_region__1\",\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END as \"fac_type__5\",\n    CASE WHEN group_set=5 THEN\n      COUNT(1)\n      END as \"c__5\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all___5\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all_state_region__5\",\n    MAX((CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END) as \"all_of_this_type__5\",\n    MAX((CASE WHEN group_set=4 THEN\n      COUNT(1)\n      END)) OVER () as \"all_top__5\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,5,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"faa_region__1\" as \"faa_region\",\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"c__1\") FILTER (WHERE group_set=1 AND \"c__1\" IS NOT NULL))[1] as \"c\",\n  (ARRAY_AGG(\"all___1\") FILTER (WHERE group_set=1 AND \"all___1\" IS NOT NULL))[1] as \"all_\",\n  (ARRAY_AGG(\"airport_count__1\") FILTER (WHERE group_set=1 AND \"airport_count__1\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__5\" as \"fac_type\", \n    \"c__5\"::DOUBLE PRECISION as \"c\", \n    \"all___5\"::DOUBLE PRECISION as \"all_\", \n    \"all_state_region__5\"::DOUBLE PRECISION as \"all_state_region\", \n    \"all_of_this_type__5\"::DOUBLE PRECISION as \"all_of_this_type\", \n    \"all_top__5\"::DOUBLE PRECISION as \"all_top\"\n    ) as __x)  ORDER BY  \"c__5\" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2,3,4)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:29.111Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:29.176Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END as "faa_region__1",
        CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END as "fac_type__5",
        CASE WHEN group_set=5 THEN
          COUNT(1)
          END as "c__5",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all___5",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all_state_region__5",
        MAX((CASE WHEN group_set=3 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END) as "all_of_this_type__5",
        MAX((CASE WHEN group_set=4 THEN
          COUNT(1)
          END)) OVER () as "all_top__5"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,5,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,3,7
    )
    SELECT
      "faa_region__1" as "faa_region",
      "state__1" as "state",
      (ARRAY_AGG("c__1") FILTER (WHERE group_set=1 AND "c__1" IS NOT NULL))[1] as "c",
      (ARRAY_AGG("all___1") FILTER (WHERE group_set=1 AND "all___1" IS NOT NULL))[1] as "all_",
      (ARRAY_AGG("airport_count__1") FILTER (WHERE group_set=1 AND "airport_count__1" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__5" as "fac_type", 
        "c__5"::DOUBLE PRECISION as "c", 
        "all___5"::DOUBLE PRECISION as "all_", 
        "all_state_region__5"::DOUBLE PRECISION as "all_state_region", 
        "all_of_this_type__5"::DOUBLE PRECISION as "all_of_this_type", 
        "all_top__5"::DOUBLE PRECISION as "all_top"
        ) as __x)  ORDER BY  "c__5" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2,3,4)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "51eeedf3-fe8e-45c3-9172-61a64472e4a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:28.559Z",
      "Database": "dev",
      "Duration": 52458839,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 55, column 22\n  Position: 1628",
      "HasResultSet": false,
      "Id": "8926adde-616b-4119-ac5a-d82edbe779a3",
      "RedshiftPid": 1073750137,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:28.658Z",
          "Duration": 52458839,
          "HasResultSet": false,
          "Id": "8926adde-616b-4119-ac5a-d82edbe779a3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:29.111Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:28.661Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 55, column 22\n  Position: 1628",
          "HasResultSet": false,
          "Id": "8926adde-616b-4119-ac5a-d82edbe779a3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END as \"faa_region__1\",\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END as \"fac_type__5\",\n    CASE WHEN group_set=5 THEN\n      COUNT(1)\n      END as \"c__5\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all___5\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all_state_region__5\",\n    MAX((CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END) as \"all_of_this_type__5\",\n    MAX((CASE WHEN group_set=4 THEN\n      COUNT(1)\n      END)) OVER () as \"all_top__5\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,5,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"faa_region__1\" as \"faa_region\",\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"c__1\") FILTER (WHERE group_set=1 AND \"c__1\" IS NOT NULL))[1] as \"c\",\n  (ARRAY_AGG(\"all___1\") FILTER (WHERE group_set=1 AND \"all___1\" IS NOT NULL))[1] as \"all_\",\n  (ARRAY_AGG(\"airport_count__1\") FILTER (WHERE group_set=1 AND \"airport_count__1\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__5\" as \"fac_type\", \n    \"c__5\"::DOUBLE PRECISION as \"c\", \n    \"all___5\"::DOUBLE PRECISION as \"all_\", \n    \"all_state_region__5\"::DOUBLE PRECISION as \"all_state_region\", \n    \"all_of_this_type__5\"::DOUBLE PRECISION as \"all_of_this_type\", \n    \"all_top__5\"::DOUBLE PRECISION as \"all_top\"\n    ) as __x)  ORDER BY  \"c__5\" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2,3,4)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:29.111Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:29.176Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:695:10)

  ● ungrouped - all nested - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "73dea6f7-1b37-4160-8928-4b4c2e0b6945",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:29.945Z",
      "Database": "dev",
      "Duration": 52121041,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 44, column 22\n  Position: 1226",
      "HasResultSet": false,
      "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1",
      "RedshiftPid": 1073766514,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:30.033Z",
          "Duration": 52121041,
          "HasResultSet": false,
          "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:30.473Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:30.036Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 44, column 22\n  Position: 1226",
          "HasResultSet": false,
          "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set=3 THEN\n      base.\"fac_type\"\n      END as \"fac_type__3\",\n    CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END as \"major__3\",\n    CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END as \"c__3\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all___3\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END, CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all_major__3\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,6,7\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"c__1\") FILTER (WHERE group_set=1 AND \"c__1\" IS NOT NULL))[1] as \"c\",\n  (ARRAY_AGG(\"all___1\") FILTER (WHERE group_set=1 AND \"all___1\" IS NOT NULL))[1] as \"all_\",\n  (ARRAY_AGG(\"airport_count__1\") FILTER (WHERE group_set=1 AND \"airport_count__1\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__3\" as \"fac_type\", \n    \"major__3\" as \"major\", \n    \"c__3\"::DOUBLE PRECISION as \"c\", \n    \"all___3\"::DOUBLE PRECISION as \"all_\", \n    \"all_major__3\"::DOUBLE PRECISION as \"all_major\"\n    ) as __x)  ORDER BY  \"c__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:30.473Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:30.537Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set=3 THEN
          base."fac_type"
          END as "fac_type__3",
        CASE WHEN group_set IN (3,2) THEN
          base."major"
          END as "major__3",
        CASE WHEN group_set=3 THEN
          COUNT(1)
          END as "c__3",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all___3",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN
          base."major"
          END, CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all_major__3"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,6,7
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("c__1") FILTER (WHERE group_set=1 AND "c__1" IS NOT NULL))[1] as "c",
      (ARRAY_AGG("all___1") FILTER (WHERE group_set=1 AND "all___1" IS NOT NULL))[1] as "all_",
      (ARRAY_AGG("airport_count__1") FILTER (WHERE group_set=1 AND "airport_count__1" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__3" as "fac_type", 
        "major__3" as "major", 
        "c__3"::DOUBLE PRECISION as "c", 
        "all___3"::DOUBLE PRECISION as "all_", 
        "all_major__3"::DOUBLE PRECISION as "all_major"
        ) as __x)  ORDER BY  "c__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "73dea6f7-1b37-4160-8928-4b4c2e0b6945",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:29.945Z",
      "Database": "dev",
      "Duration": 52121041,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 44, column 22\n  Position: 1226",
      "HasResultSet": false,
      "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1",
      "RedshiftPid": 1073766514,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:30.033Z",
          "Duration": 52121041,
          "HasResultSet": false,
          "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:30.473Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:30.036Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 44, column 22\n  Position: 1226",
          "HasResultSet": false,
          "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set=3 THEN\n      base.\"fac_type\"\n      END as \"fac_type__3\",\n    CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END as \"major__3\",\n    CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END as \"c__3\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all___3\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END, CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all_major__3\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,6,7\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"c__1\") FILTER (WHERE group_set=1 AND \"c__1\" IS NOT NULL))[1] as \"c\",\n  (ARRAY_AGG(\"all___1\") FILTER (WHERE group_set=1 AND \"all___1\" IS NOT NULL))[1] as \"all_\",\n  (ARRAY_AGG(\"airport_count__1\") FILTER (WHERE group_set=1 AND \"airport_count__1\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__3\" as \"fac_type\", \n    \"major__3\" as \"major\", \n    \"c__3\"::DOUBLE PRECISION as \"c\", \n    \"all___3\"::DOUBLE PRECISION as \"all_\", \n    \"all_major__3\"::DOUBLE PRECISION as \"all_major\"\n    ) as __x)  ORDER BY  \"c__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:30.473Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:30.537Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:726:10)

  ● ungrouped nested  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "798d1a27-266b-482a-a4cb-8cb55df3f39e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:31.287Z",
      "Database": "dev",
      "Duration": 43987937,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 740",
      "HasResultSet": false,
      "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e",
      "RedshiftPid": 1073930358,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:31.367Z",
          "Duration": 43987937,
          "HasResultSet": false,
          "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:31.796Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:31.370Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 740",
          "HasResultSet": false,
          "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY base.\"popular_name\"))*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:31.796Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:31.862Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY base."popular_name"))*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__0" as "popular_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "798d1a27-266b-482a-a4cb-8cb55df3f39e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:31.287Z",
      "Database": "dev",
      "Duration": 43987937,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 740",
      "HasResultSet": false,
      "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e",
      "RedshiftPid": 1073930358,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:31.367Z",
          "Duration": 43987937,
          "HasResultSet": false,
          "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:31.796Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:31.370Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 740",
          "HasResultSet": false,
          "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY base.\"popular_name\"))*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:31.796Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:31.862Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:747:10)

  ● ungrouped nested expression  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "78817f5e-dcfd-402e-849d-22227c20bb8b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:32.633Z",
      "Database": "dev",
      "Duration": 44912885,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
      "HasResultSet": false,
      "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3",
      "RedshiftPid": 1073840233,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:32.739Z",
          "Duration": 44912885,
          "HasResultSet": false,
          "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:33.206Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:32.743Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
          "HasResultSet": false,
          "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    UPPER(base.\"popular_name\") as \"upper_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY UPPER(base.\"popular_name\")))*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"upper_name__0\" as \"upper_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:33.206Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:33.272Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        UPPER(base."popular_name") as "upper_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY UPPER(base."popular_name")))*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "upper_name__0" as "upper_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "78817f5e-dcfd-402e-849d-22227c20bb8b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:32.633Z",
      "Database": "dev",
      "Duration": 44912885,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
      "HasResultSet": false,
      "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3",
      "RedshiftPid": 1073840233,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:32.739Z",
          "Duration": 44912885,
          "HasResultSet": false,
          "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:33.206Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:32.743Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
          "HasResultSet": false,
          "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    UPPER(base.\"popular_name\") as \"upper_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY UPPER(base.\"popular_name\")))*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"upper_name__0\" as \"upper_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:33.206Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:33.272Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:765:10)

  ● ungrouped nested group by float  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "563a801b-348d-4b0a-91b1-f9ef68430b5d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:34.003Z",
      "Database": "dev",
      "Duration": 44090952,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 608",
      "HasResultSet": false,
      "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a",
      "RedshiftPid": 1073938532,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:34.085Z",
          "Duration": 44090952,
          "HasResultSet": false,
          "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:34.502Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:34.089Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 608",
          "HasResultSet": false,
          "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300.0) as \"f__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300.0)) as \"ug__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"f__0\" as \"f\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"ug__1\"::DOUBLE PRECISION as \"ug\"\n    ) as __x)  ORDER BY  \"ug__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:34.502Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:34.569Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300.0) as "f__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300.0)) as "ug__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "f__0" as "f",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "ug__1"::DOUBLE PRECISION as "ug"
        ) as __x)  ORDER BY  "ug__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "563a801b-348d-4b0a-91b1-f9ef68430b5d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:34.003Z",
      "Database": "dev",
      "Duration": 44090952,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 608",
      "HasResultSet": false,
      "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a",
      "RedshiftPid": 1073938532,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:34.085Z",
          "Duration": 44090952,
          "HasResultSet": false,
          "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:34.502Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:34.089Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 608",
          "HasResultSet": false,
          "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300.0) as \"f__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300.0)) as \"ug__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"f__0\" as \"f\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"ug__1\"::DOUBLE PRECISION as \"ug\"\n    ) as __x)  ORDER BY  \"ug__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:34.502Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:34.569Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:783:10)

  ● all with parameters - basic  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0909e82b-b9d1-4b21-ad14-36dd8b4e3634",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:42.917Z",
      "Database": "dev",
      "Duration": 43630838,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__2\") FILTER\", at line 28, column 33\n  Position: 833",
      "HasResultSet": false,
      "Id": "9831caa6-8945-430d-a163-2c794a283806",
      "RedshiftPid": 1073881212,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:43.044Z",
          "Duration": 43630838,
          "HasResultSet": false,
          "Id": "9831caa6-8945-430d-a163-2c794a283806:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:43.515Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:43.047Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__2\") FILTER\", at line 28, column 33\n  Position: 833",
          "HasResultSet": false,
          "Id": "9831caa6-8945-430d-a163-2c794a283806:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER () as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__2\" as \"popular_name\",\n  \"state__2\" as \"state\",\n  (ARRAY_AGG(\"total_births__2\") FILTER (WHERE group_set=2 AND \"total_births__2\" IS NOT NULL))[1] as \"total_births\",\n  (ARRAY_AGG(\"all_births__2\") FILTER (WHERE group_set=2 AND \"all_births__2\" IS NOT NULL))[1] as \"all_births\",\n  (ARRAY_AGG(\"all_name__2\") FILTER (WHERE group_set=2 AND \"all_name__2\" IS NOT NULL))[1] as \"all_name\"\nFROM __stage0\nWHERE group_set NOT IN (0,1)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:43.515Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:43.580Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER () as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__2" as "popular_name",
      "state__2" as "state",
      (ARRAY_AGG("total_births__2") FILTER (WHERE group_set=2 AND "total_births__2" IS NOT NULL))[1] as "total_births",
      (ARRAY_AGG("all_births__2") FILTER (WHERE group_set=2 AND "all_births__2" IS NOT NULL))[1] as "all_births",
      (ARRAY_AGG("all_name__2") FILTER (WHERE group_set=2 AND "all_name__2" IS NOT NULL))[1] as "all_name"
    FROM __stage0
    WHERE group_set NOT IN (0,1)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0909e82b-b9d1-4b21-ad14-36dd8b4e3634",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:42.917Z",
      "Database": "dev",
      "Duration": 43630838,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__2\") FILTER\", at line 28, column 33\n  Position: 833",
      "HasResultSet": false,
      "Id": "9831caa6-8945-430d-a163-2c794a283806",
      "RedshiftPid": 1073881212,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:43.044Z",
          "Duration": 43630838,
          "HasResultSet": false,
          "Id": "9831caa6-8945-430d-a163-2c794a283806:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:43.515Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:43.047Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__2\") FILTER\", at line 28, column 33\n  Position: 833",
          "HasResultSet": false,
          "Id": "9831caa6-8945-430d-a163-2c794a283806:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER () as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__2\" as \"popular_name\",\n  \"state__2\" as \"state\",\n  (ARRAY_AGG(\"total_births__2\") FILTER (WHERE group_set=2 AND \"total_births__2\" IS NOT NULL))[1] as \"total_births\",\n  (ARRAY_AGG(\"all_births__2\") FILTER (WHERE group_set=2 AND \"all_births__2\" IS NOT NULL))[1] as \"all_births\",\n  (ARRAY_AGG(\"all_name__2\") FILTER (WHERE group_set=2 AND \"all_name__2\" IS NOT NULL))[1] as \"all_name\"\nFROM __stage0\nWHERE group_set NOT IN (0,1)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:43.515Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:43.580Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:845:8)

  ● all with parameters - nest  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d04bddd7-2226-4539-9261-47776b881e6f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:44.334Z",
      "Database": "dev",
      "Duration": 44627545,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 31, column 33\n  Position: 1030",
      "HasResultSet": false,
      "Id": "6a427d82-faa8-4416-a689-fb0d5643affb",
      "RedshiftPid": 1073823853,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:44.426Z",
          "Duration": 44627545,
          "HasResultSet": false,
          "Id": "6a427d82-faa8-4416-a689-fb0d5643affb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:44.848Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:44.429Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 31, column 33\n  Position: 1030",
          "HasResultSet": false,
          "Id": "6a427d82-faa8-4416-a689-fb0d5643affb:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300) as \"abc__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300)) as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END, FLOOR(base.\"airport_count\"*1.0/300)) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,5\n)\nSELECT\n  \"abc__0\" as \"abc\",\n  (ARRAY_AGG(\"total_births__0\") FILTER (WHERE group_set=0 AND \"total_births__0\" IS NOT NULL))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"state__2\" as \"state\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\", \n    \"all_births__2\"::DOUBLE PRECISION as \"all_births\", \n    \"all_name__2\"::DOUBLE PRECISION as \"all_name\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_stuff\"\nFROM __stage0\nWHERE group_set NOT IN (1)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:44.848Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:44.913Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300) as "abc__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300)) as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END, FLOOR(base."airport_count"*1.0/300)) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,5
    )
    SELECT
      "abc__0" as "abc",
      (ARRAY_AGG("total_births__0") FILTER (WHERE group_set=0 AND "total_births__0" IS NOT NULL))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "state__2" as "state", 
        "total_births__2"::DOUBLE PRECISION as "total_births", 
        "all_births__2"::DOUBLE PRECISION as "all_births", 
        "all_name__2"::DOUBLE PRECISION as "all_name"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_stuff"
    FROM __stage0
    WHERE group_set NOT IN (1)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d04bddd7-2226-4539-9261-47776b881e6f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:44.334Z",
      "Database": "dev",
      "Duration": 44627545,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 31, column 33\n  Position: 1030",
      "HasResultSet": false,
      "Id": "6a427d82-faa8-4416-a689-fb0d5643affb",
      "RedshiftPid": 1073823853,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:44.426Z",
          "Duration": 44627545,
          "HasResultSet": false,
          "Id": "6a427d82-faa8-4416-a689-fb0d5643affb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:44.848Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:44.429Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 31, column 33\n  Position: 1030",
          "HasResultSet": false,
          "Id": "6a427d82-faa8-4416-a689-fb0d5643affb:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300) as \"abc__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300)) as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END, FLOOR(base.\"airport_count\"*1.0/300)) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,5\n)\nSELECT\n  \"abc__0\" as \"abc\",\n  (ARRAY_AGG(\"total_births__0\") FILTER (WHERE group_set=0 AND \"total_births__0\" IS NOT NULL))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"state__2\" as \"state\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\", \n    \"all_births__2\"::DOUBLE PRECISION as \"all_births\", \n    \"all_name__2\"::DOUBLE PRECISION as \"all_name\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_stuff\"\nFROM __stage0\nWHERE group_set NOT IN (1)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:44.848Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:44.913Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:869:10)

  ● single value to udf - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "48f00d39-bbe2-4a3b-92e3-e35b6a97a0f3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:45.740Z",
      "Database": "dev",
      "Duration": 43424745,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
      "HasResultSet": false,
      "Id": "b752bee8-0395-4634-9904-31f7820f465f",
      "RedshiftPid": 1073741937,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:45.851Z",
          "Duration": 43424745,
          "HasResultSet": false,
          "Id": "b752bee8-0395-4634-9904-31f7820f465f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:46.285Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:45.854Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
          "HasResultSet": false,
          "Id": "b752bee8-0395-4634-9904-31f7820f465f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"t__1\"::DOUBLE PRECISION as \"t\") as __x)) FILTER (WHERE group_set=1))[1])))) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:46.285Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:46.349Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "t__1"::DOUBLE PRECISION as "t") as __x)) FILTER (WHERE group_set=1))[1])))) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "48f00d39-bbe2-4a3b-92e3-e35b6a97a0f3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:45.740Z",
      "Database": "dev",
      "Duration": 43424745,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
      "HasResultSet": false,
      "Id": "b752bee8-0395-4634-9904-31f7820f465f",
      "RedshiftPid": 1073741937,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:45.851Z",
          "Duration": 43424745,
          "HasResultSet": false,
          "Id": "b752bee8-0395-4634-9904-31f7820f465f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:46.285Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:45.854Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
          "HasResultSet": false,
          "Id": "b752bee8-0395-4634-9904-31f7820f465f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"t__1\"::DOUBLE PRECISION as \"t\") as __x)) FILTER (WHERE group_set=1))[1])))) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:46.285Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:46.349Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:885:10)

  ● Multi value to udf - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6738b7bc-712c-47a4-9366-506ff53dbc95",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:47.132Z",
      "Database": "dev",
      "Duration": 43488804,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
      "HasResultSet": false,
      "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a",
      "RedshiftPid": 1073897586,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:47.221Z",
          "Duration": 43488804,
          "HasResultSet": false,
          "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:47.641Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:47.224Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
          "HasResultSet": false,
          "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    2 as \"two__0\",\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"two__0\" as \"two\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:47.641Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:47.705Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        2 as "two__0",
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "two__0" as "two",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6738b7bc-712c-47a4-9366-506ff53dbc95",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:47.132Z",
      "Database": "dev",
      "Duration": 43488804,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
      "HasResultSet": false,
      "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a",
      "RedshiftPid": 1073897586,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:47.221Z",
          "Duration": 43488804,
          "HasResultSet": false,
          "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:47.641Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:47.224Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
          "HasResultSet": false,
          "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    2 as \"two__0\",\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"two__0\" as \"two\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:47.641Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:47.705Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:904:10)

  ● Multi value to udf group by - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "eefe8283-15c9-412b-95d8-bd4a506f0fa4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:48.492Z",
      "Database": "dev",
      "Duration": 44084587,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
      "HasResultSet": false,
      "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10",
      "RedshiftPid": 1073750137,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:48.566Z",
          "Duration": 44084587,
          "HasResultSet": false,
          "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:48.981Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:48.569Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
          "HasResultSet": false,
          "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 1 asc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:48.981Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:49.045Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 1 asc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "eefe8283-15c9-412b-95d8-bd4a506f0fa4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:48.492Z",
      "Database": "dev",
      "Duration": 44084587,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
      "HasResultSet": false,
      "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10",
      "RedshiftPid": 1073750137,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:48.566Z",
          "Duration": 44084587,
          "HasResultSet": false,
          "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:48.981Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:48.569Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
          "HasResultSet": false,
          "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 1 asc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:48.981Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:49.045Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:920:10)

  ● array unnest - redshift

    TypeError: splitFN is not a function

      1035 |         SELECT
      1036 |           ${q`city`},
    > 1037 |           ${splitFN!(q`city`, ' ')} as ${q`words`}
           |             ^
      1038 |         FROM ${rootDbPath(databaseName)}malloytest.aircraft
      1039 |       """) -> {
      1040 |         where: words.value is not null

      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1037:13)

  ● array unnest x 2 - redshift

    TypeError: splitFN is not a function

      1055 |         SELECT
      1056 |           ${q`city`},
    > 1057 |           ${splitFN!(q`city`, ' ')} as ${q`words`},
           |             ^
      1058 |           ${splitFN!(q`city`, 'A')} as ${q`abreak`}
      1059 |         FROM ${rootDbPath(databaseName)}malloytest.aircraft
      1060 |         WHERE ${q`city`} IS NOT null

      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1057:13)

  ● nest null - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e699307f-4b51-4c2b-af6e-8f187c703c08",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:14.116Z",
      "Database": "dev",
      "Duration": 42839084,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 29, column 34\n  Position: 856",
      "HasResultSet": false,
      "Id": "41d01b63-28ad-4ca4-a115-18c6872c587a",
      "RedshiftPid": 1073799285,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:14.204Z",
          "Duration": 42839084,
          "HasResultSet": false,
          "Id": "41d01b63-28ad-4ca4-a115-18c6872c587a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:14.627Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:14.208Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 29, column 34\n  Position: 856",
          "HasResultSet": false,
          "Id": "41d01b63-28ad-4ca4-a115-18c6872c587a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"faa_region\" as \"faa_region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"airport_count__2\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  WHERE (base.\"faa_region\" IS NULL)\n  AND ((group_set NOT IN (1) OR (group_set IN (1) AND base.\"state\" IS NOT NULL)))\n  AND ((group_set NOT IN (2) OR (group_set IN (2) AND base.\"state\" IS NOT NULL)))\n  GROUP BY 1,2,4,6\n)\nSELECT\n  \"faa_region__0\" as \"faa_region\",\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__2\" as \"state\", \n    \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:1]),'[]'::JSONB) as \"by_state1\"\nFROM __stage0\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:14.627Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:14.691Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● Nested pipelines sort properly - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a796f796-c4b0-4d20-91dc-83ee6bb50a8b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:15.490Z",
      "Database": "dev",
      "Duration": 44220425,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1203",
      "HasResultSet": false,
      "Id": "55952c9e-8592-4091-880f-221452ee35a0",
      "RedshiftPid": 1073913969,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:15.586Z",
          "Duration": 44220425,
          "HasResultSet": false,
          "Id": "55952c9e-8592-4091-880f-221452ee35a0:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:16.012Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:15.590Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1203",
          "HasResultSet": false,
          "Id": "55952c9e-8592-4091-880f-221452ee35a0:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airports__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"aircraft_count\"),0)\n      END as \"aircrafts__2\",\n    CASE WHEN group_set=3 THEN\n      base.\"state\"\n      END as \"state__3\",\n    CASE WHEN group_set=3 THEN\n      COALESCE(SUM(base.\"aircraft_count\"),0)\n      END as \"aircrafts__3\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"popular_name\" ~ 'I'\n  GROUP BY 1,2,3,5,7\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'airports')::double precision),0) as \"airports\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"airports__1\"::DOUBLE PRECISION as \"airports\"\n      ) as __x)  ORDER BY  \"airports__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 ASC NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as \"aircrafts\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"aircrafts__2\"::DOUBLE PRECISION as \"aircrafts\"\n      ) as __x)  ORDER BY  \"aircrafts__2\" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 ASC NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view2\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as \"aircrafts\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__3\" as \"state\", \n      \"aircrafts__3\"::DOUBLE PRECISION as \"aircrafts\"\n      ) as __x)  ORDER BY  \"aircrafts__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 desc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view3\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:16.012Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:16.077Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● number as null- redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "72b84ea4-6f1b-41e9-92b7-e3e0fe8e5786",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:16.869Z",
      "Database": "dev",
      "Duration": 44812843,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "31a8a09f-5dbb-4014-8b0f-96d7fa49fd66",
      "RedshiftPid": 1073979490,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:16.966Z",
          "Duration": 44812843,
          "HasResultSet": false,
          "Id": "31a8a09f-5dbb-4014-8b0f-96d7fa49fd66:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:17.388Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:16.969Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "31a8a09f-5dbb-4014-8b0f-96d7fa49fd66:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:17.388Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:17.454Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● removes surpuflous order_by - joined_query - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c213529e-a1f9-4517-98c5-ca72057fe88f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:24.357Z",
      "Database": "dev",
      "Duration": 53317485,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "b085bb0f-4cb7-4d57-bb18-7e9140cda7a6",
      "RedshiftPid": 1073856632,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:24.442Z",
          "Duration": 53317485,
          "HasResultSet": false,
          "Id": "b085bb0f-4cb7-4d57-bb18-7e9140cda7a6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:24.897Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:24.446Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "b085bb0f-4cb7-4d57-bb18-7e9140cda7a6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"state\" as \"state\",\n     COALESCE(SUM(base.\"airport_count\"),0) as \"airport_count\"\n  FROM \"malloytest\".\"state_facts\" as base\n  GROUP BY 1\n)\nSELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(foo_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(foo_0.\"state\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0.\"state\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(foo_0.\"state\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0.\"state\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"x\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN __stage0 AS foo_0\n  ON base.\"state\"=foo_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:24.897Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:24.963Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● removes surpuflous order_by - joined_query pipeline - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5318c24c-fd91-42c3-b34a-e39683b4f120",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:25.695Z",
      "Database": "dev",
      "Duration": 43041210,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "c73899c2-0b9d-4653-bba3-200261e53fe3",
      "RedshiftPid": 1073741928,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:25.789Z",
          "Duration": 43041210,
          "HasResultSet": false,
          "Id": "c73899c2-0b9d-4653-bba3-200261e53fe3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:26.219Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:25.792Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "c73899c2-0b9d-4653-bba3-200261e53fe3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"state\" as \"state\",\n     COALESCE(SUM(base.\"airport_count\"),0) as \"airport_count\"\n  FROM \"malloytest\".\"state_facts\" as base\n  GROUP BY 1\n)\n, __stage1 AS (\n  SELECT \n     base.\"state\" as \"state\",\n     COALESCE(SUM(base.\"airport_count\"),0) as \"airport_count\"\n  FROM __stage0 as base\n  GROUP BY 1\n)\nSELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(foo_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(foo_0.\"state\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0.\"state\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(foo_0.\"state\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0.\"state\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"x\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN __stage1 AS foo_0\n  ON base.\"state\"=foo_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:26.219Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:26.284Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● quoting and strings › backslash backslash

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "53244df8-e692-4f8c-8591-816e5a445556",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:29.903Z",
      "Database": "dev",
      "Duration": 42389112,
      "Error": "Query #2 failed with Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
      "HasResultSet": false,
      "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f",
      "RedshiftPid": 1073848428,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:30.000Z",
          "Duration": 42389112,
          "HasResultSet": false,
          "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:30.429Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:30.003Z",
          "Duration": -1,
          "Error": "Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
          "HasResultSet": false,
          "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f:2",
          "QueryString": "SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:30.429Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:30.447Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       '\' as "back"
    FROM (SELECT 1 as one) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "53244df8-e692-4f8c-8591-816e5a445556",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:29.903Z",
      "Database": "dev",
      "Duration": 42389112,
      "Error": "Query #2 failed with Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
      "HasResultSet": false,
      "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f",
      "RedshiftPid": 1073848428,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:30.000Z",
          "Duration": 42389112,
          "HasResultSet": false,
          "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:30.429Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:30.003Z",
          "Duration": -1,
          "Error": "Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
          "HasResultSet": false,
          "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f:2",
          "QueryString": "SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:30.429Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:30.447Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1350:10)

  ● quoting and strings › spaces in names

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "730a0b2b-7069-4893-b808-39bd4f8c3d17",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:32.843Z",
      "Database": "dev",
      "Duration": 44908902,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c o u n t__0\") FILTER\", at line 30, column 30\n  Position: 1017",
      "HasResultSet": false,
      "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2",
      "RedshiftPid": 1073881200,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:32.957Z",
          "Duration": 44908902,
          "HasResultSet": false,
          "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:33.404Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:32.961Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c o u n t__0\") FILTER\", at line 30, column 30\n  Position: 1017",
          "HasResultSet": false,
          "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"P O P__0\",\n    j_o_space_0.\"popular_name\" as \"J P O P__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c o u n t__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"R O W__0\",\n    CASE WHEN group_set=0 THEN LAG((base.\"popular_name\"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"l a g__0\",\n    CASE WHEN group_set=1 THEN\n      j_o_space_0.\"state\"\n      END as \"J S__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c o u n t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n   LEFT JOIN \"malloytest\".\"state_facts\" AS j_o_space_0\n    ON j_o_space_0.\"state\"=base.\"state\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"P O P__0\" as \"P O P\",\n  \"J P O P__0\" as \"J P O P\",\n  (ARRAY_AGG(\"c o u n t__0\") FILTER (WHERE group_set=0 AND \"c o u n t__0\" IS NOT NULL))[1] as \"c o u n t\",\n  (ARRAY_AGG(\"R O W__0\") FILTER (WHERE group_set=0 AND \"R O W__0\" IS NOT NULL))[1] as \"R O W\",\n  (ARRAY_AGG(\"l a g__0\") FILTER (WHERE group_set=0 AND \"l a g__0\" IS NOT NULL))[1] as \"l a g\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"J S__1\" as \"J S\", \n    \"c o u n t__1\"::DOUBLE PRECISION as \"c o u n t\"\n    ) as __x)  ORDER BY  \"c o u n t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by state\"\nFROM __stage0\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:33.404Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:33.470Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "P O P__0",
        j_o_space_0."popular_name" as "J P O P__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c o u n t__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "R O W__0",
        CASE WHEN group_set=0 THEN LAG((base."popular_name"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "l a g__0",
        CASE WHEN group_set=1 THEN
          j_o_space_0."state"
          END as "J S__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c o u n t__1"
      FROM "malloytest"."state_facts" as base
       LEFT JOIN "malloytest"."state_facts" AS j_o_space_0
        ON j_o_space_0."state"=base."state"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,7
    )
    SELECT
      "P O P__0" as "P O P",
      "J P O P__0" as "J P O P",
      (ARRAY_AGG("c o u n t__0") FILTER (WHERE group_set=0 AND "c o u n t__0" IS NOT NULL))[1] as "c o u n t",
      (ARRAY_AGG("R O W__0") FILTER (WHERE group_set=0 AND "R O W__0" IS NOT NULL))[1] as "R O W",
      (ARRAY_AGG("l a g__0") FILTER (WHERE group_set=0 AND "l a g__0" IS NOT NULL))[1] as "l a g",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "J S__1" as "J S", 
        "c o u n t__1"::DOUBLE PRECISION as "c o u n t"
        ) as __x)  ORDER BY  "c o u n t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by state"
    FROM __stage0
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "730a0b2b-7069-4893-b808-39bd4f8c3d17",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:32.843Z",
      "Database": "dev",
      "Duration": 44908902,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c o u n t__0\") FILTER\", at line 30, column 30\n  Position: 1017",
      "HasResultSet": false,
      "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2",
      "RedshiftPid": 1073881200,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:32.957Z",
          "Duration": 44908902,
          "HasResultSet": false,
          "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:33.404Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:32.961Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c o u n t__0\") FILTER\", at line 30, column 30\n  Position: 1017",
          "HasResultSet": false,
          "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"P O P__0\",\n    j_o_space_0.\"popular_name\" as \"J P O P__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c o u n t__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"R O W__0\",\n    CASE WHEN group_set=0 THEN LAG((base.\"popular_name\"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"l a g__0\",\n    CASE WHEN group_set=1 THEN\n      j_o_space_0.\"state\"\n      END as \"J S__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c o u n t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n   LEFT JOIN \"malloytest\".\"state_facts\" AS j_o_space_0\n    ON j_o_space_0.\"state\"=base.\"state\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"P O P__0\" as \"P O P\",\n  \"J P O P__0\" as \"J P O P\",\n  (ARRAY_AGG(\"c o u n t__0\") FILTER (WHERE group_set=0 AND \"c o u n t__0\" IS NOT NULL))[1] as \"c o u n t\",\n  (ARRAY_AGG(\"R O W__0\") FILTER (WHERE group_set=0 AND \"R O W__0\" IS NOT NULL))[1] as \"R O W\",\n  (ARRAY_AGG(\"l a g__0\") FILTER (WHERE group_set=0 AND \"l a g__0\" IS NOT NULL))[1] as \"l a g\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"J S__1\" as \"J S\", \n    \"c o u n t__1\"::DOUBLE PRECISION as \"c o u n t\"\n    ) as __x)  ORDER BY  \"c o u n t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by state\"\nFROM __stage0\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:33.404Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:33.470Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1381:10)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         1 as "expect",
         FLOOR((EXTRACT(EPOCH FROM DATE '2000-01-02')-EXTRACT(EPOCH FROM DATE '2000-01-01'))/86400.0) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(@2000-01-01 to @2000-01-02) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         -1 as "expect",
         FLOOR((EXTRACT(EPOCH FROM DATE '2000-01-01')-EXTRACT(EPOCH FROM DATE '2000-01-02'))/86400.0) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(@2000-01-02 to @2000-01-01) == -1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((1)=(FLOOR(EXTRACT(EPOCH FROM ((LOCALTIMESTAMP)+make_interval(secs=>1)))-EXTRACT(EPOCH FROM LOCALTIMESTAMP)))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: seconds(now to now + 1 second) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR(EXTRACT(EPOCH FROM ((LOCALTIMESTAMP)+make_interval(secs=>1)))-EXTRACT(EPOCH FROM LOCALTIMESTAMP))) AS varchar))) END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((0)=(FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:24:07')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:08'))/60.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: minutes(@2022-10-03 10:23:08 to @2022-10-03 10:24:07) == 0',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:24:07')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:08'))/60.0)) AS varchar))) END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((0)=(FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 11:22:00')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:00'))/3600.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: hours(@2022-10-03 10:23:00 to @2022-10-03 11:22:00) == 0',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 11:22:00')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:00'))/3600.0)) AS varchar))) END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((1)=(FLOOR((EXTRACT(EPOCH FROM ((DATE_TRUNC('day', LOCALTIMESTAMP))+make_interval(days=>1)))-EXTRACT(EPOCH FROM DATE_TRUNC('day', LOCALTIMESTAMP)))/86400.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: days(now.day to now.day + 1 day) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM ((DATE_TRUNC('day', LOCALTIMESTAMP))+make_interval(days=>1)))-EXTRACT(EPOCH FROM DATE_TRUNC('day', LOCALTIMESTAMP)))/86400.0)) AS varchar))) END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2021-02-24')) as "expect",
         DATE_TRUNC('day', (DATE_TRUNC('day', base."t_date"))) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=DATE_TRUNC('day', (base."got"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.day == @2021-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('day', (base."got")) AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2021-02-21')) as "expect",
         (DATE_TRUNC('week', ((DATE_TRUNC('week', base."t_date" + INTERVAL '1' DAY) - INTERVAL '1' DAY)) + INTERVAL '1' DAY) - INTERVAL '1' DAY) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=(DATE_TRUNC('week', (base."got") + INTERVAL '1' DAY) - INTERVAL '1' DAY)) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.week == @2021-02-21',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((DATE_TRUNC('week', (base."got") + INTERVAL '1' DAY) - INTERVAL '1' DAY) AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2021-02-01')) as "expect",
         DATE_TRUNC('month', (DATE_TRUNC('month', base."t_date"))) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=DATE_TRUNC('month', (base."got"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.month == @2021-02-01',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('month', (base."got")) AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2021-01-01')) as "expect",
         DATE_TRUNC('quarter', (DATE_TRUNC('quarter', base."t_date"))) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=DATE_TRUNC('quarter', (base."got"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.quarter == @2021-01-01',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('quarter', (base."got")) AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('year', (DATE '2021-01-01')) as "expect",
         DATE_TRUNC('year', (DATE_TRUNC('year', base."t_date"))) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('year', (base."expect"))=DATE_TRUNC('year', (base."got"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.year == @2021',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('year', (base."got")) AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         24 as "expect",
         EXTRACT(day FROM base."t_date") as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(t_date) == 24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         4 as "expect",
         mod(EXTRACT(dow FROM base."t_date")+1,7) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day_of_week(t_date) == 4',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         55 as "expect",
         EXTRACT(doy FROM base."t_date") as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day_of_year(t_date) == 55',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         8 as "expect",
         EXTRACT(week FROM base."t_date") as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: week(t_date) == 8',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         2 as "expect",
         EXTRACT(month FROM base."t_date") as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: month(t_date) == 2',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         1 as "expect",
         EXTRACT(quarter FROM base."t_date") as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: quarter(t_date) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         2021 as "expect",
         EXTRACT(year FROM base."t_date") as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: year(t_date) == 2021',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2021-02-10')) as "expect",
         (base."t_date")-make_interval(days=>2*7) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date - 2 weeks == @2021-02-10',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2021-11-24')) as "expect",
         (base."t_date")+make_interval(months=>9) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 9 months == @2021-11-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2021-08-24')) as "expect",
         (base."t_date")+make_interval(months=>2*3) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 2 quarters == @2021-08-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2031-02-24')) as "expect",
         (base."t_date")+make_interval(years=>10) as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 10 years == @2031-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((base."t_date">=DATE '2021-02-25') and (base."t_date"<((DATE '2021-02-25')+make_interval(days=>1)))) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-25 for 1 day to be false')) ELSE '=' END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((base."t_date">=DATE '2021-02-24') and (base."t_date"<((DATE '2021-02-24')+make_interval(days=>1)))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-24 for 1 day to be true')) END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((base."t_date">=DATE '2021-02-23') and (base."t_date"<((DATE '2021-02-23')+make_interval(days=>1)))) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-23 for 1 day to be false')) ELSE '=' END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((base."t_date">=DATE '2021-02-25') and (base."t_date"<DATE '2021-03-01')) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-25 to @2021-03-01 to be false')) ELSE '=' END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((base."t_date">=DATE '2021-02-24') and (base."t_date"<DATE '2021-03-01')) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-24 to @2021-03-01 to be true')) END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((base."t_date">=DATE '2021-02-01') and (base."t_date"<DATE '2021-02-24')) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-01 to @2021-02-24 to be false')) ELSE '=' END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         DATE_TRUNC('day', (DATE '2021-02-24')) as "expect",
         base."t_date" as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (DATE_TRUNC('day', (base."expect"))=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date == @2021-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         2000 as "expect",
         EXTRACT(year FROM TIMESTAMP '2000-01-01 00:00:00') as "got"
      FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base
    )
    SELECT 
       CASE WHEN (base."expect"=base."got") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: year(@2000-01-01 00:00) == 2000',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base."got" AS varchar))) END as "calc"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN ((base."t_date">=DATE '2021-02-01') and (base."t_date"<DATE '2021-03-01')) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02 to be true')) END as "calc"
    FROM (SELECT DATE '2021-02-24' as "t_date", TIMESTAMP '2021-02-24 03:05:06' as "t_timestamp" ) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMP '2021-02-24 03:05:06' as "default_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "la_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "la_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "default_time__0" as "default_time",
      (ARRAY_AGG("la_query__0") FILTER (WHERE group_set=0 AND "la_query__0" IS NOT NULL))[1] as "la_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "default_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMP '2021-02-24 03:05:06' as "undef_time"
          ) as __x)  ORDER BY  TIMESTAMP '2021-02-24 03:05:06' desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "undef_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "default_time__0" as "default_time",
      (ARRAY_AGG("undef_query__0") FILTER (WHERE group_set=0 AND "undef_query__0" IS NOT NULL))[1] as "undef_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMPTZ '2021-02-24 03:05:06 America/New_York'::TIMESTAMP as "ny_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "la_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "la_query__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP as "mex_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "mex_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "ny_time__0" as "ny_time",
      (ARRAY_AGG("la_query__0") FILTER (WHERE group_set=0 AND "la_query__0" IS NOT NULL))[1] as "la_query",
      (ARRAY_AGG("mex_query__0") FILTER (WHERE group_set=0 AND "mex_query__0" IS NOT NULL))[1] as "mex_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/time.spec.ts (80.176 s)
  redshift date and time
    ✕ date in sql_block no explore (1499 ms)
    ✕ timestamp in sql_block no explore (25 ms)
    ✕ valid timestamp without seconds (1360 ms)
    ✕ dependant join dialect fragments (63 ms)
    interval measurement
      ✕ forwards is positive (3232 ms)
      ✕ reverse is negative (1410 ms)
      ✕ seconds (1459 ms)
      ✕ minutes (1486 ms)
      ✕ hours (1381 ms)
      ✕ days (1418 ms)
      ✕ timeDiff passed to a function preserves rhs (2926 ms)
    timestamp truncation
      ✕ trunc second (32 ms)
      ✕ trunc minute (16 ms)
      ✕ trunc hour (14 ms)
      ✕ trunc day (12 ms)
      ✕ trunc week (13 ms)
      ✕ trunc month (13 ms)
      ✕ trunc quarter (11 ms)
      ✕ trunc year (12 ms)
    timestamp extraction
      ✕ extract second (10 ms)
      ✕ extract minute (11 ms)
      ✕ extract hour (11 ms)
      ✕ extract day (9 ms)
      ✕ extract day_of_week (10 ms)
      ✕ first week day is one  (10 ms)
      ✕ extract day_of_year (10 ms)
      ✕ extract week (11 ms)
      ✕ extract month (9 ms)
      ✕ extract quarter (9 ms)
      ✕ extract year (10 ms)
    date truncation
      ✕ date trunc day (1414 ms)
      ✕ date trunc week (1341 ms)
      ✕ date trunc month (1397 ms)
      ✕ date trunc quarter (1497 ms)
      ✕ date trunc year (1372 ms)
    date extraction
      ✕ date extract day (1424 ms)
      ✕ date extract day_of_week (1408 ms)
      ✕ date extract day_of_year (1346 ms)
      ✕ date extract week (1382 ms)
      ✕ date extract month (1394 ms)
      ✕ date extract quarter (1351 ms)
      ✕ date extract year (1484 ms)
    delta computations
      ✕ timestamp delta second (21 ms)
      ✕ timestamp delta negative second (17 ms)
      ✕ timestamp delta minute (20 ms)
      ✕ timestamp delta hours (19 ms)
      ✕ timestamp delta week (19 ms)
      ✕ timestamp delta month (17 ms)
      ✕ timestamp delta quarter (17 ms)
      ✕ timestamp delta year (19 ms)
      ✕ date delta week (1399 ms)
      ✕ date delta month (1354 ms)
      ✕ date delta quarter (1442 ms)
      ✕ date delta year (1348 ms)
    for range edge tests
      date
        ✕ before for-range is outside (1351 ms)
        ✕ first for-range is inside (1345 ms)
        ✕ last for-range is outside (1318 ms)
      timestamp
        ✕ before for-range is outside (22 ms)
        ✕ first for-range is inside (13 ms)
        ✕ last for-range is outside (12 ms)
    to range edge tests
      date
        ✕ before to is outside (1359 ms)
        ✕ first to is inside (1457 ms)
        ✕ last to is outside (1458 ms)
      timestamp
        ✕ before to is outside (20 ms)
        ✕ first to is inside (12 ms)
        ✕ last to is outside (12 ms)
    granular time range checks
      ✕ minute implied truncated range (23 ms)
      ✕ day implied truncated range (15 ms)
      ✕ year implied truncated range (12 ms)
      ✕ timestamp in literal minute (12 ms)
      ✕ timestamp in literal day (9 ms)
      ✕ date in literal month (1321 ms)
      ✕ timestamp in literal month (25 ms)
      ✕ timestamp in literal year (19 ms)
    timezone set correctly
      ✓ timezone set in source used by query (2889 ms)
      ✕ timezone set in view inside source (1513 ms)
      ✕ timezone set in query using source (1374 ms)
      ✕ multiple timezones (1481 ms)
  redshift: tz literals
    ✓ redshift - default timezone is UTC (1419 ms)
    ✓ literal with zone name (1388 ms)
  redshift: query tz
    ✓ literal timestamps (1429 ms)
    ✓ extract (1574 ms)
    ✓ truncate day (2799 ms)
    ✓ cast timestamp to date (1441 ms)
    ✓ cast date to timestamp (2989 ms)

  ● redshift date and time › interval measurement › forwards is positive

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e1fcff05-f8dc-4c02-b691-cfeb66092b3a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:47.103Z",
      "Database": "dev",
      "Duration": 45200174,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "884cbed4-214a-4809-8da3-c13d6a7e43e5",
      "RedshiftPid": 1073930364,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:47.218Z",
          "Duration": 45200174,
          "HasResultSet": false,
          "Id": "884cbed4-214a-4809-8da3-c13d6a7e43e5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:47.664Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:47.222Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "884cbed4-214a-4809-8da3-c13d6a7e43e5:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     1 as \"expect\",\n     FLOOR((EXTRACT(EPOCH FROM DATE '2000-01-02')-EXTRACT(EPOCH FROM DATE '2000-01-01'))/86400.0) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(@2000-01-01 to @2000-01-02) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:47.664Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:47.730Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › reverse is negative

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5d0cec52-df29-4423-a3b1-ee26f2314e23",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:48.550Z",
      "Database": "dev",
      "Duration": 53562141,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "50ca7529-a545-49f5-a2fc-0d2f93ae9843",
      "RedshiftPid": 1073774691,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:48.643Z",
          "Duration": 53562141,
          "HasResultSet": false,
          "Id": "50ca7529-a545-49f5-a2fc-0d2f93ae9843:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:49.136Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:48.646Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "50ca7529-a545-49f5-a2fc-0d2f93ae9843:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     -1 as \"expect\",\n     FLOOR((EXTRACT(EPOCH FROM DATE '2000-01-01')-EXTRACT(EPOCH FROM DATE '2000-01-02'))/86400.0) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(@2000-01-02 to @2000-01-01) == -1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:49.136Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:49.201Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › seconds

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d5eea55f-9b7b-4f56-811f-474b359119a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:50.037Z",
      "Database": "dev",
      "Duration": 42752038,
      "Error": "Query #2 failed with ERROR: column \"secs\" does not exist in base",
      "HasResultSet": false,
      "Id": "cada801a-8cc0-44d8-a975-06a802bc21ab",
      "RedshiftPid": 1073905789,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:50.122Z",
          "Duration": 42752038,
          "HasResultSet": false,
          "Id": "cada801a-8cc0-44d8-a975-06a802bc21ab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:50.542Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:50.126Z",
          "Duration": -1,
          "Error": "ERROR: column \"secs\" does not exist in base",
          "HasResultSet": false,
          "Id": "cada801a-8cc0-44d8-a975-06a802bc21ab:2",
          "QueryString": "SELECT \n   CASE WHEN ((1)=(FLOOR(EXTRACT(EPOCH FROM ((LOCALTIMESTAMP)+make_interval(secs=>1)))-EXTRACT(EPOCH FROM LOCALTIMESTAMP)))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: seconds(now to now + 1 second) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR(EXTRACT(EPOCH FROM ((LOCALTIMESTAMP)+make_interval(secs=>1)))-EXTRACT(EPOCH FROM LOCALTIMESTAMP))) AS varchar))) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:50.542Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:50.607Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › minutes

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9fccf4be-14b1-4b82-b681-e2e2bbe1775b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:51.481Z",
      "Database": "dev",
      "Duration": 53386446,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "15c5d5ef-7025-4283-a98f-a5291babe29d",
      "RedshiftPid": 1073766503,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:51.591Z",
          "Duration": 53386446,
          "HasResultSet": false,
          "Id": "15c5d5ef-7025-4283-a98f-a5291babe29d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:52.050Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:51.595Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "15c5d5ef-7025-4283-a98f-a5291babe29d:2",
          "QueryString": "SELECT \n   CASE WHEN ((0)=(FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:24:07')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:08'))/60.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: minutes(@2022-10-03 10:23:08 to @2022-10-03 10:24:07) == 0',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:24:07')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:08'))/60.0)) AS varchar))) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:52.050Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:52.115Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › hours

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5591977c-32cc-4e2f-b591-84c84a319647",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:52.874Z",
      "Database": "dev",
      "Duration": 43899921,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "3db46605-a3b1-4b57-9df6-7e172ea87eb4",
      "RedshiftPid": 1073832058,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:52.972Z",
          "Duration": 43899921,
          "HasResultSet": false,
          "Id": "3db46605-a3b1-4b57-9df6-7e172ea87eb4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:53.406Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:52.975Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "3db46605-a3b1-4b57-9df6-7e172ea87eb4:2",
          "QueryString": "SELECT \n   CASE WHEN ((0)=(FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 11:22:00')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:00'))/3600.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: hours(@2022-10-03 10:23:00 to @2022-10-03 11:22:00) == 0',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 11:22:00')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:00'))/3600.0)) AS varchar))) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:53.406Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:53.471Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › days

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "31ba58c7-5bf4-4b14-b1af-b38f126a3e6b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:54.296Z",
      "Database": "dev",
      "Duration": 44917223,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "2aa01db3-69b2-4b77-934a-abedc900f5ab",
      "RedshiftPid": 1073758329,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:54.401Z",
          "Duration": 44917223,
          "HasResultSet": false,
          "Id": "2aa01db3-69b2-4b77-934a-abedc900f5ab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:54.822Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:54.405Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "2aa01db3-69b2-4b77-934a-abedc900f5ab:2",
          "QueryString": "SELECT \n   CASE WHEN ((1)=(FLOOR((EXTRACT(EPOCH FROM ((DATE_TRUNC('day', LOCALTIMESTAMP))+make_interval(days=>1)))-EXTRACT(EPOCH FROM DATE_TRUNC('day', LOCALTIMESTAMP)))/86400.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: days(now.day to now.day + 1 day) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM ((DATE_TRUNC('day', LOCALTIMESTAMP))+make_interval(days=>1)))-EXTRACT(EPOCH FROM DATE_TRUNC('day', LOCALTIMESTAMP)))/86400.0)) AS varchar))) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:54.822Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:54.888Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › timeDiff passed to a function preserves rhs

    SQL Generated:
      SELECT 
         FLOOR(FLOOR((EXTRACT(EPOCH FROM DATE '2002-01-01')-EXTRACT(EPOCH FROM DATE '2001-01-01'))/86400.0)) as "yd"
      FROM (SELECT 1) as base
      
    Expected {yd: 365} Got: Non Numeric '"365"'

      100 |         run: ${dbName}.sql("SELECT 1")
      101 |         -> { select: yd is floor(days(@2001 to @2002)) }
    > 102 |       `).malloyResultMatches(runtime, {yd: 365});
          |          ^
      103 |       }
      104 |     );
      105 |

      at Object.<anonymous> (test/src/databases/all/time.spec.ts:102:10)

  ● redshift date and time › timestamp truncation › trunc second

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.second
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.second == @2021-02-24 03:05:06', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.second == @2021-02-24 03:05:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc minute

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.minute
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.minute == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.minute == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                                                                                                ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc hour

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.hour
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.hour == @2021-02-24 03:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.hour == @2021-02-24 03:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc day

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.day
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.day == @2021-02-24 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.day == @2021-02-24 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                             ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc week

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.week
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.week == @2021-02-21 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.week == @2021-02-21 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc month

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.month
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.month == @2021-02-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.month == @2021-02-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                               ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc quarter

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.quarter
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.quarter == @2021-01-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.quarter == @2021-01-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                                 ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.year
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.year == @2021-01-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.year == @2021-01-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract second

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: second() requires time type, not 'sql native'
      |             select: got is second(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: second(t_timestamp) == 6', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: second(t_timestamp) == 6', CHR(10), '    Received: ', got::string)
      |                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract minute

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: minute() requires time type, not 'sql native'
      |             select: got is minute(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: minute(t_timestamp) == 5', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: minute(t_timestamp) == 5', CHR(10), '    Received: ', got::string)
      |                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract hour

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: hour() requires time type, not 'sql native'
      |             select: got is hour(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: hour(t_timestamp) == 3', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: hour(t_timestamp) == 3', CHR(10), '    Received: ', got::string)
      |                                                                                            ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract day

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: day() requires time type, not 'sql native'
      |             select: got is day(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day(t_timestamp) == 24', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day(t_timestamp) == 24', CHR(10), '    Received: ', got::string)
      |                                                                                            ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract day_of_week

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: day_of_week() requires time type, not 'sql native'
      |             select: got is day_of_week(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_week(t_timestamp) == 4', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_week(t_timestamp) == 4', CHR(10), '    Received: ', got::string)
      |                                                                                                   ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › first week day is one 

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is day_of_week(t_timestamp.week)
      |                                        ^
    line 7: day_of_week() requires time type, not 'sql native'
      |             select: got is day_of_week(t_timestamp.week)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_week(t_timestamp.week) == 1', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_week(t_timestamp.week) == 1', CHR(10), '    Received: ', got::string)
      |                                                                                                        ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract day_of_year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: day_of_year() requires time type, not 'sql native'
      |             select: got is day_of_year(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_year(t_timestamp) == 55', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_year(t_timestamp) == 55', CHR(10), '    Received: ', got::string)
      |                                                                                                    ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract week

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: week() requires time type, not 'sql native'
      |             select: got is week(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: week(t_timestamp) == 8', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: week(t_timestamp) == 8', CHR(10), '    Received: ', got::string)
      |                                                                                            ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract month

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: month() requires time type, not 'sql native'
      |             select: got is month(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: month(t_timestamp) == 2', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: month(t_timestamp) == 2', CHR(10), '    Received: ', got::string)
      |                                                                                             ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract quarter

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: quarter() requires time type, not 'sql native'
      |             select: got is quarter(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: quarter(t_timestamp) == 1', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: quarter(t_timestamp) == 1', CHR(10), '    Received: ', got::string)
      |                                                                                               ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: year() requires time type, not 'sql native'
      |             select: got is year(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: year(t_timestamp) == 2021', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: year(t_timestamp) == 2021', CHR(10), '    Received: ', got::string)
      |                                                                                               ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc day

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5cf705d5-fe83-43e4-8dda-887831c72347",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:58.890Z",
      "Database": "dev",
      "Duration": 53429163,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "eef23620-6b55-406b-86f1-136e70ae1a83",
      "RedshiftPid": 1073823847,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:58.981Z",
          "Duration": 53429163,
          "HasResultSet": false,
          "Id": "eef23620-6b55-406b-86f1-136e70ae1a83:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:59.433Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:58.985Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "eef23620-6b55-406b-86f1-136e70ae1a83:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-24')) as \"expect\",\n     DATE_TRUNC('day', (DATE_TRUNC('day', base.\"t_date\"))) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=DATE_TRUNC('day', (base.\"got\"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.day == @2021-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('day', (base.\"got\")) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:59.433Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:59.508Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc week

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "88fcb1c9-faa3-4f28-a64a-5b16ab831830",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:00.262Z",
      "Database": "dev",
      "Duration": 44983480,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f33affc1-9a46-420d-a287-0c22c16b7a97",
      "RedshiftPid": 1073954936,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:00.346Z",
          "Duration": 44983480,
          "HasResultSet": false,
          "Id": "f33affc1-9a46-420d-a287-0c22c16b7a97:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:00.756Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:00.350Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f33affc1-9a46-420d-a287-0c22c16b7a97:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-21')) as \"expect\",\n     (DATE_TRUNC('week', ((DATE_TRUNC('week', base.\"t_date\" + INTERVAL '1' DAY) - INTERVAL '1' DAY)) + INTERVAL '1' DAY) - INTERVAL '1' DAY) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=(DATE_TRUNC('week', (base.\"got\") + INTERVAL '1' DAY) - INTERVAL '1' DAY)) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.week == @2021-02-21',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((DATE_TRUNC('week', (base.\"got\") + INTERVAL '1' DAY) - INTERVAL '1' DAY) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:00.756Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:00.822Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc month

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d6f6e185-1628-4636-924a-168a993159b4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:01.641Z",
      "Database": "dev",
      "Duration": 51787586,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "989f85e0-890c-47e0-a406-9ef93200c79f",
      "RedshiftPid": 1073823842,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:01.731Z",
          "Duration": 51787586,
          "HasResultSet": false,
          "Id": "989f85e0-890c-47e0-a406-9ef93200c79f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:02.164Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:01.736Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "989f85e0-890c-47e0-a406-9ef93200c79f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-01')) as \"expect\",\n     DATE_TRUNC('month', (DATE_TRUNC('month', base.\"t_date\"))) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=DATE_TRUNC('month', (base.\"got\"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.month == @2021-02-01',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('month', (base.\"got\")) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:02.164Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:02.230Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc quarter

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6a47950e-e69b-4e11-ae26-69526efa1e06",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:03.090Z",
      "Database": "dev",
      "Duration": 44948342,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "d4a11d91-b6f5-4809-9a89-01a56500e06b",
      "RedshiftPid": 1073799265,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:03.212Z",
          "Duration": 44948342,
          "HasResultSet": false,
          "Id": "d4a11d91-b6f5-4809-9a89-01a56500e06b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:03.657Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:03.216Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "d4a11d91-b6f5-4809-9a89-01a56500e06b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-01-01')) as \"expect\",\n     DATE_TRUNC('quarter', (DATE_TRUNC('quarter', base.\"t_date\"))) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=DATE_TRUNC('quarter', (base.\"got\"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.quarter == @2021-01-01',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('quarter', (base.\"got\")) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:03.657Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:03.723Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc year

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1e368ddb-4a6f-4526-b6d3-30af13542428",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:04.497Z",
      "Database": "dev",
      "Duration": 45043977,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "d5b01eab-469d-4a53-a867-4d47db27df5f",
      "RedshiftPid": 1073774715,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:04.599Z",
          "Duration": 45043977,
          "HasResultSet": false,
          "Id": "d5b01eab-469d-4a53-a867-4d47db27df5f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:05.010Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:04.602Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "d5b01eab-469d-4a53-a867-4d47db27df5f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('year', (DATE '2021-01-01')) as \"expect\",\n     DATE_TRUNC('year', (DATE_TRUNC('year', base.\"t_date\"))) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('year', (base.\"expect\"))=DATE_TRUNC('year', (base.\"got\"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.year == @2021',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('year', (base.\"got\")) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:05.010Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:05.075Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract day

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1e593782-e66f-4db8-b4d8-42129c5c3d88",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:05.918Z",
      "Database": "dev",
      "Duration": 42507012,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f99c5ab3-9cf7-4edb-b56c-6376afb02be3",
      "RedshiftPid": 1073913973,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:06.014Z",
          "Duration": 42507012,
          "HasResultSet": false,
          "Id": "f99c5ab3-9cf7-4edb-b56c-6376afb02be3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:06.477Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:06.017Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f99c5ab3-9cf7-4edb-b56c-6376afb02be3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     24 as \"expect\",\n     EXTRACT(day FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(t_date) == 24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:06.477Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:06.541Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract day_of_week

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "32fc92e6-99f8-41ec-8f12-4e8be13af0c2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:07.328Z",
      "Database": "dev",
      "Duration": 44685894,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "9db99bbb-e13f-4a95-b3d7-392409498576",
      "RedshiftPid": 1073979502,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:07.429Z",
          "Duration": 44685894,
          "HasResultSet": false,
          "Id": "9db99bbb-e13f-4a95-b3d7-392409498576:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:07.866Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:07.433Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "9db99bbb-e13f-4a95-b3d7-392409498576:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     4 as \"expect\",\n     mod(EXTRACT(dow FROM base.\"t_date\")+1,7) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day_of_week(t_date) == 4',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:07.866Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:07.932Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract day_of_year

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d21eab4b-353a-40d1-810c-16fd84e471b0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:08.701Z",
      "Database": "dev",
      "Duration": 43514312,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "c05bfbab-2973-4bbb-9e95-f5ca85daa19a",
      "RedshiftPid": 1073905768,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:08.791Z",
          "Duration": 43514312,
          "HasResultSet": false,
          "Id": "c05bfbab-2973-4bbb-9e95-f5ca85daa19a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:09.214Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:08.795Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "c05bfbab-2973-4bbb-9e95-f5ca85daa19a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     55 as \"expect\",\n     EXTRACT(doy FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day_of_year(t_date) == 55',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:09.214Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:09.278Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract week

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ca0f13e3-3387-4e87-9b2e-91916185e3e9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:10.084Z",
      "Database": "dev",
      "Duration": 44617046,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "74f6061d-d554-4654-b360-189d7268589a",
      "RedshiftPid": 1073954943,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:10.181Z",
          "Duration": 44617046,
          "HasResultSet": false,
          "Id": "74f6061d-d554-4654-b360-189d7268589a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:10.606Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:10.184Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "74f6061d-d554-4654-b360-189d7268589a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     8 as \"expect\",\n     EXTRACT(week FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: week(t_date) == 8',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:10.606Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:10.671Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract month

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f14ae8ba-3b87-48a8-a94a-8c8b0c2b999f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:11.464Z",
      "Database": "dev",
      "Duration": 63476324,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "cfc8a7ae-a706-4977-83c4-b42da0b0838b",
      "RedshiftPid": 1073913975,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:11.561Z",
          "Duration": 63476324,
          "HasResultSet": false,
          "Id": "cfc8a7ae-a706-4977-83c4-b42da0b0838b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:12.008Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:11.565Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "cfc8a7ae-a706-4977-83c4-b42da0b0838b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     2 as \"expect\",\n     EXTRACT(month FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: month(t_date) == 2',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:12.008Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:12.073Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract quarter

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5dd8450e-538d-4fb2-b946-d49e57acb7fa",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:12.817Z",
      "Database": "dev",
      "Duration": 43710571,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "ba929998-b7ae-4394-9310-cd014b8f1921",
      "RedshiftPid": 1073807460,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:12.919Z",
          "Duration": 43710571,
          "HasResultSet": false,
          "Id": "ba929998-b7ae-4394-9310-cd014b8f1921:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:13.355Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:12.922Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "ba929998-b7ae-4394-9310-cd014b8f1921:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     1 as \"expect\",\n     EXTRACT(quarter FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: quarter(t_date) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:13.355Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:13.420Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract year

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "04bfc27b-2a5b-496d-a5f2-ad1c837521a8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:14.259Z",
      "Database": "dev",
      "Duration": 44277225,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "ba2b52f4-6e17-4b72-b1d3-257a452fb0af",
      "RedshiftPid": 1073766499,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:14.386Z",
          "Duration": 44277225,
          "HasResultSet": false,
          "Id": "ba2b52f4-6e17-4b72-b1d3-257a452fb0af:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:14.840Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:14.389Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "ba2b52f4-6e17-4b72-b1d3-257a452fb0af:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     2021 as \"expect\",\n     EXTRACT(year FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: year(t_date) == 2021',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:14.840Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:14.905Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta second

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 seconds
      |                                          ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 seconds
      |                            ^
    line 7: Cannot define 'got', unexpected type: duration
      |             select: got is t_timestamp + 10 seconds
      |                     ^
    line 10: 'got' is not defined
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 seconds == @2021-02-24 03:05:16', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 seconds == @2021-02-24 03:05:16', CHR(10), '    Received: ', got::string)
      |                                                                                                                      ^
    line 11: 'got' is not defined
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 seconds == @2021-02-24 03:05:16', CHR(10), '    Received: ', got::string)
      |                                                                                                                                                 ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta negative second

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp - 6 seconds
      |                                          ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp - 6 seconds
      |                            ^
    line 7: Cannot define 'got', unexpected type: duration
      |             select: got is t_timestamp - 6 seconds
      |                     ^
    line 10: 'got' is not defined
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp - 6 seconds == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp - 6 seconds == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                                                                                                     ^
    line 11: 'got' is not defined
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp - 6 seconds == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                                                                                                                                ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta minute

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 minutes
      |                                          ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 minutes
      |                            ^
    line 7: Cannot define 'got', unexpected type: duration
      |             select: got is t_timestamp + 10 minutes
      |                     ^
    line 10: 'got' is not defined
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 minutes == @2021-02-24 03:15:06', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 minutes == @2021-02-24 03:15:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                      ^
    line 11: 'got' is not defined
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 minutes == @2021-02-24 03:15:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                                                 ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta hours

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 hours
      |                                          ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 hours
      |                            ^
    line 7: Cannot define 'got', unexpected type: duration
      |             select: got is t_timestamp + 10 hours
      |                     ^
    line 10: 'got' is not defined
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 hours == @2021-02-24 13:05:06', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 hours == @2021-02-24 13:05:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                    ^
    line 11: 'got' is not defined
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 hours == @2021-02-24 13:05:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                                               ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta week

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp - 2 weeks)::date
      |                                           ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp - 2 weeks)::date
      |                             ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp - 2 weeks)::date == @2021-02-10', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp - 2 weeks)::date == @2021-02-10', CHR(10), '    Received: ', got::string)
      |                                                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta month

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 9 months)::date
      |                                           ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 9 months)::date
      |                             ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 9 months)::date == @2021-11-24', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 9 months)::date == @2021-11-24', CHR(10), '    Received: ', got::string)
      |                                                                                                                   ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta quarter

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 2 quarters)::date
      |                                           ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 2 quarters)::date
      |                             ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 2 quarters)::date == @2021-08-24', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 2 quarters)::date == @2021-08-24', CHR(10), '    Received: ', got::string)
      |                                                                                                                     ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 10 years)::date
      |                                           ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 10 years)::date
      |                             ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 10 years)::date == @2031-02-24', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 10 years)::date == @2031-02-24', CHR(10), '    Received: ', got::string)
      |                                                                                                                   ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › date delta week

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0c1ef65c-3aba-4375-a3eb-194054cff78c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:15.849Z",
      "Database": "dev",
      "Duration": 52992058,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "ad6fef00-0496-438e-bc9a-b2ae735e0ca9",
      "RedshiftPid": 1073995884,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:15.954Z",
          "Duration": 52992058,
          "HasResultSet": false,
          "Id": "ad6fef00-0496-438e-bc9a-b2ae735e0ca9:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:16.388Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:15.958Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "ad6fef00-0496-438e-bc9a-b2ae735e0ca9:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-10')) as \"expect\",\n     (base.\"t_date\")-make_interval(days=>2*7) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date - 2 weeks == @2021-02-10',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:16.388Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:16.451Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › date delta month

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7b64d9a0-b7a0-4dbe-9db1-d9de9ae6ee93",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:17.225Z",
      "Database": "dev",
      "Duration": 45534317,
      "Error": "Query #2 failed with ERROR: column \"months\" does not exist in base",
      "HasResultSet": false,
      "Id": "b1267ce7-fd87-484c-a62d-241c0604ebab",
      "RedshiftPid": 1073987708,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:17.315Z",
          "Duration": 45534317,
          "HasResultSet": false,
          "Id": "b1267ce7-fd87-484c-a62d-241c0604ebab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:17.741Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:17.318Z",
          "Duration": -1,
          "Error": "ERROR: column \"months\" does not exist in base",
          "HasResultSet": false,
          "Id": "b1267ce7-fd87-484c-a62d-241c0604ebab:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-11-24')) as \"expect\",\n     (base.\"t_date\")+make_interval(months=>9) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 9 months == @2021-11-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:17.741Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:17.804Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › date delta quarter

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "073763ca-06a0-4e0f-bd65-addfe48e763c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:18.611Z",
      "Database": "dev",
      "Duration": 55793721,
      "Error": "Query #2 failed with ERROR: column \"months\" does not exist in base",
      "HasResultSet": false,
      "Id": "efd219a4-8c56-4a1d-8812-c469f08f0e43",
      "RedshiftPid": 1073832048,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:18.715Z",
          "Duration": 55793721,
          "HasResultSet": false,
          "Id": "efd219a4-8c56-4a1d-8812-c469f08f0e43:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:19.187Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:18.718Z",
          "Duration": -1,
          "Error": "ERROR: column \"months\" does not exist in base",
          "HasResultSet": false,
          "Id": "efd219a4-8c56-4a1d-8812-c469f08f0e43:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-08-24')) as \"expect\",\n     (base.\"t_date\")+make_interval(months=>2*3) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 2 quarters == @2021-08-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:19.187Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:19.252Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › date delta year

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0dfdf60c-c171-4231-a224-df0a3b06a028",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:19.995Z",
      "Database": "dev",
      "Duration": 44174591,
      "Error": "Query #2 failed with ERROR: column \"years\" does not exist in base",
      "HasResultSet": false,
      "Id": "0de97872-df4f-4ac9-9150-2057369a6432",
      "RedshiftPid": 1073742034,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:20.097Z",
          "Duration": 44174591,
          "HasResultSet": false,
          "Id": "0de97872-df4f-4ac9-9150-2057369a6432:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:20.528Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:20.100Z",
          "Duration": -1,
          "Error": "ERROR: column \"years\" does not exist in base",
          "HasResultSet": false,
          "Id": "0de97872-df4f-4ac9-9150-2057369a6432:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2031-02-24')) as \"expect\",\n     (base.\"t_date\")+make_interval(years=>10) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 10 years == @2031-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:20.528Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:20.593Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › date › before for-range is outside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6744312e-ddae-423c-a75c-43d5b650911f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:21.371Z",
      "Database": "dev",
      "Duration": 46182416,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "78e5ba36-7951-4364-988d-320a53c208bd",
      "RedshiftPid": 1073995875,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:21.459Z",
          "Duration": 46182416,
          "HasResultSet": false,
          "Id": "78e5ba36-7951-4364-988d-320a53c208bd:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:21.907Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:21.463Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "78e5ba36-7951-4364-988d-320a53c208bd:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-25') and (base.\"t_date\"<((DATE '2021-02-25')+make_interval(days=>1)))) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-25 for 1 day to be false')) ELSE '=' END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:21.907Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:21.973Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › date › first for-range is inside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "90f4be8c-3331-4cb5-93bb-c01b5ee95dfa",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:22.707Z",
      "Database": "dev",
      "Duration": 44815578,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "4c1b64e2-51ab-4f36-9fce-6b00aa6fc186",
      "RedshiftPid": 1073889396,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:22.805Z",
          "Duration": 44815578,
          "HasResultSet": false,
          "Id": "4c1b64e2-51ab-4f36-9fce-6b00aa6fc186:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:23.219Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:22.808Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "4c1b64e2-51ab-4f36-9fce-6b00aa6fc186:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-24') and (base.\"t_date\"<((DATE '2021-02-24')+make_interval(days=>1)))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-24 for 1 day to be true')) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:23.219Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:23.285Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › date › last for-range is outside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "44f2b931-5011-44a3-8931-435b5982bef0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:24.034Z",
      "Database": "dev",
      "Duration": 42777866,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "9e02b7de-51d3-4f45-ae2e-cb952d16d85c",
      "RedshiftPid": 1073766511,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:24.126Z",
          "Duration": 42777866,
          "HasResultSet": false,
          "Id": "9e02b7de-51d3-4f45-ae2e-cb952d16d85c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:24.600Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:24.130Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "9e02b7de-51d3-4f45-ae2e-cb952d16d85c:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-23') and (base.\"t_date\"<((DATE '2021-02-23')+make_interval(days=>1)))) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-23 for 1 day to be false')) ELSE '=' END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:24.600Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:24.664Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › timestamp › before for-range is outside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectFalse is t_timestamp ? @2021-02-25 00:00:00 for 1 day}
      |                                                ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-25 00:00:00 for 1 day to be false') when expectFalse else '='
      |                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › timestamp › first for-range is inside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02-24 03:04:05 for 1 day}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 03:04:05 for 1 day to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › timestamp › last for-range is outside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectFalse is t_timestamp ? @2021-02-23 03:05:06 for 1 day}
      |                                                ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-23 03:05:06 for 1 day to be false') when expectFalse else '='
      |                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › date › before to is outside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "025b5d3c-d8bf-4364-93b5-5824807ec36a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:25.405Z",
      "Database": "dev",
      "Duration": 50072414,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "891c6611-0053-4899-b2bc-2e97fb96b070",
      "RedshiftPid": 1073905763,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:25.510Z",
          "Duration": 50072414,
          "HasResultSet": false,
          "Id": "891c6611-0053-4899-b2bc-2e97fb96b070:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:25.962Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:25.513Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "891c6611-0053-4899-b2bc-2e97fb96b070:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-25') and (base.\"t_date\"<DATE '2021-03-01')) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-25 to @2021-03-01 to be false')) ELSE '=' END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:25.962Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:26.026Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › date › first to is inside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "acfcbfdb-7bf1-4792-bfe6-d37a3648bc41",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:26.876Z",
      "Database": "dev",
      "Duration": 46217601,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f6137108-59b7-42b1-a694-1c042c1bcdd9",
      "RedshiftPid": 1073741928,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:26.977Z",
          "Duration": 46217601,
          "HasResultSet": false,
          "Id": "f6137108-59b7-42b1-a694-1c042c1bcdd9:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:27.396Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:26.981Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f6137108-59b7-42b1-a694-1c042c1bcdd9:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-24') and (base.\"t_date\"<DATE '2021-03-01')) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-24 to @2021-03-01 to be true')) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:27.396Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:27.462Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › date › last to is outside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6bec196f-a587-4287-81c8-3c4d59ace85c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:28.306Z",
      "Database": "dev",
      "Duration": 44182603,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "20f42702-569d-4f2b-908e-294b42225d86",
      "RedshiftPid": 1073750132,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:28.415Z",
          "Duration": 44182603,
          "HasResultSet": false,
          "Id": "20f42702-569d-4f2b-908e-294b42225d86:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:28.890Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:28.419Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "20f42702-569d-4f2b-908e-294b42225d86:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-01') and (base.\"t_date\"<DATE '2021-02-24')) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-01 to @2021-02-24 to be false')) ELSE '=' END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:28.890Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:28.955Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › timestamp › before to is outside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectFalse is t_timestamp ? @2021-02-25 00:00:00 to @2021-02-26 00:00:00}
      |                                                ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-25 00:00:00 to @2021-02-26 00:00:00 to be false') when expectFalse else '='
      |                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › timestamp › first to is inside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02-24 03:04:05 to @2021-02-26 00:00:00}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 03:04:05 to @2021-02-26 00:00:00 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › timestamp › last to is outside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectFalse is t_timestamp ? @2021-02-24 00:00:00 to @2021-02-24 03:05:06}
      |                                                ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 00:00:00 to @2021-02-24 03:05:06 to be false') when expectFalse else '='
      |                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date in sql_block no explore

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "753cbd7d-facf-4e9e-991d-893be9f23d39",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:29.821Z",
      "Database": "dev",
      "Duration": 43806828,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "168250e9-4eb5-4855-9a3c-ce330857d923",
      "RedshiftPid": 1073881187,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:29.952Z",
          "Duration": 43806828,
          "HasResultSet": false,
          "Id": "168250e9-4eb5-4855-9a3c-ce330857d923:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:30.414Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:29.955Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "168250e9-4eb5-4855-9a3c-ce330857d923:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-24')) as \"expect\",\n     base.\"t_date\" as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date == @2021-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:30.414Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:30.479Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp in sql_block no explore

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp == @2021-02-24 03:05:06', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp == @2021-02-24 03:05:06', CHR(10), '    Received: ', got::string)
      |                                                                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › valid timestamp without seconds

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "50d180b3-877e-4829-af7f-3f9d006314b9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:31.265Z",
      "Database": "dev",
      "Duration": 52356504,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "235fb72b-ba74-4f18-8516-e23cf3852c44",
      "RedshiftPid": 1073979498,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:31.370Z",
          "Duration": 52356504,
          "HasResultSet": false,
          "Id": "235fb72b-ba74-4f18-8516-e23cf3852c44:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:31.805Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:31.374Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "235fb72b-ba74-4f18-8516-e23cf3852c44:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     2000 as \"expect\",\n     EXTRACT(year FROM TIMESTAMP '2000-01-01 00:00:00') as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: year(@2000-01-01 00:00) == 2000',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:31.805Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:31.870Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › minute implied truncated range

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Cannot do time truncation on type 'sql native'
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.minute}
      |                                                                      ^
    line 6: Cannot compare a timestamp to a date
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.minute}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: @2021-02-24 03:05:06 ? t_timestamp.minute to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › day implied truncated range

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Cannot do time truncation on type 'sql native'
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.day}
      |                                                                      ^
    line 6: Cannot compare a timestamp to a date
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.day}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: @2021-02-24 03:05:06 ? t_timestamp.day to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › year implied truncated range

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Cannot do time truncation on type 'sql native'
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.year}
      |                                                                      ^
    line 6: Cannot compare a timestamp to a date
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.year}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: @2021-02-24 03:05:06 ? t_timestamp.year to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › timestamp in literal minute

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02-24 03:05}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 03:05 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › timestamp in literal day

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02-24}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › date in literal month

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a1ac5407-fd76-453c-8fde-3236df31504e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:32.669Z",
      "Database": "dev",
      "Duration": 53611369,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "2c17b787-74a6-40ae-8204-502739c07979",
      "RedshiftPid": 1073987708,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:32.760Z",
          "Duration": 53611369,
          "HasResultSet": false,
          "Id": "2c17b787-74a6-40ae-8204-502739c07979:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:33.237Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:32.763Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "2c17b787-74a6-40ae-8204-502739c07979:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-01') and (base.\"t_date\"<DATE '2021-03-01')) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02 to be true')) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:33.237Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:33.302Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › timestamp in literal month

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › timestamp in literal year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › dependant join dialect fragments

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 5: Cannot do time truncation on type 'sql native'
      |         group_by: t_month is joined.t_timestamp.month
      |                              ^

      482 |         group_by: t_month is joined.t_timestamp.month
      483 |       }
    > 484 |     `).malloyResultMatches(runtime, {t_month: new Date('2021-02-01')});
          |        ^
      485 |   });
      486 |
      487 |   describe('timezone set correctly', () => {

      at Object.<anonymous> (test/src/databases/all/time.spec.ts:484:8)

  ● redshift date and time › timezone set correctly › timezone set in view inside source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4026d63a-5fb4-4d53-bc24-6eb569d3e7fb",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:37.112Z",
      "Database": "dev",
      "Duration": 44442082,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 272",
      "HasResultSet": false,
      "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558",
      "RedshiftPid": 1073897584,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:37.222Z",
          "Duration": 44442082,
          "HasResultSet": false,
          "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:37.689Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:37.225Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 272",
          "HasResultSet": false,
          "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMP '2021-02-24 03:05:06' as \"default_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"la_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"la_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"default_time__0\" as \"default_time\",\n  (ARRAY_AGG(\"la_query__0\") FILTER (WHERE group_set=0 AND \"la_query__0\" IS NOT NULL))[1] as \"la_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:37.689Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:37.754Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMP '2021-02-24 03:05:06' as "default_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "la_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "la_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "default_time__0" as "default_time",
      (ARRAY_AGG("la_query__0") FILTER (WHERE group_set=0 AND "la_query__0" IS NOT NULL))[1] as "la_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4026d63a-5fb4-4d53-bc24-6eb569d3e7fb",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:37.112Z",
      "Database": "dev",
      "Duration": 44442082,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 272",
      "HasResultSet": false,
      "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558",
      "RedshiftPid": 1073897584,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:37.222Z",
          "Duration": 44442082,
          "HasResultSet": false,
          "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:37.689Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:37.225Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 272",
          "HasResultSet": false,
          "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMP '2021-02-24 03:05:06' as \"default_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"la_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"la_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"default_time__0\" as \"default_time\",\n  (ARRAY_AGG(\"la_query__0\") FILTER (WHERE group_set=0 AND \"la_query__0\" IS NOT NULL))[1] as \"la_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:37.689Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:37.754Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at runQuery (test/src/util/index.ts:192:11)
      at async Object.<anonymous> (test/src/databases/all/time.spec.ts:510:13)

  ● redshift date and time › timezone set correctly › timezone set in query using source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2dc38943-6128-4994-9716-598eaeff7041",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:38.553Z",
      "Database": "dev",
      "Duration": 44415366,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 275",
      "HasResultSet": false,
      "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f",
      "RedshiftPid": 1073922161,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:38.640Z",
          "Duration": 44415366,
          "HasResultSet": false,
          "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:39.076Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:38.643Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 275",
          "HasResultSet": false,
          "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"default_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMP '2021-02-24 03:05:06' as \"undef_time\"\n      ) as __x)  ORDER BY  TIMESTAMP '2021-02-24 03:05:06' desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"undef_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"default_time__0\" as \"default_time\",\n  (ARRAY_AGG(\"undef_query__0\") FILTER (WHERE group_set=0 AND \"undef_query__0\" IS NOT NULL))[1] as \"undef_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:39.076Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:39.142Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "default_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMP '2021-02-24 03:05:06' as "undef_time"
          ) as __x)  ORDER BY  TIMESTAMP '2021-02-24 03:05:06' desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "undef_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "default_time__0" as "default_time",
      (ARRAY_AGG("undef_query__0") FILTER (WHERE group_set=0 AND "undef_query__0" IS NOT NULL))[1] as "undef_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2dc38943-6128-4994-9716-598eaeff7041",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:38.553Z",
      "Database": "dev",
      "Duration": 44415366,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 275",
      "HasResultSet": false,
      "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f",
      "RedshiftPid": 1073922161,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:38.640Z",
          "Duration": 44415366,
          "HasResultSet": false,
          "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:39.076Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:38.643Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 275",
          "HasResultSet": false,
          "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"default_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMP '2021-02-24 03:05:06' as \"undef_time\"\n      ) as __x)  ORDER BY  TIMESTAMP '2021-02-24 03:05:06' desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"undef_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"default_time__0\" as \"default_time\",\n  (ARRAY_AGG(\"undef_query__0\") FILTER (WHERE group_set=0 AND \"undef_query__0\" IS NOT NULL))[1] as \"undef_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:39.076Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:39.142Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at runQuery (test/src/util/index.ts:192:11)
      at async Object.<anonymous> (test/src/databases/all/time.spec.ts:539:13)

  ● redshift date and time › timezone set correctly › multiple timezones

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c8a7810d-f9d6-4f0a-91f8-e52276bddd34",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:40.000Z",
      "Database": "dev",
      "Duration": 53567596,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 297",
      "HasResultSet": false,
      "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a",
      "RedshiftPid": 1073832054,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:40.108Z",
          "Duration": 53567596,
          "HasResultSet": false,
          "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:40.573Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:40.111Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 297",
          "HasResultSet": false,
          "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMPTZ '2021-02-24 03:05:06 America/New_York'::TIMESTAMP as \"ny_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"la_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"la_query__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP as \"mex_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"mex_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"ny_time__0\" as \"ny_time\",\n  (ARRAY_AGG(\"la_query__0\") FILTER (WHERE group_set=0 AND \"la_query__0\" IS NOT NULL))[1] as \"la_query\",\n  (ARRAY_AGG(\"mex_query__0\") FILTER (WHERE group_set=0 AND \"mex_query__0\" IS NOT NULL))[1] as \"mex_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:40.573Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:40.639Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMPTZ '2021-02-24 03:05:06 America/New_York'::TIMESTAMP as "ny_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "la_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "la_query__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP as "mex_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "mex_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "ny_time__0" as "ny_time",
      (ARRAY_AGG("la_query__0") FILTER (WHERE group_set=0 AND "la_query__0" IS NOT NULL))[1] as "la_query",
      (ARRAY_AGG("mex_query__0") FILTER (WHERE group_set=0 AND "mex_query__0" IS NOT NULL))[1] as "mex_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c8a7810d-f9d6-4f0a-91f8-e52276bddd34",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:40.000Z",
      "Database": "dev",
      "Duration": 53567596,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 297",
      "HasResultSet": false,
      "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a",
      "RedshiftPid": 1073832054,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:40.108Z",
          "Duration": 53567596,
          "HasResultSet": false,
          "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:40.573Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:40.111Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 297",
          "HasResultSet": false,
          "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMPTZ '2021-02-24 03:05:06 America/New_York'::TIMESTAMP as \"ny_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"la_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"la_query__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP as \"mex_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"mex_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"ny_time__0\" as \"ny_time\",\n  (ARRAY_AGG(\"la_query__0\") FILTER (WHERE group_set=0 AND \"la_query__0\" IS NOT NULL))[1] as \"la_query\",\n  (ARRAY_AGG(\"mex_query__0\") FILTER (WHERE group_set=0 AND \"mex_query__0\" IS NOT NULL))[1] as \"mex_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:40.573Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:40.639Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at runQuery (test/src/util/index.ts:192:11)
      at async Object.<anonymous> (test/src/databases/all/time.spec.ts:558:24)

  console.log
    Error in SQL:
     DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;,CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS 
          SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS "evens"
        ;,SELECT "column" as "column_name", type as "data_type", null as "comment"
          FROM pg_table_def
          WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as "die_roll"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as "die_roll"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY(1) as "_'_"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       (JSONB_EXTRACT_PATH_TEXT(__o___0,'value')::double precision) as "num"
    FROM __stage0 as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(base."_'_")) as v))) as __o___0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))) as "aoa"
    FROM (SELECT 0 as z) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_EXTRACT_PATH_TEXT(each_0,'value')::double precision as "each"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))))) as v))) as aoa_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(aoa_0,'value'))) as v))) as each_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
    FROM (select 0 as o) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('rnum',1) as "_'_"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."_'_",'rnum')::double precision as "num"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."sizes",'s')::double precision as "small"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        'one_row' as "row__0",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END-1 as "s__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END as "m__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END+1 as "x__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END+2 as "xl__1"
      FROM (SELECT 1 as "o") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    , __stage1 AS (
      SELECT
        "row__0" as "row",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "s__1"::DOUBLE PRECISION as "s", 
          "m__1"::DOUBLE PRECISION as "m", 
          "x__1"::DOUBLE PRECISION as "x", 
          "xl__1"::DOUBLE PRECISION as "xl") as __x)) FILTER (WHERE group_set=1))[1]) as "sizes"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."sizes",'s')::double precision as "small"
    FROM __stage1 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       base."sizes" as "sizes"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       base."sizes" as "record"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
    FROM (SELECT 0 as z) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as "small"
    FROM (SELECT 0 as z) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as "small"
    FROM (SELECT 0 as z) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))) as "nums"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision as "odd"
    FROM __stage0 as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(base."nums",'odds'))) as v))) as odds_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       (JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision) as "odd"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))),'odds'))) as v))) as odds_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))) as "rec"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."rec",'a') as "a",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base."rec",'bc'),'b') as "b",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base."rec",'bc'),'c') as "c"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'a') as "a",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') as "b",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'c') as "c"
    FROM (SELECT 0 as z) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       CASE WHEN true THEN JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') ELSE 'b' END as "b"
    FROM (SELECT 0 as z) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          base."a"::DOUBLE PRECISION as "a", 
          base."b"::DOUBLE PRECISION as "b"
          ) as __x)  ORDER BY  base."a" asc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "ab__0"
      FROM (
                    SELECT
                      10 as "a",
                      11 as "b"
                    UNION ALL SELECT 20 , 21
                  ) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1
    )
    , __stage1 AS (
      SELECT
        (ARRAY_AGG("ab__0") FILTER (WHERE group_set=0 AND "ab__0" IS NOT NULL))[1] as "ab"
      FROM __stage0
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as "b"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."ab") as ab_0 ON true
    ORDER BY 1 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     DROP TABLE IF EXISTS tmp4f50b91e00e846c4918c85b25975a9e1;,CREATE TEMP TABLE tmp4f50b91e00e846c4918c85b25975a9e1 AS  SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS "ab" ;,SELECT "column" as "column_name", type as "data_type", null as "comment"
          FROM pg_table_def
          WHERE tablename = 'tmp4f50b91e00e846c4918c85b25975a9e1';

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "ab"
    FROM (SELECT 0 as z) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     DROP TABLE IF EXISTS tmp19306ff2363f4429916ba73384f5ab70;,CREATE TEMP TABLE tmp19306ff2363f4429916ba73384f5ab70 AS 
                SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS "sqlAB"
              ;,SELECT "column" as "column_name", type as "data_type", null as "comment"
          FROM pg_table_def
          WHERE tablename = 'tmp19306ff2363f4429916ba73384f5ab70';

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "pipeAb"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       base."pipeAb" as "ab"
    FROM __stage0 as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "pipeAb"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'b')::double precision as "b"
    FROM __stage0 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."pipeAb") as pipeAb_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       (JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as "ab"
    FROM (SELECT 0 as z) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as "b"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as ab_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(rec_0,'bc'),'b') as "b"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('bc',(JSONB_BUILD_OBJECT('b','b')))))) as rec_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two'))))) as "rrec"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as "val",
       (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as "name"
    FROM __stage0 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."rrec") as rrec_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true
    ORDER BY 1 desc NULLS LAST,2 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as "val",
       (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as "name"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two')))))) as rrec_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true
    ORDER BY 1 desc NULLS LAST,2 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/compound-atomic.spec.ts (67.385 s)
  compound atomic datatypes redshift
    simple arrays
      ✕ array literal dialect function (1471 ms)
      ✕ select array (216 ms)
      ✕ array can be passed to !function
      ✕ array.each in source (2923 ms)
      ✕ array.each in extend block (1467 ms)
      ✕ array stored field with special chars in name (1409 ms)
      ✕ bare array of array (1413 ms)
      ✕ each.each array of array (1388 ms)
      ○ skipped schema read allows array-un-nest on each
      ○ skipped cross join arrays
      ○ skipped Can read schema for array of arrays
    record
      ✕ record literal object (2855 ms)
      ✓ special character in record property name (5779 ms)
      ✕ record stored in field with special chars in name (1320 ms)
      ✕ simple record.property access (2989 ms)
      ✕ nested data looks like a record (3042 ms)
      ✕ record can be selected (1341 ms)
      ✕ record literal can be selected (1342 ms)
      ✕ select record literal from a source (1383 ms)
      ✕ computed record.property from a source (1352 ms)
      ✕ record.property from an extend block (1381 ms)
      ✕ simple each on array property inside record (1340 ms)
      ✕ each on array property inside record from source (1339 ms)
      ✕ record with a record property (1476 ms)
      ✕ record in source with a record property (1328 ms)
      ✕ record dref in source with a record property (1355 ms)
      ○ skipped can read schema of record object
      ✎ todo array or record where first entries are null
    repeated record
      ✕ repeated record from nest (2950 ms)
      ✕ select repeated record from literal dialect functions (1326 ms)
      ✕ repeat record from malloy literal (1335 ms)
      ✕ repeated record can be selected and renamed (1374 ms)
      ✕ select repeated record passed down pipeline (1496 ms)
      ✕ deref repeat record passed down pipeline (1324 ms)
      ✕ select array of records from source (1341 ms)
      ✕ deref array of records from source (1344 ms)
      ✕ repeated record in source wth record property (1414 ms)
      ✕ piped repeated record containing an array (1348 ms)
      ✕ source repeated record containing an array (1344 ms)

  ● compound atomic datatypes redshift › simple arrays › array literal dialect function

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 2: Invalid SQL, Error fetching SELECT schema for 
         DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;
        CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS 
              SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS "evens"
            ;
        SELECT "column" as "column_name", type as "data_type", null as "comment"
              FROM pg_table_def
              WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';
              : 
         Error: Batch error: 
        {
          "$metadata": {
            "httpStatusCode": 200,
            "requestId": "f5e4552d-ec16-4b0b-9f49-c32615a86ce1",
            "attempts": 1,
            "totalRetryDelay": 0
          },
          "CreatedAt": "2025-02-28T02:36:05.396Z",
          "Database": "dev",
          "Duration": 88746591,
          "Error": "Query #3 failed with ERROR: function jsonb_build_array(integer, integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "b5414b39-cf18-49ff-a7b6-34a023382270",
          "RedshiftPid": 1073840353,
          "RedshiftQueryId": 0,
          "ResultFormat": "json",
          "ResultRows": -1,
          "ResultSize": -1,
          "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
          "Status": "FAILED",
          "SubStatements": [
            {
              "CreatedAt": "2025-02-28T02:36:05.491Z",
              "Duration": 42661369,
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:1",
              "QueryString": "SET search_path TO malloytest;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.494Z",
              "Duration": 46085222,
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:2",
              "QueryString": "DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.497Z",
              "Duration": -1,
              "Error": "ERROR: function jsonb_build_array(integer, integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:3",
              "QueryString": "CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS \n      SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS \"evens\"\n    ;",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "FAILED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.500Z",
              "Duration": -1,
              "Error": "Connection or an prior query failed.",
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:4",
              "QueryString": "SELECT \"column\" as \"column_name\", type as \"data_type\", null as \"comment\"\n      FROM pg_table_def\n      WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';\n      ",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "ABORTED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            }
          ],
          "UpdatedAt": "2025-02-28T02:36:06.146Z",
          "WorkgroupName": "default-workgroup"
        }
      |           run: redshift.sql("""
      |                             ^

       98 |       test('array literal dialect function', async () => {
       99 |         await expect(`
    > 100 |           run: ${evens}`).malloyResultMatches(runtime, {
          |                           ^
      101 |           evens: evensObj,
      102 |         });
      103 |       });

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:100:27)

  ● compound atomic datatypes redshift › simple arrays › select array

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 3: Invalid SQL, Error fetching SELECT schema for 
         DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;
        CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS 
              SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS "evens"
            ;
        SELECT "column" as "column_name", type as "data_type", null as "comment"
              FROM pg_table_def
              WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';
              : 
         Error: Batch error: 
        {
          "$metadata": {
            "httpStatusCode": 200,
            "requestId": "f5e4552d-ec16-4b0b-9f49-c32615a86ce1",
            "attempts": 1,
            "totalRetryDelay": 0
          },
          "CreatedAt": "2025-02-28T02:36:05.396Z",
          "Database": "dev",
          "Duration": 88746591,
          "Error": "Query #3 failed with ERROR: function jsonb_build_array(integer, integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "b5414b39-cf18-49ff-a7b6-34a023382270",
          "RedshiftPid": 1073840353,
          "RedshiftQueryId": 0,
          "ResultFormat": "json",
          "ResultRows": -1,
          "ResultSize": -1,
          "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
          "Status": "FAILED",
          "SubStatements": [
            {
              "CreatedAt": "2025-02-28T02:36:05.491Z",
              "Duration": 42661369,
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:1",
              "QueryString": "SET search_path TO malloytest;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.494Z",
              "Duration": 46085222,
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:2",
              "QueryString": "DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.497Z",
              "Duration": -1,
              "Error": "ERROR: function jsonb_build_array(integer, integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:3",
              "QueryString": "CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS \n      SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS \"evens\"\n    ;",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "FAILED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.500Z",
              "Duration": -1,
              "Error": "Connection or an prior query failed.",
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:4",
              "QueryString": "SELECT \"column\" as \"column_name\", type as \"data_type\", null as \"comment\"\n      FROM pg_table_def\n      WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';\n      ",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "ABORTED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            }
          ],
          "UpdatedAt": "2025-02-28T02:36:06.146Z",
          "WorkgroupName": "default-workgroup"
        }
      |           run: redshift.sql("""
      |                             ^
    line 5: 'evens' is not defined
      |     """)->{select: nn is evens}
      |                          ^

      106 |           # test.verbose
      107 |           run: ${evens}->{select: nn is evens}
    > 108 |           `).malloyResultMatches(runtime, {nn: evensObj});
          |              ^
      109 |       });
      110 |       test.when(canReadCompoundSchema)(
      111 |         'schema read allows array-un-nest on each',

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:108:14)

  ● compound atomic datatypes redshift › simple arrays › array can be passed to !function

    expect(received).not.toEqual(expected) // deep equality

    Expected: not "Dialect 'redshift' missing array length function in nameOfArrayLenFunction"

      134 |         const missing = `Dialect '${dialect}' missing array length function in nameOfArrayLenFunction`;
      135 |         const fn = nameOfArrayLenFunction[dialect] ?? missing;
    > 136 |         expect(fn).not.toEqual(missing);
          |                        ^
      137 |         await expect(
      138 |           `run: ${evens}->{ select: nby2 is ${fn}!number(evens); } `
      139 |         ).malloyResultMatches(runtime, {nby2: evensObj.length});

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:136:24)

  ● compound atomic datatypes redshift › simple arrays › array.each in source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bd92f1df-27fb-4663-8b24-9513f7ca8681",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:08.553Z",
      "Database": "dev",
      "Duration": 51608316,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
      "HasResultSet": false,
      "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c",
      "RedshiftPid": 1073881334,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:08.656Z",
          "Duration": 51608316,
          "HasResultSet": false,
          "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:09.118Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:08.659Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
          "HasResultSet": false,
          "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as \"die_roll\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:09.118Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:09.182Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as "die_roll"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bd92f1df-27fb-4663-8b24-9513f7ca8681",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:08.553Z",
      "Database": "dev",
      "Duration": 51608316,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
      "HasResultSet": false,
      "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c",
      "RedshiftPid": 1073881334,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:08.656Z",
          "Duration": 51608316,
          "HasResultSet": false,
          "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:09.118Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:08.659Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
          "HasResultSet": false,
          "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as \"die_roll\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:09.118Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:09.182Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:146:12)

  ● compound atomic datatypes redshift › simple arrays › array.each in extend block

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1e6dd171-e3c7-403a-bb56-1c25c8d4fc9f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:10.021Z",
      "Database": "dev",
      "Duration": 43811797,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
      "HasResultSet": false,
      "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646",
      "RedshiftPid": 1073873121,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:10.127Z",
          "Duration": 43811797,
          "HasResultSet": false,
          "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:10.560Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:10.130Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
          "HasResultSet": false,
          "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as \"die_roll\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:10.560Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:10.625Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as "die_roll"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1e6dd171-e3c7-403a-bb56-1c25c8d4fc9f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:10.021Z",
      "Database": "dev",
      "Duration": 43811797,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
      "HasResultSet": false,
      "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646",
      "RedshiftPid": 1073873121,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:10.127Z",
          "Duration": 43811797,
          "HasResultSet": false,
          "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:10.560Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:10.130Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
          "HasResultSet": false,
          "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as \"die_roll\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:10.560Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:10.625Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:159:12)

  ● compound atomic datatypes redshift › simple arrays › array stored field with special chars in name

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9547dd6f-56ce-4985-86bf-7779086e3a8f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:11.440Z",
      "Database": "dev",
      "Duration": 45098951,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 223",
      "HasResultSet": false,
      "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab",
      "RedshiftPid": 1073791217,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:11.539Z",
          "Duration": 45098951,
          "HasResultSet": false,
          "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:11.967Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:11.542Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 223",
          "HasResultSet": false,
          "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY(1) as \"_'_\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   (JSONB_EXTRACT_PATH_TEXT(__o___0,'value')::double precision) as \"num\"\nFROM __stage0 as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(base.\"_'_\")) as v))) as __o___0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:11.967Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:12.032Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY(1) as "_'_"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       (JSONB_EXTRACT_PATH_TEXT(__o___0,'value')::double precision) as "num"
    FROM __stage0 as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(base."_'_")) as v))) as __o___0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9547dd6f-56ce-4985-86bf-7779086e3a8f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:11.440Z",
      "Database": "dev",
      "Duration": 45098951,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 223",
      "HasResultSet": false,
      "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab",
      "RedshiftPid": 1073791217,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:11.539Z",
          "Duration": 45098951,
          "HasResultSet": false,
          "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:11.967Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:11.542Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 223",
          "HasResultSet": false,
          "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY(1) as \"_'_\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   (JSONB_EXTRACT_PATH_TEXT(__o___0,'value')::double precision) as \"num\"\nFROM __stage0 as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(base.\"_'_\")) as v))) as __o___0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:11.967Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:12.032Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:196:37)

  ● compound atomic datatypes redshift › simple arrays › bare array of array

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8d09bd51-852f-4267-9e34-97e3784f1fb6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:12.865Z",
      "Database": "dev",
      "Duration": 42944848,
      "Error": "Query #2 failed with ERROR: function jsonb_build_array(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b",
      "RedshiftPid": 1073881319,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:12.948Z",
          "Duration": 42944848,
          "HasResultSet": false,
          "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:13.364Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:12.952Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_array(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b:2",
          "QueryString": "SELECT \n   JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))) as \"aoa\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:13.364Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:13.440Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))) as "aoa"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8d09bd51-852f-4267-9e34-97e3784f1fb6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:12.865Z",
      "Database": "dev",
      "Duration": 42944848,
      "Error": "Query #2 failed with ERROR: function jsonb_build_array(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b",
      "RedshiftPid": 1073881319,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:12.948Z",
          "Duration": 42944848,
          "HasResultSet": false,
          "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:13.364Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:12.952Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_array(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b:2",
          "QueryString": "SELECT \n   JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))) as \"aoa\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:13.364Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:13.440Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:247:12)

  ● compound atomic datatypes redshift › simple arrays › each.each array of array

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d308c772-3c5a-4329-9d2f-8dd8dd3eebfc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:14.248Z",
      "Database": "dev",
      "Duration": 52733904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 131",
      "HasResultSet": false,
      "Id": "be43daba-860f-4296-b98b-4aac03607f14",
      "RedshiftPid": 1073832175,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:14.332Z",
          "Duration": 52733904,
          "HasResultSet": false,
          "Id": "be43daba-860f-4296-b98b-4aac03607f14:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:14.783Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:14.335Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 131",
          "HasResultSet": false,
          "Id": "be43daba-860f-4296-b98b-4aac03607f14:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(each_0,'value')::double precision as \"each\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))))) as v))) as aoa_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(aoa_0,'value'))) as v))) as each_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:14.783Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:14.848Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(each_0,'value')::double precision as "each"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))))) as v))) as aoa_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(aoa_0,'value'))) as v))) as each_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d308c772-3c5a-4329-9d2f-8dd8dd3eebfc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:14.248Z",
      "Database": "dev",
      "Duration": 52733904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 131",
      "HasResultSet": false,
      "Id": "be43daba-860f-4296-b98b-4aac03607f14",
      "RedshiftPid": 1073832175,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:14.332Z",
          "Duration": 52733904,
          "HasResultSet": false,
          "Id": "be43daba-860f-4296-b98b-4aac03607f14:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:14.783Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:14.335Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 131",
          "HasResultSet": false,
          "Id": "be43daba-860f-4296-b98b-4aac03607f14:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(each_0,'value')::double precision as \"each\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))))) as v))) as aoa_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(aoa_0,'value'))) as v))) as each_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:14.783Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:14.848Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:252:12)

  ● compound atomic datatypes redshift › record › record literal object

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "31b9e547-1eac-4ecb-84d3-4af0d8d24214",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:17.076Z",
      "Database": "dev",
      "Duration": 44120130,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766",
      "RedshiftPid": 1073807609,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:17.171Z",
          "Duration": 44120130,
          "HasResultSet": false,
          "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:17.615Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:17.174Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766:2",
          "QueryString": "SELECT \n   JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\nFROM (select 0 as o) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:17.615Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:17.680Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
    FROM (select 0 as o) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "31b9e547-1eac-4ecb-84d3-4af0d8d24214",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:17.076Z",
      "Database": "dev",
      "Duration": 44120130,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766",
      "RedshiftPid": 1073807609,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:17.171Z",
          "Duration": 44120130,
          "HasResultSet": false,
          "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:17.615Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:17.174Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766:2",
          "QueryString": "SELECT \n   JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\nFROM (select 0 as o) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:17.615Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:17.680Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:269:12)

  ● compound atomic datatypes redshift › record › record stored in field with special chars in name

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0503001e-f2b5-4a13-8513-70d21fa66de7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:24.220Z",
      "Database": "dev",
      "Duration": 44098501,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5428c2ba-5ffc-4ec8-b5ee-d4e164456f80",
      "RedshiftPid": 1073783023,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:24.305Z",
          "Duration": 44098501,
          "HasResultSet": false,
          "Id": "5428c2ba-5ffc-4ec8-b5ee-d4e164456f80:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:24.737Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:24.308Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5428c2ba-5ffc-4ec8-b5ee-d4e164456f80:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('rnum',1) as \"_'_\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"_'_\",'rnum')::double precision as \"num\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:24.737Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:24.803Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● compound atomic datatypes redshift › record › simple record.property access

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "87a42fa7-5228-421a-86f2-33b53cb1b8a7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:27.187Z",
      "Database": "dev",
      "Duration": 53806049,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b",
      "RedshiftPid": 1073955053,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:27.283Z",
          "Duration": 53806049,
          "HasResultSet": false,
          "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:27.722Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:27.286Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"sizes\",'s')::double precision as \"small\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:27.722Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:27.786Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."sizes",'s')::double precision as "small"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "87a42fa7-5228-421a-86f2-33b53cb1b8a7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:27.187Z",
      "Database": "dev",
      "Duration": 53806049,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b",
      "RedshiftPid": 1073955053,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:27.283Z",
          "Duration": 53806049,
          "HasResultSet": false,
          "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:27.722Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:27.286Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"sizes\",'s')::double precision as \"small\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:27.722Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:27.786Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:319:59)

  ● compound atomic datatypes redshift › record › nested data looks like a record

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5c26257c-f5e9-42fe-a682-2c1bff1d4770",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:30.179Z",
      "Database": "dev",
      "Duration": 53240564,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 28, column 51\n  Position: 780",
      "HasResultSet": false,
      "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693",
      "RedshiftPid": 1073766625,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:30.283Z",
          "Duration": 53240564,
          "HasResultSet": false,
          "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:30.768Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:30.287Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 28, column 51\n  Position: 780",
          "HasResultSet": false,
          "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    'one_row' as \"row__0\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END-1 as \"s__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END as \"m__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END+1 as \"x__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END+2 as \"xl__1\"\n  FROM (SELECT 1 as \"o\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\n, __stage1 AS (\n  SELECT\n    \"row__0\" as \"row\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"s__1\"::DOUBLE PRECISION as \"s\", \n      \"m__1\"::DOUBLE PRECISION as \"m\", \n      \"x__1\"::DOUBLE PRECISION as \"x\", \n      \"xl__1\"::DOUBLE PRECISION as \"xl\") as __x)) FILTER (WHERE group_set=1))[1]) as \"sizes\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"sizes\",'s')::double precision as \"small\"\nFROM __stage1 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:30.768Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:30.833Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        'one_row' as "row__0",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END-1 as "s__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END as "m__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END+1 as "x__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END+2 as "xl__1"
      FROM (SELECT 1 as "o") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    , __stage1 AS (
      SELECT
        "row__0" as "row",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "s__1"::DOUBLE PRECISION as "s", 
          "m__1"::DOUBLE PRECISION as "m", 
          "x__1"::DOUBLE PRECISION as "x", 
          "xl__1"::DOUBLE PRECISION as "xl") as __x)) FILTER (WHERE group_set=1))[1]) as "sizes"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."sizes",'s')::double precision as "small"
    FROM __stage1 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5c26257c-f5e9-42fe-a682-2c1bff1d4770",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:30.179Z",
      "Database": "dev",
      "Duration": 53240564,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 28, column 51\n  Position: 780",
      "HasResultSet": false,
      "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693",
      "RedshiftPid": 1073766625,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:30.283Z",
          "Duration": 53240564,
          "HasResultSet": false,
          "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:30.768Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:30.287Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 28, column 51\n  Position: 780",
          "HasResultSet": false,
          "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    'one_row' as \"row__0\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END-1 as \"s__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END as \"m__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END+1 as \"x__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END+2 as \"xl__1\"\n  FROM (SELECT 1 as \"o\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\n, __stage1 AS (\n  SELECT\n    \"row__0\" as \"row\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"s__1\"::DOUBLE PRECISION as \"s\", \n      \"m__1\"::DOUBLE PRECISION as \"m\", \n      \"x__1\"::DOUBLE PRECISION as \"x\", \n      \"xl__1\"::DOUBLE PRECISION as \"xl\") as __x)) FILTER (WHERE group_set=1))[1]) as \"sizes\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"sizes\",'s')::double precision as \"small\"\nFROM __stage1 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:30.768Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:30.833Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:335:47)

  ● compound atomic datatypes redshift › record › record can be selected

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4b3399b0-125d-43eb-9f55-643a74910181",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:31.579Z",
      "Database": "dev",
      "Duration": 44861126,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f545deb9-c2fc-4726-b028-895223e4374e",
      "RedshiftPid": 1073774838,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:31.672Z",
          "Duration": 44861126,
          "HasResultSet": false,
          "Id": "f545deb9-c2fc-4726-b028-895223e4374e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:32.103Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:31.676Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f545deb9-c2fc-4726-b028-895223e4374e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   base.\"sizes\" as \"sizes\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:32.103Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:32.169Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       base."sizes" as "sizes"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4b3399b0-125d-43eb-9f55-643a74910181",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:31.579Z",
      "Database": "dev",
      "Duration": 44861126,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f545deb9-c2fc-4726-b028-895223e4374e",
      "RedshiftPid": 1073774838,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:31.672Z",
          "Duration": 44861126,
          "HasResultSet": false,
          "Id": "f545deb9-c2fc-4726-b028-895223e4374e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:32.103Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:31.676Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f545deb9-c2fc-4726-b028-895223e4374e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   base.\"sizes\" as \"sizes\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:32.103Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:32.169Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:343:11)

  ● compound atomic datatypes redshift › record › record literal can be selected

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d1fa4903-cda8-4ca3-8dd0-af61763c57b7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:32.936Z",
      "Database": "dev",
      "Duration": 52093569,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f",
      "RedshiftPid": 1073955043,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:33.021Z",
          "Duration": 52093569,
          "HasResultSet": false,
          "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:33.447Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:33.024Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   base.\"sizes\" as \"record\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:33.447Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:33.510Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       base."sizes" as "record"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d1fa4903-cda8-4ca3-8dd0-af61763c57b7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:32.936Z",
      "Database": "dev",
      "Duration": 52093569,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f",
      "RedshiftPid": 1073955043,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:33.021Z",
          "Duration": 52093569,
          "HasResultSet": false,
          "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:33.447Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:33.024Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   base.\"sizes\" as \"record\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:33.447Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:33.510Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:348:12)

  ● compound atomic datatypes redshift › record › select record literal from a source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6e7b81c1-273a-4e2a-ba30-749af9d505a6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:34.309Z",
      "Database": "dev",
      "Duration": 42873221,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "297f21ad-4543-491e-b232-d24e935206f7",
      "RedshiftPid": 1073758443,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:34.401Z",
          "Duration": 42873221,
          "HasResultSet": false,
          "Id": "297f21ad-4543-491e-b232-d24e935206f7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:34.809Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:34.405Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "297f21ad-4543-491e-b232-d24e935206f7:2",
          "QueryString": "SELECT \n   JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:34.809Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:34.873Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6e7b81c1-273a-4e2a-ba30-749af9d505a6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:34.309Z",
      "Database": "dev",
      "Duration": 42873221,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "297f21ad-4543-491e-b232-d24e935206f7",
      "RedshiftPid": 1073758443,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:34.401Z",
          "Duration": 42873221,
          "HasResultSet": false,
          "Id": "297f21ad-4543-491e-b232-d24e935206f7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:34.809Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:34.405Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "297f21ad-4543-491e-b232-d24e935206f7:2",
          "QueryString": "SELECT \n   JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:34.809Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:34.873Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:356:12)

  ● compound atomic datatypes redshift › record › computed record.property from a source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3d04577b-52a5-45aa-a072-f4e3031dbfb2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:35.652Z",
      "Database": "dev",
      "Duration": 43525490,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4",
      "RedshiftPid": 1073758439,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:35.748Z",
          "Duration": 43525490,
          "HasResultSet": false,
          "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:36.166Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:35.751Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as \"small\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:36.166Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:36.230Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as "small"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3d04577b-52a5-45aa-a072-f4e3031dbfb2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:35.652Z",
      "Database": "dev",
      "Duration": 43525490,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4",
      "RedshiftPid": 1073758439,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:35.748Z",
          "Duration": 43525490,
          "HasResultSet": false,
          "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:36.166Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:35.751Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as \"small\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:36.166Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:36.230Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:363:12)

  ● compound atomic datatypes redshift › record › record.property from an extend block

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "38078beb-d78c-477b-a275-b4f185e0975f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:37.034Z",
      "Database": "dev",
      "Duration": 44649202,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f",
      "RedshiftPid": 1073799403,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:37.133Z",
          "Duration": 44649202,
          "HasResultSet": false,
          "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:37.571Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:37.137Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as \"small\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:37.571Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:37.637Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as "small"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "38078beb-d78c-477b-a275-b4f185e0975f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:37.034Z",
      "Database": "dev",
      "Duration": 44649202,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f",
      "RedshiftPid": 1073799403,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:37.133Z",
          "Duration": 44649202,
          "HasResultSet": false,
          "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:37.571Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:37.137Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as \"small\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:37.571Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:37.637Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:371:12)

  ● compound atomic datatypes redshift › record › simple each on array property inside record

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "42417dc3-6e1e-4a16-bd5f-9d1634e58c9a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:38.381Z",
      "Database": "dev",
      "Duration": 53514188,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 286",
      "HasResultSet": false,
      "Id": "5103683f-6b11-48c1-9795-17a51346148d",
      "RedshiftPid": 1073832164,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:38.471Z",
          "Duration": 53514188,
          "HasResultSet": false,
          "Id": "5103683f-6b11-48c1-9795-17a51346148d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:38.900Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:38.475Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 286",
          "HasResultSet": false,
          "Id": "5103683f-6b11-48c1-9795-17a51346148d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))) as \"nums\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision as \"odd\"\nFROM __stage0 as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(base.\"nums\",'odds'))) as v))) as odds_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:38.900Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:38.966Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))) as "nums"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision as "odd"
    FROM __stage0 as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(base."nums",'odds'))) as v))) as odds_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "42417dc3-6e1e-4a16-bd5f-9d1634e58c9a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:38.381Z",
      "Database": "dev",
      "Duration": 53514188,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 286",
      "HasResultSet": false,
      "Id": "5103683f-6b11-48c1-9795-17a51346148d",
      "RedshiftPid": 1073832164,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:38.471Z",
          "Duration": 53514188,
          "HasResultSet": false,
          "Id": "5103683f-6b11-48c1-9795-17a51346148d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:38.900Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:38.475Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 286",
          "HasResultSet": false,
          "Id": "5103683f-6b11-48c1-9795-17a51346148d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))) as \"nums\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision as \"odd\"\nFROM __stage0 as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(base.\"nums\",'odds'))) as v))) as odds_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:38.900Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:38.966Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:377:12)

  ● compound atomic datatypes redshift › record › each on array property inside record from source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5dde5b7d-ebb1-4b17-9898-0c0a0d3b78db",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:39.714Z",
      "Database": "dev",
      "Duration": 44189522,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 132",
      "HasResultSet": false,
      "Id": "f3088615-3b50-444c-bff8-882d8d118edb",
      "RedshiftPid": 1073783033,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:39.796Z",
          "Duration": 44189522,
          "HasResultSet": false,
          "Id": "f3088615-3b50-444c-bff8-882d8d118edb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:40.229Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:39.800Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 132",
          "HasResultSet": false,
          "Id": "f3088615-3b50-444c-bff8-882d8d118edb:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision) as \"odd\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))),'odds'))) as v))) as odds_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:40.229Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:40.294Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision) as "odd"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))),'odds'))) as v))) as odds_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5dde5b7d-ebb1-4b17-9898-0c0a0d3b78db",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:39.714Z",
      "Database": "dev",
      "Duration": 44189522,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 132",
      "HasResultSet": false,
      "Id": "f3088615-3b50-444c-bff8-882d8d118edb",
      "RedshiftPid": 1073783033,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:39.796Z",
          "Duration": 44189522,
          "HasResultSet": false,
          "Id": "f3088615-3b50-444c-bff8-882d8d118edb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:40.229Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:39.800Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 132",
          "HasResultSet": false,
          "Id": "f3088615-3b50-444c-bff8-882d8d118edb:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision) as \"odd\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))),'odds'))) as v))) as odds_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:40.229Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:40.294Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:383:12)

  ● compound atomic datatypes redshift › record › record with a record property

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f40e9ed1-0a7b-4a84-bd66-9dc6dfaa8ab8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:41.174Z",
      "Database": "dev",
      "Duration": 44043495,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3",
      "RedshiftPid": 1073955062,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:41.271Z",
          "Duration": 44043495,
          "HasResultSet": false,
          "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:41.703Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:41.275Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))) as \"rec\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"rec\",'a') as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base.\"rec\",'bc'),'b') as \"b\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base.\"rec\",'bc'),'c') as \"c\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:41.703Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:41.769Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))) as "rec"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."rec",'a') as "a",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base."rec",'bc'),'b') as "b",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base."rec",'bc'),'c') as "c"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f40e9ed1-0a7b-4a84-bd66-9dc6dfaa8ab8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:41.174Z",
      "Database": "dev",
      "Duration": 44043495,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3",
      "RedshiftPid": 1073955062,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:41.271Z",
          "Duration": 44043495,
          "HasResultSet": false,
          "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:41.703Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:41.275Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))) as \"rec\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"rec\",'a') as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base.\"rec\",'bc'),'b') as \"b\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base.\"rec\",'bc'),'c') as \"c\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:41.703Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:41.769Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:390:12)

  ● compound atomic datatypes redshift › record › record in source with a record property

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e04647a0-a290-45d6-904e-5ec895538d4e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:42.527Z",
      "Database": "dev",
      "Duration": 44017458,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "778f937b-614f-40db-bbb6-534913d2281f",
      "RedshiftPid": 1073914104,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:42.627Z",
          "Duration": 44017458,
          "HasResultSet": false,
          "Id": "778f937b-614f-40db-bbb6-534913d2281f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:43.052Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:42.630Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "778f937b-614f-40db-bbb6-534913d2281f:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'a') as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') as \"b\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'c') as \"c\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:43.052Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:43.117Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'a') as "a",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') as "b",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'c') as "c"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e04647a0-a290-45d6-904e-5ec895538d4e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:42.527Z",
      "Database": "dev",
      "Duration": 44017458,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "778f937b-614f-40db-bbb6-534913d2281f",
      "RedshiftPid": 1073914104,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:42.627Z",
          "Duration": 44017458,
          "HasResultSet": false,
          "Id": "778f937b-614f-40db-bbb6-534913d2281f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:43.052Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:42.630Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "778f937b-614f-40db-bbb6-534913d2281f:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'a') as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') as \"b\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'c') as \"c\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:43.052Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:43.117Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:396:12)

  ● compound atomic datatypes redshift › record › record dref in source with a record property

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8ffeffee-5db3-42ed-ba2f-3c6ba1711e74",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:43.897Z",
      "Database": "dev",
      "Duration": 43867400,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082",
      "RedshiftPid": 1073971430,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:43.982Z",
          "Duration": 43867400,
          "HasResultSet": false,
          "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:44.399Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:43.985Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082:2",
          "QueryString": "SELECT \n   CASE WHEN true THEN JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') ELSE 'b' END as \"b\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:44.399Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:44.464Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       CASE WHEN true THEN JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') ELSE 'b' END as "b"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8ffeffee-5db3-42ed-ba2f-3c6ba1711e74",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:43.897Z",
      "Database": "dev",
      "Duration": 43867400,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082",
      "RedshiftPid": 1073971430,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:43.982Z",
          "Duration": 43867400,
          "HasResultSet": false,
          "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:44.399Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:43.985Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082:2",
          "QueryString": "SELECT \n   CASE WHEN true THEN JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') ELSE 'b' END as \"b\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:44.399Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:44.464Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:402:12)

  ● compound atomic datatypes redshift › repeated record › repeated record from nest

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "48fa65da-5cb7-4825-88ac-fe9bf1343cd0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:46.818Z",
      "Database": "dev",
      "Duration": 44429206,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 212",
      "HasResultSet": false,
      "Id": "650874f5-46e3-4707-b1ca-199800f4786d",
      "RedshiftPid": 1073889534,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:46.915Z",
          "Duration": 44429206,
          "HasResultSet": false,
          "Id": "650874f5-46e3-4707-b1ca-199800f4786d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:47.326Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:46.919Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 212",
          "HasResultSet": false,
          "Id": "650874f5-46e3-4707-b1ca-199800f4786d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      base.\"a\"::DOUBLE PRECISION as \"a\", \n      base.\"b\"::DOUBLE PRECISION as \"b\"\n      ) as __x)  ORDER BY  base.\"a\" asc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"ab__0\"\n  FROM (\n                SELECT\n                  10 as \"a\",\n                  11 as \"b\"\n                UNION ALL SELECT 20 , 21\n              ) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1\n)\n, __stage1 AS (\n  SELECT\n    (ARRAY_AGG(\"ab__0\") FILTER (WHERE group_set=0 AND \"ab__0\" IS NOT NULL))[1] as \"ab\"\n  FROM __stage0\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as \"b\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"ab\") as ab_0 ON true\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:47.326Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:47.392Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          base."a"::DOUBLE PRECISION as "a", 
          base."b"::DOUBLE PRECISION as "b"
          ) as __x)  ORDER BY  base."a" asc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "ab__0"
      FROM (
                    SELECT
                      10 as "a",
                      11 as "b"
                    UNION ALL SELECT 20 , 21
                  ) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1
    )
    , __stage1 AS (
      SELECT
        (ARRAY_AGG("ab__0") FILTER (WHERE group_set=0 AND "ab__0" IS NOT NULL))[1] as "ab"
      FROM __stage0
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as "b"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."ab") as ab_0 ON true
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "48fa65da-5cb7-4825-88ac-fe9bf1343cd0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:46.818Z",
      "Database": "dev",
      "Duration": 44429206,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 212",
      "HasResultSet": false,
      "Id": "650874f5-46e3-4707-b1ca-199800f4786d",
      "RedshiftPid": 1073889534,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:46.915Z",
          "Duration": 44429206,
          "HasResultSet": false,
          "Id": "650874f5-46e3-4707-b1ca-199800f4786d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:47.326Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:46.919Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 212",
          "HasResultSet": false,
          "Id": "650874f5-46e3-4707-b1ca-199800f4786d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      base.\"a\"::DOUBLE PRECISION as \"a\", \n      base.\"b\"::DOUBLE PRECISION as \"b\"\n      ) as __x)  ORDER BY  base.\"a\" asc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"ab__0\"\n  FROM (\n                SELECT\n                  10 as \"a\",\n                  11 as \"b\"\n                UNION ALL SELECT 20 , 21\n              ) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1\n)\n, __stage1 AS (\n  SELECT\n    (ARRAY_AGG(\"ab__0\") FILTER (WHERE group_set=0 AND \"ab__0\" IS NOT NULL))[1] as \"ab\"\n  FROM __stage0\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as \"b\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"ab\") as ab_0 ON true\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:47.326Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:47.392Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:443:12)

  ● compound atomic datatypes redshift › repeated record › select repeated record from literal dialect functions

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 2: Invalid SQL, Error fetching SELECT schema for 
         DROP TABLE IF EXISTS tmp4f50b91e00e846c4918c85b25975a9e1;
        CREATE TEMP TABLE tmp4f50b91e00e846c4918c85b25975a9e1 AS  SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS "ab" ;
        SELECT "column" as "column_name", type as "data_type", null as "comment"
              FROM pg_table_def
              WHERE tablename = 'tmp4f50b91e00e846c4918c85b25975a9e1';
              : 
         Error: Batch error: 
        {
          "$metadata": {
            "httpStatusCode": 200,
            "requestId": "00b66cdb-1f1a-4e3c-a10c-7727815fe0bd",
            "attempts": 1,
            "totalRetryDelay": 0
          },
          "CreatedAt": "2025-02-28T02:36:48.151Z",
          "Database": "dev",
          "Duration": 97042444,
          "Error": "Query #3 failed with ERROR: function jsonb_build_object(character varying, integer, character varying, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939",
          "RedshiftPid": 1073815782,
          "RedshiftQueryId": 0,
          "ResultFormat": "json",
          "ResultRows": -1,
          "ResultSize": -1,
          "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
          "Status": "FAILED",
          "SubStatements": [
            {
              "CreatedAt": "2025-02-28T02:36:48.233Z",
              "Duration": 52232575,
              "HasResultSet": false,
              "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939:1",
              "QueryString": "SET search_path TO malloytest;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:48.813Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:48.236Z",
              "Duration": 44809869,
              "HasResultSet": false,
              "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939:2",
              "QueryString": "DROP TABLE IF EXISTS tmp4f50b91e00e846c4918c85b25975a9e1;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:48.813Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:48.240Z",
              "Duration": -1,
              "Error": "ERROR: function jsonb_build_object(character varying, integer, character varying, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
              "HasResultSet": false,
              "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939:3",
              "QueryString": "CREATE TEMP TABLE tmp4f50b91e00e846c4918c85b25975a9e1 AS  SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS \"ab\" ;",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "FAILED",
              "UpdatedAt": "2025-02-28T02:36:48.813Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:48.243Z",
              "Duration": -1,
              "Error": "Connection or an prior query failed.",
              "HasResultSet": false,
              "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939:4",
              "QueryString": "SELECT \"column\" as \"column_name\", type as \"data_type\", null as \"comment\"\n      FROM pg_table_def\n      WHERE tablename = 'tmp4f50b91e00e846c4918c85b25975a9e1';\n      ",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "ABORTED",
              "UpdatedAt": "2025-02-28T02:36:48.813Z"
            }
          ],
          "UpdatedAt": "2025-02-28T02:36:48.888Z",
          "WorkgroupName": "default-workgroup"
        }
      |           run: redshift.sql(""" SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS "ab" """)
      |                             ^

      446 |         await expect(`
      447 |           run: ${conName}.sql(""" ${selectAB('ab')} """)
    > 448 |         `).malloyResultMatches(runtime, {ab: ab_eq});
          |            ^
      449 |       });
      450 |       test('repeat record from malloy literal', async () => {
      451 |         await expect(`

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:448:12)

  ● compound atomic datatypes redshift › repeated record › repeat record from malloy literal

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a1401c77-f8e3-4f9a-924b-6a84786f28d0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:49.495Z",
      "Database": "dev",
      "Duration": 45317061,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "76a27d48-cb50-4415-a31d-07d090c52b15",
      "RedshiftPid": 1073774970,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:49.582Z",
          "Duration": 45317061,
          "HasResultSet": false,
          "Id": "76a27d48-cb50-4415-a31d-07d090c52b15:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:49.986Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:49.585Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "76a27d48-cb50-4415-a31d-07d090c52b15:2",
          "QueryString": "SELECT \n   JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"ab\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:49.986Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:50.062Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "ab"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a1401c77-f8e3-4f9a-924b-6a84786f28d0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:49.495Z",
      "Database": "dev",
      "Duration": 45317061,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "76a27d48-cb50-4415-a31d-07d090c52b15",
      "RedshiftPid": 1073774970,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:49.582Z",
          "Duration": 45317061,
          "HasResultSet": false,
          "Id": "76a27d48-cb50-4415-a31d-07d090c52b15:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:49.986Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:49.585Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "76a27d48-cb50-4415-a31d-07d090c52b15:2",
          "QueryString": "SELECT \n   JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"ab\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:49.986Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:50.062Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:454:12)

  ● compound atomic datatypes redshift › repeated record › repeated record can be selected and renamed

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 2: Invalid SQL, Error fetching SELECT schema for 
         DROP TABLE IF EXISTS tmp19306ff2363f4429916ba73384f5ab70;
        CREATE TEMP TABLE tmp19306ff2363f4429916ba73384f5ab70 AS 
                    SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS "sqlAB"
                  ;
        SELECT "column" as "column_name", type as "data_type", null as "comment"
              FROM pg_table_def
              WHERE tablename = 'tmp19306ff2363f4429916ba73384f5ab70';
              : 
         Error: Batch error: 
        {
          "$metadata": {
            "httpStatusCode": 200,
            "requestId": "e94bdbce-11f3-4136-901f-ccd71baa5ac9",
            "attempts": 1,
            "totalRetryDelay": 0
          },
          "CreatedAt": "2025-02-28T02:36:50.834Z",
          "Database": "dev",
          "Duration": 87111090,
          "Error": "Query #3 failed with ERROR: function jsonb_build_object(character varying, integer, character varying, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb",
          "RedshiftPid": 1073889531,
          "RedshiftQueryId": 0,
          "ResultFormat": "json",
          "ResultRows": -1,
          "ResultSize": -1,
          "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
          "Status": "FAILED",
          "SubStatements": [
            {
              "CreatedAt": "2025-02-28T02:36:50.932Z",
              "Duration": 45533702,
              "HasResultSet": false,
              "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb:1",
              "QueryString": "SET search_path TO malloytest;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:51.475Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:50.935Z",
              "Duration": 41577388,
              "HasResultSet": false,
              "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb:2",
              "QueryString": "DROP TABLE IF EXISTS tmp19306ff2363f4429916ba73384f5ab70;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:51.475Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:50.939Z",
              "Duration": -1,
              "Error": "ERROR: function jsonb_build_object(character varying, integer, character varying, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
              "HasResultSet": false,
              "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb:3",
              "QueryString": "CREATE TEMP TABLE tmp19306ff2363f4429916ba73384f5ab70 AS \n            SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS \"sqlAB\"\n          ;",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "FAILED",
              "UpdatedAt": "2025-02-28T02:36:51.475Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:50.942Z",
              "Duration": -1,
              "Error": "Connection or an prior query failed.",
              "HasResultSet": false,
              "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb:4",
              "QueryString": "SELECT \"column\" as \"column_name\", type as \"data_type\", null as \"comment\"\n      FROM pg_table_def\n      WHERE tablename = 'tmp19306ff2363f4429916ba73384f5ab70';\n      ",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "ABORTED",
              "UpdatedAt": "2025-02-28T02:36:51.475Z"
            }
          ],
          "UpdatedAt": "2025-02-28T02:36:51.540Z",
          "WorkgroupName": "default-workgroup"
        }
      |           run: redshift.sql("""
      |                             ^
    line 4: 'sqlAB' is not defined
      |           """) -> { select: ab is sqlAB }
      |                                   ^

      460 |           """) -> { select: ab is sqlAB }
      461 |       `;
    > 462 |         await expect(src).malloyResultMatches(runtime, {ab: ab_eq});
          |                           ^
      463 |       });
      464 |       test('select repeated record passed down pipeline', async () => {
      465 |         await expect(`

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:462:27)

  ● compound atomic datatypes redshift › repeated record › select repeated record passed down pipeline

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "870b05cb-182b-4d2c-8cf2-1b6cee195e2b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:52.286Z",
      "Database": "dev",
      "Duration": 44108483,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb",
      "RedshiftPid": 1073889505,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:52.410Z",
          "Duration": 44108483,
          "HasResultSet": false,
          "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:52.858Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:52.413Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"pipeAb\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   base.\"pipeAb\" as \"ab\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:52.858Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:52.923Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "pipeAb"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       base."pipeAb" as "ab"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "870b05cb-182b-4d2c-8cf2-1b6cee195e2b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:52.286Z",
      "Database": "dev",
      "Duration": 44108483,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb",
      "RedshiftPid": 1073889505,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:52.410Z",
          "Duration": 44108483,
          "HasResultSet": false,
          "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:52.858Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:52.413Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"pipeAb\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   base.\"pipeAb\" as \"ab\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:52.858Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:52.923Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:469:12)

  ● compound atomic datatypes redshift › repeated record › deref repeat record passed down pipeline

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b73599cd-88f4-45e1-8860-853ba453329c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:53.693Z",
      "Database": "dev",
      "Duration": 44611374,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8",
      "RedshiftPid": 1073881337,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:53.797Z",
          "Duration": 44611374,
          "HasResultSet": false,
          "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:54.227Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:53.801Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"pipeAb\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'b')::double precision as \"b\"\nFROM __stage0 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"pipeAb\") as pipeAb_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:54.227Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:54.293Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "pipeAb"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'b')::double precision as "b"
    FROM __stage0 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."pipeAb") as pipeAb_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b73599cd-88f4-45e1-8860-853ba453329c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:53.693Z",
      "Database": "dev",
      "Duration": 44611374,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8",
      "RedshiftPid": 1073881337,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:53.797Z",
          "Duration": 44611374,
          "HasResultSet": false,
          "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:54.227Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:53.801Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"pipeAb\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'b')::double precision as \"b\"\nFROM __stage0 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"pipeAb\") as pipeAb_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:54.227Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:54.293Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:476:12)

  ● compound atomic datatypes redshift › repeated record › select array of records from source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "fcf8d9c2-9e43-40f1-9cad-9a91e242562f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:55.023Z",
      "Database": "dev",
      "Duration": 44687140,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "2f143cad-84ec-4102-bbed-17291cfc8543",
      "RedshiftPid": 1073914084,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:55.121Z",
          "Duration": 44687140,
          "HasResultSet": false,
          "Id": "2f143cad-84ec-4102-bbed-17291cfc8543:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:55.558Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:55.124Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "2f143cad-84ec-4102-bbed-17291cfc8543:2",
          "QueryString": "SELECT \n   (JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as \"ab\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:55.558Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:55.624Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as "ab"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "fcf8d9c2-9e43-40f1-9cad-9a91e242562f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:55.023Z",
      "Database": "dev",
      "Duration": 44687140,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "2f143cad-84ec-4102-bbed-17291cfc8543",
      "RedshiftPid": 1073914084,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:55.121Z",
          "Duration": 44687140,
          "HasResultSet": false,
          "Id": "2f143cad-84ec-4102-bbed-17291cfc8543:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:55.558Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:55.124Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "2f143cad-84ec-4102-bbed-17291cfc8543:2",
          "QueryString": "SELECT \n   (JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as \"ab\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:55.558Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:55.624Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:483:12)

  ● compound atomic datatypes redshift › repeated record › deref array of records from source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7a027aed-ade5-4fab-a34a-b23f61a4c376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:56.389Z",
      "Database": "dev",
      "Duration": 53854656,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82",
      "RedshiftPid": 1073750248,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:56.476Z",
          "Duration": 53854656,
          "HasResultSet": false,
          "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:56.913Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:56.479Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as \"b\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as ab_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:56.913Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:56.978Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as "b"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as ab_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7a027aed-ade5-4fab-a34a-b23f61a4c376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:56.389Z",
      "Database": "dev",
      "Duration": 53854656,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82",
      "RedshiftPid": 1073750248,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:56.476Z",
          "Duration": 53854656,
          "HasResultSet": false,
          "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:56.913Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:56.479Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as \"b\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as ab_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:56.913Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:56.978Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:490:12)

  ● compound atomic datatypes redshift › repeated record › repeated record in source wth record property

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3abcd392-4bde-429f-b4dd-7a943a27af61",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:57.780Z",
      "Database": "dev",
      "Duration": 52116680,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec",
      "RedshiftPid": 1073799416,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:57.875Z",
          "Duration": 52116680,
          "HasResultSet": false,
          "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:58.318Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:57.878Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(rec_0,'bc'),'b') as \"b\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('bc',(JSONB_BUILD_OBJECT('b','b')))))) as rec_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:58.318Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:58.392Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(rec_0,'bc'),'b') as "b"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('bc',(JSONB_BUILD_OBJECT('b','b')))))) as rec_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3abcd392-4bde-429f-b4dd-7a943a27af61",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:57.780Z",
      "Database": "dev",
      "Duration": 52116680,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec",
      "RedshiftPid": 1073799416,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:57.875Z",
          "Duration": 52116680,
          "HasResultSet": false,
          "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:58.318Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:57.878Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(rec_0,'bc'),'b') as \"b\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('bc',(JSONB_BUILD_OBJECT('b','b')))))) as rec_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:58.318Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:58.392Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:496:12)

  ● compound atomic datatypes redshift › repeated record › piped repeated record containing an array

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "88612b5e-bee5-47f8-a6e2-2aa5e3ce3436",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:59.137Z",
      "Database": "dev",
      "Duration": 44404812,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 11, column 23\n  Position: 480",
      "HasResultSet": false,
      "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c",
      "RedshiftPid": 1073979634,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:59.234Z",
          "Duration": 44404812,
          "HasResultSet": false,
          "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:59.654Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:59.237Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 11, column 23\n  Position: 480",
          "HasResultSet": false,
          "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two'))))) as \"rrec\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as \"val\",\n   (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as \"name\"\nFROM __stage0 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"rrec\") as rrec_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true\nORDER BY 1 desc NULLS LAST,2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:59.654Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:59.720Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two'))))) as "rrec"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as "val",
       (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as "name"
    FROM __stage0 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."rrec") as rrec_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true
    ORDER BY 1 desc NULLS LAST,2 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "88612b5e-bee5-47f8-a6e2-2aa5e3ce3436",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:59.137Z",
      "Database": "dev",
      "Duration": 44404812,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 11, column 23\n  Position: 480",
      "HasResultSet": false,
      "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c",
      "RedshiftPid": 1073979634,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:59.234Z",
          "Duration": 44404812,
          "HasResultSet": false,
          "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:59.654Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:59.237Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 11, column 23\n  Position: 480",
          "HasResultSet": false,
          "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two'))))) as \"rrec\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as \"val\",\n   (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as \"name\"\nFROM __stage0 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"rrec\") as rrec_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true\nORDER BY 1 desc NULLS LAST,2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:59.654Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:59.720Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:509:12)

  ● compound atomic datatypes redshift › repeated record › source repeated record containing an array

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "de997993-17d9-4d7d-8927-4b3e662bac76",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:37:00.485Z",
      "Database": "dev",
      "Duration": 42828718,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 6, column 23\n  Position: 398",
      "HasResultSet": false,
      "Id": "126068e3-5d2e-4de1-a369-36caf845773a",
      "RedshiftPid": 1073848557,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:37:00.578Z",
          "Duration": 42828718,
          "HasResultSet": false,
          "Id": "126068e3-5d2e-4de1-a369-36caf845773a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:37:01.021Z"
        },
        {
          "CreatedAt": "2025-02-28T02:37:00.582Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 6, column 23\n  Position: 398",
          "HasResultSet": false,
          "Id": "126068e3-5d2e-4de1-a369-36caf845773a:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as \"val\",\n   (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as \"name\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two')))))) as rrec_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true\nORDER BY 1 desc NULLS LAST,2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:37:01.021Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:37:01.086Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as "val",
       (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as "name"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two')))))) as rrec_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true
    ORDER BY 1 desc NULLS LAST,2 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "de997993-17d9-4d7d-8927-4b3e662bac76",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:37:00.485Z",
      "Database": "dev",
      "Duration": 42828718,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 6, column 23\n  Position: 398",
      "HasResultSet": false,
      "Id": "126068e3-5d2e-4de1-a369-36caf845773a",
      "RedshiftPid": 1073848557,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:37:00.578Z",
          "Duration": 42828718,
          "HasResultSet": false,
          "Id": "126068e3-5d2e-4de1-a369-36caf845773a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:37:01.021Z"
        },
        {
          "CreatedAt": "2025-02-28T02:37:00.582Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 6, column 23\n  Position: 398",
          "HasResultSet": false,
          "Id": "126068e3-5d2e-4de1-a369-36caf845773a:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as \"val\",\n   (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as \"name\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two')))))) as rrec_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true\nORDER BY 1 desc NULLS LAST,2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:37:01.021Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:37:01.086Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:527:12)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "d"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "y"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "c__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 1 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))[1:1]),'[]'::JSONB) as "n"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 2 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 2 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "c__1"::DOUBLE PRECISION as "c", 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "c__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "m"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/lenses.spec.ts (434.663 s)
  ✓ named view plus named view - redshift (3363 ms)
  ✕ named view plus measure - redshift (100002 ms)
  ✕ dimension plus named view - redshift (100003 ms)
  ✕ where headed - redshift (100002 ms)
  ✓ named view plus named view in source - redshift (62814 ms)
  ✓ dimension plus named view in source - redshift (6794 ms)
  ✓ named view plus dimension in source - redshift (1469 ms)
  ✓ literal view plus named view - redshift (1568 ms)
  ✓ literal view plus measure - redshift (1467 ms)
  ✓ measure plus literal view - redshift (1393 ms)
  ✓ literal view plus named view in source - redshift (1430 ms)
  ✓ literal view plus measure in source - redshift (1462 ms)
  ✓ named view plus literal view - redshift (1600 ms)
  ✓ literal view plus literal view - redshift (1438 ms)
  ✓ three named views - redshift (1409 ms)
  ✕ nested no name - redshift (1482 ms)
  ✕ nested with name - redshift (1354 ms)
  ✕ nested no name with dimension head - redshift (1376 ms)
  ✕ nest dimension only - redshift (1339 ms)
  ✓ joined dimension in middle of refinements - redshift (4109 ms)
  ✕ nest joined dimension refined - redshift (1348 ms)
  ✓ joined dimension refined - redshift (1433 ms)
  ✕ nest joined dimension bare - redshift (1532 ms)
  ✓ joined dimension bare - redshift (1560 ms)
  ✕ joined dimension nest refinement - redshift (1352 ms)
  ✕ nest dimension only in refinement - redshift (1363 ms)
  ✓ view dimension only - redshift (1603 ms)
  ✓ view join dimension only - redshift (1465 ms)
  ✓ run dimension only - redshift (1444 ms)
  ✓ copy of view with lens - redshift (1425 ms)
  ✓ aggregate copy bug with only old refinement - redshift (1566 ms)
  ✓ aggregate copy bug with only old old refinement - redshift (1433 ms)
  ✓ but still need to be able to use as output field - redshift (8968 ms)
  ✓ aggregate copy bug - redshift (1571 ms)
  ○ skipped nest measure only in second stage - redshift
  ○ skipped second stage refinement chain - redshift
  ○ skipped second stage refinement chain in nest - redshift

  ● named view plus measure - redshift

    thrown: "Exceeded timeout of 100000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      47 |     `).malloyResultMatches(runtime, {n: 1, c: 1});
      48 |   });
    > 49 |   it(`named view plus measure - ${databaseName}`, async () => {
         |   ^
      50 |     await expect(`
      51 |       source: x is ${databaseName}.sql('SELECT 1 as ${q`n`}') extend {
      52 |         view: d is { group_by: n }

      at test/src/databases/all/lenses.spec.ts:49:3
          at Map.forEach (<anonymous>)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:38:21)

  ● dimension plus named view - redshift

    thrown: "Exceeded timeout of 100000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      56 |     `).malloyResultMatches(runtime, {n: 1, c: 1});
      57 |   });
    > 58 |   it(`dimension plus named view - ${databaseName}`, async () => {
         |   ^
      59 |     await expect(`
      60 |       source: x is ${databaseName}.sql('SELECT 1 as ${q`n`}') extend {
      61 |         view: m is { aggregate: c is count() }

      at test/src/databases/all/lenses.spec.ts:58:3
          at Map.forEach (<anonymous>)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:38:21)

  ● where headed - redshift

    thrown: "Exceeded timeout of 100000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      64 |     `).malloyResultMatches(runtime, {n: 1, c: 1});
      65 |   });
    > 66 |   it(`where headed - ${databaseName}`, async () => {
         |   ^
      67 |     await expect(`
      68 |       source: x is ${databaseName}.sql('SELECT 1 as ${q`n`}') extend {
      69 |         view: m is { aggregate: c is count() }

      at test/src/databases/all/lenses.spec.ts:66:3
          at Map.forEach (<anonymous>)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:38:21)

  ● nested no name - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c8a1ae6e-e262-4730-a309-43a4629de412",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:38.913Z",
      "Database": "dev",
      "Duration": 43397962,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91",
      "RedshiftPid": 1073848434,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:39.000Z",
          "Duration": 43397962,
          "HasResultSet": false,
          "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:39.459Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:39.003Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"d\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:39.459Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:39.524Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "d"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c8a1ae6e-e262-4730-a309-43a4629de412",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:38.913Z",
      "Database": "dev",
      "Duration": 43397962,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91",
      "RedshiftPid": 1073848434,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:39.000Z",
          "Duration": 43397962,
          "HasResultSet": false,
          "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:39.459Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:39.003Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"d\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:39.459Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:39.524Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:177:8)

  ● nested with name - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "76a4eb63-af41-4edc-b28c-04c359b69ea2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:40.274Z",
      "Database": "dev",
      "Duration": 45260752,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422",
      "RedshiftPid": 1073897591,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:40.374Z",
          "Duration": 45260752,
          "HasResultSet": false,
          "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:40.808Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:40.378Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"y\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:40.808Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:40.874Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "y"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "76a4eb63-af41-4edc-b28c-04c359b69ea2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:40.274Z",
      "Database": "dev",
      "Duration": 45260752,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422",
      "RedshiftPid": 1073897591,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:40.374Z",
          "Duration": 45260752,
          "HasResultSet": false,
          "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:40.808Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:40.378Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"y\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:40.808Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:40.874Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:188:8)

  ● nested no name with dimension head - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9327fc3f-913a-4faf-9c9d-77a03648ccb3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:41.648Z",
      "Database": "dev",
      "Duration": 43593596,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d",
      "RedshiftPid": 1073881188,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:41.748Z",
          "Duration": 43593596,
          "HasResultSet": false,
          "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:42.213Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:41.751Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"c__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:42.213Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:42.279Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "c__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9327fc3f-913a-4faf-9c9d-77a03648ccb3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:41.648Z",
      "Database": "dev",
      "Duration": 43593596,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d",
      "RedshiftPid": 1073881188,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:41.748Z",
          "Duration": 43593596,
          "HasResultSet": false,
          "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:42.213Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:41.751Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"c__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:42.213Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:42.279Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:198:8)

  ● nest dimension only - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "557703c2-07f4-4bb6-9fe0-97350341af39",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:42.977Z",
      "Database": "dev",
      "Duration": 43564386,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 334",
      "HasResultSet": false,
      "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3",
      "RedshiftPid": 1073799267,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:43.092Z",
          "Duration": 43564386,
          "HasResultSet": false,
          "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:43.513Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:43.096Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 334",
          "HasResultSet": false,
          "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:43.513Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:43.579Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "557703c2-07f4-4bb6-9fe0-97350341af39",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:42.977Z",
      "Database": "dev",
      "Duration": 43564386,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 334",
      "HasResultSet": false,
      "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3",
      "RedshiftPid": 1073799267,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:43.092Z",
          "Duration": 43564386,
          "HasResultSet": false,
          "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:43.513Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:43.096Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 334",
          "HasResultSet": false,
          "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:43.513Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:43.579Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:208:8)

  ● nest joined dimension refined - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "327c0907-18d2-46db-aa62-16596d218376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:48.450Z",
      "Database": "dev",
      "Duration": 44223343,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
      "HasResultSet": false,
      "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed",
      "RedshiftPid": 1073938556,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:48.543Z",
          "Duration": 44223343,
          "HasResultSet": false,
          "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:48.985Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:48.546Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
          "HasResultSet": false,
          "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 1 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))[1:1]),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:48.985Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:49.050Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 1 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))[1:1]),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "327c0907-18d2-46db-aa62-16596d218376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:48.450Z",
      "Database": "dev",
      "Duration": 44223343,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
      "HasResultSet": false,
      "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed",
      "RedshiftPid": 1073938556,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:48.543Z",
          "Duration": 44223343,
          "HasResultSet": false,
          "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:48.985Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:48.546Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
          "HasResultSet": false,
          "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 1 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))[1:1]),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:48.985Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:49.050Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:228:8)

  ● nest joined dimension bare - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9ef2e81-0957-4d06-94b7-87083a87d2c6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:51.358Z",
      "Database": "dev",
      "Duration": 45263836,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
      "HasResultSet": false,
      "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118",
      "RedshiftPid": 1073750139,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:51.475Z",
          "Duration": 45263836,
          "HasResultSet": false,
          "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:51.925Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:51.478Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
          "HasResultSet": false,
          "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 2 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:51.925Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:51.990Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 2 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9ef2e81-0957-4d06-94b7-87083a87d2c6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:51.358Z",
      "Database": "dev",
      "Duration": 45263836,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
      "HasResultSet": false,
      "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118",
      "RedshiftPid": 1073750139,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:51.475Z",
          "Duration": 45263836,
          "HasResultSet": false,
          "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:51.925Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:51.478Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
          "HasResultSet": false,
          "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 2 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:51.925Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:51.990Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:248:8)

  ● joined dimension nest refinement - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a984c2e6-5436-4605-b924-942a78d9a678",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:54.328Z",
      "Database": "dev",
      "Duration": 44295348,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 488",
      "HasResultSet": false,
      "Id": "cb37271e-5950-499f-91a3-416a8ee4b855",
      "RedshiftPid": 1073971323,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:54.419Z",
          "Duration": 44295348,
          "HasResultSet": false,
          "Id": "cb37271e-5950-499f-91a3-416a8ee4b855:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:54.871Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:54.422Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 488",
          "HasResultSet": false,
          "Id": "cb37271e-5950-499f-91a3-416a8ee4b855:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 2 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"c__1\"::DOUBLE PRECISION as \"c\", \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"c__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"m\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:54.871Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:54.928Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 2 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "c__1"::DOUBLE PRECISION as "c", 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "c__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "m"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a984c2e6-5436-4605-b924-942a78d9a678",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:54.328Z",
      "Database": "dev",
      "Duration": 44295348,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 488",
      "HasResultSet": false,
      "Id": "cb37271e-5950-499f-91a3-416a8ee4b855",
      "RedshiftPid": 1073971323,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:54.419Z",
          "Duration": 44295348,
          "HasResultSet": false,
          "Id": "cb37271e-5950-499f-91a3-416a8ee4b855:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:54.871Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:54.422Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 488",
          "HasResultSet": false,
          "Id": "cb37271e-5950-499f-91a3-416a8ee4b855:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 2 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"c__1\"::DOUBLE PRECISION as \"c\", \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"c__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"m\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:54.871Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:54.928Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:266:8)

  ● nest dimension only in refinement - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "03c7b611-149d-42f4-8153-5f8477ae42cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:55.681Z",
      "Database": "dev",
      "Duration": 44338044,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 15, column 22\n  Position: 304",
      "HasResultSet": false,
      "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b",
      "RedshiftPid": 1073889397,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:55.779Z",
          "Duration": 44338044,
          "HasResultSet": false,
          "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:56.205Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:55.783Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 15, column 22\n  Position: 304",
          "HasResultSet": false,
          "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:56.205Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:56.271Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "03c7b611-149d-42f4-8153-5f8477ae42cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:55.681Z",
      "Database": "dev",
      "Duration": 44338044,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 15, column 22\n  Position: 304",
      "HasResultSet": false,
      "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b",
      "RedshiftPid": 1073889397,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:55.779Z",
          "Duration": 44338044,
          "HasResultSet": false,
          "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:56.205Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:55.783Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 15, column 22\n  Position: 304",
          "HasResultSet": false,
          "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:56.205Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:56.271Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:286:8)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "x__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "x__1"::DOUBLE PRECISION as "x"
        ) as __x)  ORDER BY  "x__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "foo"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(0,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "foo",
       1 as "bar",
       JSONB_EXTRACT_PATH_TEXT(arr_0,'value')::double precision as "each"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3))) as v))) as arr_0 ON true
    GROUP BY 2,3
    ORDER BY 1 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    SELECT
      "fieldName",
      "fieldPath",
      "fieldType",
      COALESCE("fieldValue", "fieldRange") as "fieldValue",
      "weight"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    SELECT
      "fieldName",
      "fieldPath",
      "fieldType",
      COALESCE("fieldValue", "fieldRange") as "fieldValue",
      "weight"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName"
    FROM __stage1 as base
    WHERE base."fieldName" IS NOT NULL
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/composite_sources.spec.ts (84.217 s)
  redshift
    ✓ basic composite usage (3561 ms)
    ✓ composite usage multistage (1449 ms)
    ✓ composite view multistage (1417 ms)
    ✓ composite source used in join (4698 ms)
    ✓ composite field from joined source used in join on (4792 ms)
    ✓ composite field from joining source used in join on (4642 ms)
    ✓ query against composite resolves nested composite source even when no composite fields (1595 ms)
    ✓ composite field used in view (1552 ms)
    ✓ composite field used in view refined with scalar (5821 ms)
    ✓ composite field used in view refined with literal view (1481 ms)
    ✓ composite field used in refined query (1504 ms)
    ✓ composite of a composite (4654 ms)
    ✓ definitions from composite extension carry through (1642 ms)
    ✓ filters from composite extension carry through (4689 ms)
    ✕ composite of a composite where greedy is bad- redshift (4765 ms)
    ✓ composite with parameters (1583 ms)
    ✓ issue where measure defined on composite source has the wrong structPath (4588 ms)
    ✓ issue where query against composite source with no composite field usage does not resolve the source (1592 ms)
    ✕ reference composite field in nest (1456 ms)
    ✓ composite with select * (1429 ms)
    ✕ composite with each (1440 ms)
    ✓ complex nesting composite without join (4625 ms)
    ✓ complex nesting composite with join -- literal view (1412 ms)
    ✓ complex nesting composite with join -- double extend to define view (1472 ms)
    ✓ complex nesting composite with join -- defined view (1400 ms)
    index queries against composite sources
      ✕ index query selects second input (1426 ms)
      ✕ index query selects first input (1395 ms)
      ✕ index query resolves when two stages (1419 ms)

  ● redshift › composite of a composite where greedy is bad- redshift

    SQL Generated:
      SELECT 
         1.3 as "foo",
         2.3 as "bar",
         3.3 as "baz"
      FROM "malloytest"."state_facts" as base
      GROUP BY 1,2,3
      ORDER BY 1 asc NULLS LAST
      
    Expected {foo: 1.3} Got: Non Numeric '"1.3"'
    Expected {bar: 2.3} Got: Non Numeric '"2.3"'
    Expected {baz: 3.3} Got: Non Numeric '"3.3"'

      215 |       // so the second input source is used instead
      216 |       run: x -> { group_by: foo, bar, baz }
    > 217 |     `).malloyResultMatches(runtime, {foo: 1.3, bar: 2.3, baz: 3.3});
          |        ^
      218 |   });
      219 |   it('composite with parameters', async () => {
      220 |     await expect(`

      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:217:8)

  ● redshift › reference composite field in nest

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "df867ca8-15d9-4a3d-8b67-dd2083c28c1e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:23.339Z",
      "Database": "dev",
      "Duration": 52619844,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 336",
      "HasResultSet": false,
      "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d",
      "RedshiftPid": 1073807482,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:23.438Z",
          "Duration": 52619844,
          "HasResultSet": false,
          "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:23.917Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:23.441Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 336",
          "HasResultSet": false,
          "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"x__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"x__1\"::DOUBLE PRECISION as \"x\"\n    ) as __x)  ORDER BY  \"x__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"foo\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:23.917Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:23.982Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "x__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "x__1"::DOUBLE PRECISION as "x"
        ) as __x)  ORDER BY  "x__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "foo"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "df867ca8-15d9-4a3d-8b67-dd2083c28c1e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:23.339Z",
      "Database": "dev",
      "Duration": 52619844,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 336",
      "HasResultSet": false,
      "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d",
      "RedshiftPid": 1073807482,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:23.438Z",
          "Duration": 52619844,
          "HasResultSet": false,
          "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:23.917Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:23.441Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 336",
          "HasResultSet": false,
          "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"x__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"x__1\"::DOUBLE PRECISION as \"x\"\n    ) as __x)  ORDER BY  \"x__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"foo\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:23.917Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:23.982Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:262:8)

  ● redshift › composite with each

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2c9346fc-1496-4274-acae-2c4d608b5bb0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:26.229Z",
      "Database": "dev",
      "Duration": 44018685,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca",
      "RedshiftPid": 1073741936,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:26.320Z",
          "Duration": 44018685,
          "HasResultSet": false,
          "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:26.765Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:26.323Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(0,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"foo\",\n   1 as \"bar\",\n   JSONB_EXTRACT_PATH_TEXT(arr_0,'value')::double precision as \"each\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3))) as v))) as arr_0 ON true\nGROUP BY 2,3\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:26.765Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:26.831Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(0,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "foo",
       1 as "bar",
       JSONB_EXTRACT_PATH_TEXT(arr_0,'value')::double precision as "each"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3))) as v))) as arr_0 ON true
    GROUP BY 2,3
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2c9346fc-1496-4274-acae-2c4d608b5bb0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:26.229Z",
      "Database": "dev",
      "Duration": 44018685,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca",
      "RedshiftPid": 1073741936,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:26.320Z",
          "Duration": 44018685,
          "HasResultSet": false,
          "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:26.765Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:26.323Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(0,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"foo\",\n   1 as \"bar\",\n   JSONB_EXTRACT_PATH_TEXT(arr_0,'value')::double precision as \"each\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3))) as v))) as arr_0 ON true\nGROUP BY 2,3\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:26.765Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:26.831Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:285:8)

  ● redshift › index queries against composite sources › index query selects second input

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "fdec6dcf-3750-4b2f-8080-8e240f5c06df",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:36.561Z",
      "Database": "dev",
      "Duration": 45520485,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec",
      "RedshiftPid": 1073848426,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:36.661Z",
          "Duration": 45520485,
          "HasResultSet": false,
          "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:37.113Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:36.665Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:37.113Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:37.179Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    SELECT
      "fieldName",
      "fieldPath",
      "fieldType",
      COALESCE("fieldValue", "fieldRange") as "fieldValue",
      "weight"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "fdec6dcf-3750-4b2f-8080-8e240f5c06df",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:36.561Z",
      "Database": "dev",
      "Duration": 45520485,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec",
      "RedshiftPid": 1073848426,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:36.661Z",
          "Duration": 45520485,
          "HasResultSet": false,
          "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:37.113Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:36.665Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:37.113Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:37.179Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:381:10)

  ● redshift › index queries against composite sources › index query selects first input

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e72a618a-e941-44f0-b9bb-1eb6ada319e5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:37.943Z",
      "Database": "dev",
      "Duration": 51893247,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14",
      "RedshiftPid": 1073897583,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:38.045Z",
          "Duration": 51893247,
          "HasResultSet": false,
          "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:38.529Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:38.048Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:38.529Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:38.593Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    SELECT
      "fieldName",
      "fieldPath",
      "fieldType",
      COALESCE("fieldValue", "fieldRange") as "fieldValue",
      "weight"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e72a618a-e941-44f0-b9bb-1eb6ada319e5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:37.943Z",
      "Database": "dev",
      "Duration": 51893247,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14",
      "RedshiftPid": 1073897583,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:38.045Z",
          "Duration": 51893247,
          "HasResultSet": false,
          "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:38.529Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:38.048Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:38.529Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:38.593Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:391:10)

  ● redshift › index queries against composite sources › index query resolves when two stages

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "47ea4f6b-28f8-457d-b675-b48d679e721c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:39.377Z",
      "Database": "dev",
      "Duration": 45027017,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7",
      "RedshiftPid": 1073799293,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:39.473Z",
          "Duration": 45027017,
          "HasResultSet": false,
          "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:39.892Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:39.476Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\"\nFROM __stage1 as base\nWHERE base.\"fieldName\" IS NOT NULL\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:39.892Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:39.958Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName"
    FROM __stage1 as base
    WHERE base."fieldName" IS NOT NULL
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "47ea4f6b-28f8-457d-b675-b48d679e721c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:39.377Z",
      "Database": "dev",
      "Duration": 45027017,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7",
      "RedshiftPid": 1073799293,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:39.473Z",
          "Duration": 45027017,
          "HasResultSet": false,
          "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:39.892Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:39.476Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\"\nFROM __stage1 as base\nWHERE base.\"fieldName\" IS NOT NULL\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:39.892Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:39.958Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:401:10)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" LIKE 'A%'
      GROUP BY 1,2,3
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "somthing"
      FROM __stage0
      GROUP BY 1
    )
    , __stage2 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COUNT(DISTINCT base."__distinct_key")
          END as "c__0",
        CASE WHEN group_set=1 THEN
          JSONB_EXTRACT_PATH_TEXT(somthing_0,'state')
          END as "state__1"
      FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
       LEFT JOIN __stage1 AS a_states_0
        ON a_states_0."state"=base."state"
      LEFT JOIN JSONB_ARRAY_ELEMENTS(a_states_0."somthing") as somthing_0 ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__0" as "state",
      (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state"
        ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "a"
    FROM __stage2
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 5

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(CASE WHEN base."state"='CA' THEN sf_0."births" END,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(sf_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(sf_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "x"
    FROM "malloytest"."state_facts" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS sf_0
      ON sf_0."state"=base."state"

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/join.spec.ts (53.846 s)
  redshift
    ✓ model source refine join (4854 ms)
    ✓ model source refine in query join (1417 ms)
    ✓ model: join fact table query (7989 ms)
    ✓ model: source based on query (1638 ms)
    ✓ model: funnel - merge two queries (5766 ms)
    ✓ model: modeled funnel (1492 ms)
    ✓ model: modeled funnel2 (1456 ms)
    ✓ model: double_pipe (1584 ms)
    ✕ model: unnest is left join (2940 ms)
    ✓ All joins at the same level (6342 ms)
    ✓ join issue440 (1501 ms)
    ✕ join issue1092 (1614 ms)
    ✓ always join in query (1548 ms)
    ✓ not always join in extend (1391 ms)
    ✓ always inner join has side effects (in group_by) (1580 ms)

  ● redshift › model: unnest is left join

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2ffae9ae-7bd7-40b3-8058-e7d898b9f9b2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:46:19.206Z",
      "Database": "dev",
      "Duration": 44046876,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 18\n  Position: 457",
      "HasResultSet": false,
      "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41",
      "RedshiftPid": 1073987707,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:46:19.331Z",
          "Duration": 44046876,
          "HasResultSet": false,
          "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:46:19.794Z"
        },
        {
          "CreatedAt": "2025-02-28T02:46:19.335Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 18\n  Position: 457",
          "HasResultSet": false,
          "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" LIKE 'A%'\n  GROUP BY 1,2,3\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"somthing\"\n  FROM __stage0\n  GROUP BY 1\n)\n, __stage2 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(DISTINCT base.\"__distinct_key\")\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      JSONB_EXTRACT_PATH_TEXT(somthing_0,'state')\n      END as \"state__1\"\n  FROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n   LEFT JOIN __stage1 AS a_states_0\n    ON a_states_0.\"state\"=base.\"state\"\n  LEFT JOIN JSONB_ARRAY_ELEMENTS(a_states_0.\"somthing\") as somthing_0 ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__0\" as \"state\",\n  (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\"\n    ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"a\"\nFROM __stage2\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 5\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:46:19.794Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:46:19.860Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" LIKE 'A%'
      GROUP BY 1,2,3
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "somthing"
      FROM __stage0
      GROUP BY 1
    )
    , __stage2 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COUNT(DISTINCT base."__distinct_key")
          END as "c__0",
        CASE WHEN group_set=1 THEN
          JSONB_EXTRACT_PATH_TEXT(somthing_0,'state')
          END as "state__1"
      FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
       LEFT JOIN __stage1 AS a_states_0
        ON a_states_0."state"=base."state"
      LEFT JOIN JSONB_ARRAY_ELEMENTS(a_states_0."somthing") as somthing_0 ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__0" as "state",
      (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state"
        ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "a"
    FROM __stage2
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 5

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2ffae9ae-7bd7-40b3-8058-e7d898b9f9b2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:46:19.206Z",
      "Database": "dev",
      "Duration": 44046876,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 18\n  Position: 457",
      "HasResultSet": false,
      "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41",
      "RedshiftPid": 1073987707,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:46:19.331Z",
          "Duration": 44046876,
          "HasResultSet": false,
          "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:46:19.794Z"
        },
        {
          "CreatedAt": "2025-02-28T02:46:19.335Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 18\n  Position: 457",
          "HasResultSet": false,
          "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" LIKE 'A%'\n  GROUP BY 1,2,3\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"somthing\"\n  FROM __stage0\n  GROUP BY 1\n)\n, __stage2 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(DISTINCT base.\"__distinct_key\")\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      JSONB_EXTRACT_PATH_TEXT(somthing_0,'state')\n      END as \"state__1\"\n  FROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n   LEFT JOIN __stage1 AS a_states_0\n    ON a_states_0.\"state\"=base.\"state\"\n  LEFT JOIN JSONB_ARRAY_ELEMENTS(a_states_0.\"somthing\") as somthing_0 ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__0\" as \"state\",\n  (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\"\n    ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"a\"\nFROM __stage2\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 5\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:46:19.794Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:46:19.860Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/join.spec.ts:221:10)

  ● redshift › join issue1092

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "39aba9a7-b6a9-4a85-b250-44c7829bcd35",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:46:28.646Z",
      "Database": "dev",
      "Duration": 3982384,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140",
      "RedshiftPid": 1073971301,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:46:28.765Z",
          "Duration": 3982384,
          "HasResultSet": false,
          "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:46:29.248Z"
        },
        {
          "CreatedAt": "2025-02-28T02:46:28.768Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(CASE WHEN base.\"state\"='CA' THEN sf_0.\"births\" END,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(sf_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(sf_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"x\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS sf_0\n  ON sf_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:46:29.248Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:46:29.323Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(CASE WHEN base."state"='CA' THEN sf_0."births" END,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(sf_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(sf_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "x"
    FROM "malloytest"."state_facts" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS sf_0
      ON sf_0."state"=base."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "39aba9a7-b6a9-4a85-b250-44c7829bcd35",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:46:28.646Z",
      "Database": "dev",
      "Duration": 3982384,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140",
      "RedshiftPid": 1073971301,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:46:28.765Z",
          "Duration": 3982384,
          "HasResultSet": false,
          "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:46:29.248Z"
        },
        {
          "CreatedAt": "2025-02-28T02:46:28.768Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(CASE WHEN base.\"state\"='CA' THEN sf_0.\"births\" END,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(sf_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(sf_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"x\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS sf_0\n  ON sf_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:46:29.248Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:46:29.323Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/join.spec.ts:267:8)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          UPPER(base."popular_name")
          END as "select__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "fetch__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    , __stage1 AS (
      SELECT
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "select__1" as "select", 
          "fetch__1"::DOUBLE PRECISION as "fetch"
          ) as __x)  ORDER BY  "fetch__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "withx"
      FROM __stage0
    )
    SELECT 
       LOWER(JSONB_EXTRACT_PATH_TEXT(withx_0,'select')) as "withxz",
       JSONB_EXTRACT_PATH_TEXT(withx_0,'fetch')::double precision as "fetch"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."withx") as withx_0 ON true

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."manufacturer" as "manufacturer__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "model_count__0",
        CASE WHEN group_set=1 THEN
          base."manufacturer"
          END as "manufacturer__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "model_count__1",
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>100 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft_models" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST("manufacturer__0" as VARCHAR)) as __shaving__0 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)
      ))
    , __stage3 AS (
      SELECT
        "manufacturer__0" as "manufacturer",
        (ARRAY_AGG("model_count__0") FILTER (WHERE group_set=0 AND "model_count__0" IS NOT NULL))[1] as "model_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "manufacturer__1" as "manufacturer", 
          "model_count__1"::DOUBLE PRECISION as "model_count"
          ) as __x)  ORDER BY  "model_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as "l"
      FROM __stage2
      GROUP BY 1
    )
    SELECT 
       base."manufacturer" as "manufacturer",
       base."model_count" as "model_count"
    FROM __stage3 as base
    ORDER BY 2 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/orderby.spec.ts (52.672 s)
  redshift
    ✕ boolean type - redshift (9937 ms)
    ✕ boolean in pipeline - redshift (4664 ms)
    ✓ filtered measures in model are aggregates #352 - redshift (4714 ms)
    ✓ reserved words are quoted - redshift (1589 ms)
    ✕ reserved words are quoted in turtles - redshift (2955 ms)
    ✓ aggregate and scalar conditions - redshift (1456 ms)
    ✓ modeled having simple - redshift (5829 ms)
    ✕ modeled having complex - redshift (1388 ms)
    ✓ turtle references joined element - redshift (9761 ms)
    ○ skipped reserved words in structure definitions

  ● redshift › boolean type - redshift

    SQL Generated:
      SELECT 
         base."seats">=20 as "big",
         COUNT(1) as "model_count"
      FROM "malloytest"."aircraft_models" as base
      GROUP BY 1
      ORDER BY 2 desc NULLS LAST
      
    Expected {big: false} Got: null

      45 |         aggregate: model_count is count()
      46 |       }
    > 47 |     `).malloyResultMatches(orderByModel, {
         |        ^
      48 |       big: booleanResult(false, databaseName),
      49 |       model_count: 58451,
      50 |     });

      at Object.<anonymous> (test/src/databases/all/orderby.spec.ts:47:8)

  ● redshift › boolean in pipeline - redshift

    SQL Generated:
      WITH __stage0 AS (
        SELECT 
           base."manufacturer" as "manufacturer",
           base."seats">=21 as "big",
           COUNT(1) as "model_count"
        FROM "malloytest"."aircraft_models" as base
        GROUP BY 1,2
      )
      SELECT 
         base."big" as "big",
         COALESCE(SUM(base."model_count"),0) as "model_count"
      FROM __stage0 as base
      GROUP BY 1
      ORDER BY 2 desc NULLS LAST
      
    Expected {big: false} Got: null

      62 |         aggregate: model_count is model_count.sum()
      63 |       }
    > 64 |     `).malloyResultMatches(orderByModel, {
         |        ^
      65 |       big: booleanResult(false, databaseName),
      66 |       model_count: 58500,
      67 |     });

      at Object.<anonymous> (test/src/databases/all/orderby.spec.ts:64:8)

  ● redshift › reserved words are quoted in turtles - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "16d27f7a-841a-4493-8d32-1a2c9bca57d7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:47:07.462Z",
      "Database": "dev",
      "Duration": 45025536,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 19, column 18\n  Position: 501",
      "HasResultSet": false,
      "Id": "ff587126-673c-4272-9ace-11512a4881fe",
      "RedshiftPid": 1073905772,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:47:07.554Z",
          "Duration": 45025536,
          "HasResultSet": false,
          "Id": "ff587126-673c-4272-9ace-11512a4881fe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:47:07.986Z"
        },
        {
          "CreatedAt": "2025-02-28T02:47:07.558Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 19, column 18\n  Position: 501",
          "HasResultSet": false,
          "Id": "ff587126-673c-4272-9ace-11512a4881fe:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      UPPER(base.\"popular_name\")\n      END as \"select__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"fetch__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\n, __stage1 AS (\n  SELECT\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"select__1\" as \"select\", \n      \"fetch__1\"::DOUBLE PRECISION as \"fetch\"\n      ) as __x)  ORDER BY  \"fetch__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"withx\"\n  FROM __stage0\n)\nSELECT \n   LOWER(JSONB_EXTRACT_PATH_TEXT(withx_0,'select')) as \"withxz\",\n   JSONB_EXTRACT_PATH_TEXT(withx_0,'fetch')::double precision as \"fetch\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"withx\") as withx_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:47:07.986Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:47:08.052Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          UPPER(base."popular_name")
          END as "select__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "fetch__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    , __stage1 AS (
      SELECT
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "select__1" as "select", 
          "fetch__1"::DOUBLE PRECISION as "fetch"
          ) as __x)  ORDER BY  "fetch__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "withx"
      FROM __stage0
    )
    SELECT 
       LOWER(JSONB_EXTRACT_PATH_TEXT(withx_0,'select')) as "withxz",
       JSONB_EXTRACT_PATH_TEXT(withx_0,'fetch')::double precision as "fetch"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."withx") as withx_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "16d27f7a-841a-4493-8d32-1a2c9bca57d7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:47:07.462Z",
      "Database": "dev",
      "Duration": 45025536,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 19, column 18\n  Position: 501",
      "HasResultSet": false,
      "Id": "ff587126-673c-4272-9ace-11512a4881fe",
      "RedshiftPid": 1073905772,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:47:07.554Z",
          "Duration": 45025536,
          "HasResultSet": false,
          "Id": "ff587126-673c-4272-9ace-11512a4881fe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:47:07.986Z"
        },
        {
          "CreatedAt": "2025-02-28T02:47:07.558Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 19, column 18\n  Position: 501",
          "HasResultSet": false,
          "Id": "ff587126-673c-4272-9ace-11512a4881fe:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      UPPER(base.\"popular_name\")\n      END as \"select__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"fetch__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\n, __stage1 AS (\n  SELECT\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"select__1\" as \"select\", \n      \"fetch__1\"::DOUBLE PRECISION as \"fetch\"\n      ) as __x)  ORDER BY  \"fetch__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"withx\"\n  FROM __stage0\n)\nSELECT \n   LOWER(JSONB_EXTRACT_PATH_TEXT(withx_0,'select')) as \"withxz\",\n   JSONB_EXTRACT_PATH_TEXT(withx_0,'fetch')::double precision as \"fetch\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"withx\") as withx_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:47:07.986Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:47:08.052Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/orderby.spec.ts:104:8)

  ● redshift › modeled having complex - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c5658ef2-967d-4bc2-9f0b-7dbf57154fb1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:47:16.125Z",
      "Database": "dev",
      "Duration": 54285845,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"model_count__0\") FILTER\", at line 34, column 34\n  Position: 962",
      "HasResultSet": false,
      "Id": "650f8a07-8217-41ae-a813-6d094d0d718b",
      "RedshiftPid": 1073799267,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:47:16.231Z",
          "Duration": 54285845,
          "HasResultSet": false,
          "Id": "650f8a07-8217-41ae-a813-6d094d0d718b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:47:16.681Z"
        },
        {
          "CreatedAt": "2025-02-28T02:47:16.235Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"model_count__0\") FILTER\", at line 34, column 34\n  Position: 962",
          "HasResultSet": false,
          "Id": "650f8a07-8217-41ae-a813-6d094d0d718b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"manufacturer\" as \"manufacturer__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"model_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"manufacturer\"\n      END as \"manufacturer__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"model_count__1\",\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>100 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft_models\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST(\"manufacturer__0\" as VARCHAR)) as __shaving__0 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)\n  ))\n, __stage3 AS (\n  SELECT\n    \"manufacturer__0\" as \"manufacturer\",\n    (ARRAY_AGG(\"model_count__0\") FILTER (WHERE group_set=0 AND \"model_count__0\" IS NOT NULL))[1] as \"model_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"manufacturer__1\" as \"manufacturer\", \n      \"model_count__1\"::DOUBLE PRECISION as \"model_count\"\n      ) as __x)  ORDER BY  \"model_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as \"l\"\n  FROM __stage2\n  GROUP BY 1\n)\nSELECT \n   base.\"manufacturer\" as \"manufacturer\",\n   base.\"model_count\" as \"model_count\"\nFROM __stage3 as base\nORDER BY 2 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:47:16.681Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:47:16.746Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."manufacturer" as "manufacturer__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "model_count__0",
        CASE WHEN group_set=1 THEN
          base."manufacturer"
          END as "manufacturer__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "model_count__1",
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>100 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft_models" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST("manufacturer__0" as VARCHAR)) as __shaving__0 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)
      ))
    , __stage3 AS (
      SELECT
        "manufacturer__0" as "manufacturer",
        (ARRAY_AGG("model_count__0") FILTER (WHERE group_set=0 AND "model_count__0" IS NOT NULL))[1] as "model_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "manufacturer__1" as "manufacturer", 
          "model_count__1"::DOUBLE PRECISION as "model_count"
          ) as __x)  ORDER BY  "model_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as "l"
      FROM __stage2
      GROUP BY 1
    )
    SELECT 
       base."manufacturer" as "manufacturer",
       base."model_count" as "model_count"
    FROM __stage3 as base
    ORDER BY 2 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c5658ef2-967d-4bc2-9f0b-7dbf57154fb1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:47:16.125Z",
      "Database": "dev",
      "Duration": 54285845,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"model_count__0\") FILTER\", at line 34, column 34\n  Position: 962",
      "HasResultSet": false,
      "Id": "650f8a07-8217-41ae-a813-6d094d0d718b",
      "RedshiftPid": 1073799267,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:47:16.231Z",
          "Duration": 54285845,
          "HasResultSet": false,
          "Id": "650f8a07-8217-41ae-a813-6d094d0d718b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:47:16.681Z"
        },
        {
          "CreatedAt": "2025-02-28T02:47:16.235Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"model_count__0\") FILTER\", at line 34, column 34\n  Position: 962",
          "HasResultSet": false,
          "Id": "650f8a07-8217-41ae-a813-6d094d0d718b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"manufacturer\" as \"manufacturer__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"model_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"manufacturer\"\n      END as \"manufacturer__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"model_count__1\",\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>100 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft_models\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST(\"manufacturer__0\" as VARCHAR)) as __shaving__0 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)\n  ))\n, __stage3 AS (\n  SELECT\n    \"manufacturer__0\" as \"manufacturer\",\n    (ARRAY_AGG(\"model_count__0\") FILTER (WHERE group_set=0 AND \"model_count__0\" IS NOT NULL))[1] as \"model_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"manufacturer__1\" as \"manufacturer\", \n      \"model_count__1\"::DOUBLE PRECISION as \"model_count\"\n      ) as __x)  ORDER BY  \"model_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as \"l\"\n  FROM __stage2\n  GROUP BY 1\n)\nSELECT \n   base.\"manufacturer\" as \"manufacturer\",\n   base.\"model_count\" as \"model_count\"\nFROM __stage3 as base\nORDER BY 2 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:47:16.681Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:47:16.746Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/orderby.spec.ts:163:10)

PASS test/src/databases/all/sql_expressions.spec.ts (24.144 s)
  ✓ sql expression with turducken - redshift (4714 ms)
  ✓ sql expression in second of two queries in same block, dependent on first query - redshift (3203 ms)
  ✓ sql expression in other sql expression - redshift (4325 ms)
  ✓ run sql expression as query - redshift (1508 ms)

  console.log
    [
      'DROP TABLE IF EXISTS tt8f20bd7b3cab6c2cbe6d4613a9f91a09;',
      'CREATE TEMP TABLE tt8f20bd7b3cab6c2cbe6d4613a9f91a09 AS WITH __stage0 AS (\n' +
        '  SELECT * from (SELECT * FROM "malloytest"."airports" TABLESAMPLE SYSTEM_ROWS(50000)) as x limit 100000 )\n' +
        ', __stage1 AS (\n' +
        '  SELECT\n' +
        '    group_set,\n' +
        '    CASE group_set\n' +
        "      WHEN 0 THEN 'act_date'\n" +
        "      WHEN 1 THEN 'aero_cht'\n" +
        "      WHEN 2 THEN 'c_ldg_rts'\n" +
        "      WHEN 3 THEN 'cbd_dir'\n" +
        "      WHEN 4 THEN 'cbd_dist'\n" +
        "      WHEN 5 THEN 'cert'\n" +
        "      WHEN 6 THEN 'city'\n" +
        "      WHEN 7 THEN 'cntl_twr'\n" +
        "      WHEN 8 THEN 'code'\n" +
        "      WHEN 9 THEN 'county'\n" +
        "      WHEN 10 THEN 'cust_intl'\n" +
        "      WHEN 11 THEN 'elevation'\n" +
        "      WHEN 12 THEN 'faa_dist'\n" +
        "      WHEN 13 THEN 'faa_region'\n" +
        "      WHEN 14 THEN 'fac_type'\n" +
        "      WHEN 15 THEN 'fac_use'\n" +
        "      WHEN 16 THEN 'fed_agree'\n" +
        "      WHEN 17 THEN 'full_name'\n" +
        "      WHEN 18 THEN 'id'\n" +
        "      WHEN 19 THEN 'joint_use'\n" +
        "      WHEN 20 THEN 'latitude'\n" +
        "      WHEN 21 THEN 'longitude'\n" +
        "      WHEN 22 THEN 'major'\n" +
        "      WHEN 23 THEN 'mil_rts'\n" +
        "      WHEN 24 THEN 'own_type'\n" +
        "      WHEN 25 THEN 'site_number'\n" +
        "      WHEN 26 THEN 'state'\n" +
        '    END as "fieldName",\n' +
        '    CASE group_set\n' +
        "      WHEN 0 THEN 'act_date'\n" +
        "      WHEN 1 THEN 'aero_cht'\n" +
        "      WHEN 2 THEN 'c_ldg_rts'\n" +
        "      WHEN 3 THEN 'cbd_dir'\n" +
        "      WHEN 4 THEN 'cbd_dist'\n" +
        "      WHEN 5 THEN 'cert'\n" +
        "      WHEN 6 THEN 'city'\n" +
        "      WHEN 7 THEN 'cntl_twr'\n" +
        "      WHEN 8 THEN 'code'\n" +
        "      WHEN 9 THEN 'county'\n" +
        "      WHEN 10 THEN 'cust_intl'\n" +
        "      WHEN 11 THEN 'elevation'\n" +
        "      WHEN 12 THEN 'faa_dist'\n" +
        "      WHEN 13 THEN 'faa_region'\n" +
        "      WHEN 14 THEN 'fac_type'\n" +
        "      WHEN 15 THEN 'fac_use'\n" +
        "      WHEN 16 THEN 'fed_agree'\n" +
        "      WHEN 17 THEN 'full_name'\n" +
        "      WHEN 18 THEN 'id'\n" +
        "      WHEN 19 THEN 'joint_use'\n" +
        "      WHEN 20 THEN 'latitude'\n" +
        "      WHEN 21 THEN 'longitude'\n" +
        "      WHEN 22 THEN 'major'\n" +
        "      WHEN 23 THEN 'mil_rts'\n" +
        "      WHEN 24 THEN 'own_type'\n" +
        "      WHEN 25 THEN 'site_number'\n" +
        "      WHEN 26 THEN 'state'\n" +
        '    END as "fieldPath",\n' +
        '    CASE group_set\n' +
        "      WHEN 0 THEN 'string'\n" +
        "      WHEN 1 THEN 'string'\n" +
        "      WHEN 2 THEN 'string'\n" +
        "      WHEN 3 THEN 'string'\n" +
        "      WHEN 4 THEN 'number'\n" +
        "      WHEN 5 THEN 'string'\n" +
        "      WHEN 6 THEN 'string'\n" +
        "      WHEN 7 THEN 'string'\n" +
        "      WHEN 8 THEN 'string'\n" +
        "      WHEN 9 THEN 'string'\n" +
        "      WHEN 10 THEN 'string'\n" +
        "      WHEN 11 THEN 'number'\n" +
        "      WHEN 12 THEN 'string'\n" +
        "      WHEN 13 THEN 'string'\n" +
        "      WHEN 14 THEN 'string'\n" +
        "      WHEN 15 THEN 'string'\n" +
        "      WHEN 16 THEN 'string'\n" +
        "      WHEN 17 THEN 'string'\n" +
        "      WHEN 18 THEN 'number'\n" +
        "      WHEN 19 THEN 'string'\n" +
        "      WHEN 20 THEN 'number'\n" +
        "      WHEN 21 THEN 'number'\n" +
        "      WHEN 22 THEN 'string'\n" +
        "      WHEN 23 THEN 'string'\n" +
        "      WHEN 24 THEN 'string'\n" +
        "      WHEN 25 THEN 'string'\n" +
        "      WHEN 26 THEN 'string'\n" +
        '    END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n' +
        '      WHEN 0 THEN base."act_date"\n' +
        '      WHEN 1 THEN base."aero_cht"\n' +
        '      WHEN 2 THEN base."c_ldg_rts"\n' +
        '      WHEN 3 THEN base."cbd_dir"\n' +
        '      WHEN 5 THEN base."cert"\n' +
        '      WHEN 6 THEN base."city"\n' +
        '      WHEN 7 THEN base."cntl_twr"\n' +
        '      WHEN 8 THEN base."code"\n' +
        '      WHEN 9 THEN base."county"\n' +
        '      WHEN 10 THEN base."cust_intl"\n' +
        '      WHEN 12 THEN base."faa_dist"\n' +
        '      WHEN 13 THEN base."faa_region"\n' +
        '      WHEN 14 THEN base."fac_type"\n' +
        '      WHEN 15 THEN base."fac_use"\n' +
        '      WHEN 16 THEN base."fed_agree"\n' +
        '      WHEN 17 THEN base."full_name"\n' +
        '      WHEN 19 THEN base."joint_use"\n' +
        '      WHEN 22 THEN base."major"\n' +
        '      WHEN 23 THEN base."mil_rts"\n' +
        '      WHEN 24 THEN base."own_type"\n' +
        '      WHEN 25 THEN base."site_number"\n' +
        '      WHEN 26 THEN base."state"\n' +
        '    END as "fieldValue",\n' +
        '   COUNT(*) as "weight",\n' +
        '    CASE group_set\n' +
        `      WHEN 99999 THEN ''    WHEN 4 THEN MIN(CAST(base."cbd_dist" as VARCHAR)) || ' to ' || CAST(MAX(base."cbd_dist") as VARCHAR)\n` +
        `      WHEN 11 THEN MIN(CAST(base."elevation" as VARCHAR)) || ' to ' || CAST(MAX(base."elevation") as VARCHAR)\n` +
        `      WHEN 18 THEN MIN(CAST(base."id" as VARCHAR)) || ' to ' || CAST(MAX(base."id") as VARCHAR)\n` +
        `      WHEN 20 THEN MIN(CAST(base."latitude" as VARCHAR)) || ' to ' || CAST(MAX(base."latitude") as VARCHAR)\n` +
        `      WHEN 21 THEN MIN(CAST(base."longitude" as VARCHAR)) || ' to ' || CAST(MAX(base."longitude") as VARCHAR)\n` +
        '    END as "fieldRange"\n' +
        '  FROM __stage0 as base\n' +
        '  CROSS JOIN GENERATE_SERIES(0,27,1) as group_set\n' +
        '  GROUP BY 1,2,3,4,5\n' +
        ')\n' +
        'SELECT\n' +
        '  "fieldName",\n' +
        '  "fieldPath",\n' +
        '  "fieldType",\n' +
        '  COALESCE("fieldValue", "fieldRange") as "fieldValue",\n' +
        '  "weight"\n' +
        'FROM __stage1\n' +
        ';'
    ]

      at RedshiftTestConnection._callee13$ (packages/malloy-db-redshift/src/redshift_connection.ts:426:13)

  console.log
    Error in SQL:
     DROP TABLE IF EXISTS tt8f20bd7b3cab6c2cbe6d4613a9f91a09;,CREATE TEMP TABLE tt8f20bd7b3cab6c2cbe6d4613a9f91a09 AS WITH __stage0 AS (
      SELECT * from (SELECT * FROM "malloytest"."airports" TABLESAMPLE SYSTEM_ROWS(50000)) as x limit 100000 )
    , __stage1 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'act_date'
          WHEN 1 THEN 'aero_cht'
          WHEN 2 THEN 'c_ldg_rts'
          WHEN 3 THEN 'cbd_dir'
          WHEN 4 THEN 'cbd_dist'
          WHEN 5 THEN 'cert'
          WHEN 6 THEN 'city'
          WHEN 7 THEN 'cntl_twr'
          WHEN 8 THEN 'code'
          WHEN 9 THEN 'county'
          WHEN 10 THEN 'cust_intl'
          WHEN 11 THEN 'elevation'
          WHEN 12 THEN 'faa_dist'
          WHEN 13 THEN 'faa_region'
          WHEN 14 THEN 'fac_type'
          WHEN 15 THEN 'fac_use'
          WHEN 16 THEN 'fed_agree'
          WHEN 17 THEN 'full_name'
          WHEN 18 THEN 'id'
          WHEN 19 THEN 'joint_use'
          WHEN 20 THEN 'latitude'
          WHEN 21 THEN 'longitude'
          WHEN 22 THEN 'major'
          WHEN 23 THEN 'mil_rts'
          WHEN 24 THEN 'own_type'
          WHEN 25 THEN 'site_number'
          WHEN 26 THEN 'state'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'act_date'
          WHEN 1 THEN 'aero_cht'
          WHEN 2 THEN 'c_ldg_rts'
          WHEN 3 THEN 'cbd_dir'
          WHEN 4 THEN 'cbd_dist'
          WHEN 5 THEN 'cert'
          WHEN 6 THEN 'city'
          WHEN 7 THEN 'cntl_twr'
          WHEN 8 THEN 'code'
          WHEN 9 THEN 'county'
          WHEN 10 THEN 'cust_intl'
          WHEN 11 THEN 'elevation'
          WHEN 12 THEN 'faa_dist'
          WHEN 13 THEN 'faa_region'
          WHEN 14 THEN 'fac_type'
          WHEN 15 THEN 'fac_use'
          WHEN 16 THEN 'fed_agree'
          WHEN 17 THEN 'full_name'
          WHEN 18 THEN 'id'
          WHEN 19 THEN 'joint_use'
          WHEN 20 THEN 'latitude'
          WHEN 21 THEN 'longitude'
          WHEN 22 THEN 'major'
          WHEN 23 THEN 'mil_rts'
          WHEN 24 THEN 'own_type'
          WHEN 25 THEN 'site_number'
          WHEN 26 THEN 'state'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'string'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'string'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'string'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'string'
          WHEN 15 THEN 'string'
          WHEN 16 THEN 'string'
          WHEN 17 THEN 'string'
          WHEN 18 THEN 'number'
          WHEN 19 THEN 'string'
          WHEN 20 THEN 'number'
          WHEN 21 THEN 'number'
          WHEN 22 THEN 'string'
          WHEN 23 THEN 'string'
          WHEN 24 THEN 'string'
          WHEN 25 THEN 'string'
          WHEN 26 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN base."act_date"
          WHEN 1 THEN base."aero_cht"
          WHEN 2 THEN base."c_ldg_rts"
          WHEN 3 THEN base."cbd_dir"
          WHEN 5 THEN base."cert"
          WHEN 6 THEN base."city"
          WHEN 7 THEN base."cntl_twr"
          WHEN 8 THEN base."code"
          WHEN 9 THEN base."county"
          WHEN 10 THEN base."cust_intl"
          WHEN 12 THEN base."faa_dist"
          WHEN 13 THEN base."faa_region"
          WHEN 14 THEN base."fac_type"
          WHEN 15 THEN base."fac_use"
          WHEN 16 THEN base."fed_agree"
          WHEN 17 THEN base."full_name"
          WHEN 19 THEN base."joint_use"
          WHEN 22 THEN base."major"
          WHEN 23 THEN base."mil_rts"
          WHEN 24 THEN base."own_type"
          WHEN 25 THEN base."site_number"
          WHEN 26 THEN base."state"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 4 THEN MIN(CAST(base."cbd_dist" as VARCHAR)) || ' to ' || CAST(MAX(base."cbd_dist") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."elevation" as VARCHAR)) || ' to ' || CAST(MAX(base."elevation") as VARCHAR)
          WHEN 18 THEN MIN(CAST(base."id" as VARCHAR)) || ' to ' || CAST(MAX(base."id") as VARCHAR)
          WHEN 20 THEN MIN(CAST(base."latitude" as VARCHAR)) || ' to ' || CAST(MAX(base."latitude") as VARCHAR)
          WHEN 21 THEN MIN(CAST(base."longitude" as VARCHAR)) || ' to ' || CAST(MAX(base."longitude") as VARCHAR)
        END as "fieldRange"
      FROM __stage0 as base
      CROSS JOIN GENERATE_SERIES(0,27,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    SELECT
      "fieldName",
      "fieldPath",
      "fieldType",
      COALESCE("fieldValue", "fieldRange") as "fieldValue",
      "weight"
    FROM __stage1
    ;

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'act_date'
          WHEN 1 THEN 'aero_cht'
          WHEN 2 THEN 'c_ldg_rts'
          WHEN 3 THEN 'cbd_dir'
          WHEN 4 THEN 'cbd_dist'
          WHEN 5 THEN 'cert'
          WHEN 6 THEN 'city'
          WHEN 7 THEN 'cntl_twr'
          WHEN 8 THEN 'code'
          WHEN 9 THEN 'county'
          WHEN 10 THEN 'cust_intl'
          WHEN 11 THEN 'elevation'
          WHEN 12 THEN 'faa_dist'
          WHEN 13 THEN 'faa_region'
          WHEN 14 THEN 'fac_type'
          WHEN 15 THEN 'fac_use'
          WHEN 16 THEN 'fed_agree'
          WHEN 17 THEN 'full_name'
          WHEN 18 THEN 'id'
          WHEN 19 THEN 'joint_use'
          WHEN 20 THEN 'latitude'
          WHEN 21 THEN 'longitude'
          WHEN 22 THEN 'major'
          WHEN 23 THEN 'mil_rts'
          WHEN 24 THEN 'own_type'
          WHEN 25 THEN 'site_number'
          WHEN 26 THEN 'state'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'act_date'
          WHEN 1 THEN 'aero_cht'
          WHEN 2 THEN 'c_ldg_rts'
          WHEN 3 THEN 'cbd_dir'
          WHEN 4 THEN 'cbd_dist'
          WHEN 5 THEN 'cert'
          WHEN 6 THEN 'city'
          WHEN 7 THEN 'cntl_twr'
          WHEN 8 THEN 'code'
          WHEN 9 THEN 'county'
          WHEN 10 THEN 'cust_intl'
          WHEN 11 THEN 'elevation'
          WHEN 12 THEN 'faa_dist'
          WHEN 13 THEN 'faa_region'
          WHEN 14 THEN 'fac_type'
          WHEN 15 THEN 'fac_use'
          WHEN 16 THEN 'fed_agree'
          WHEN 17 THEN 'full_name'
          WHEN 18 THEN 'id'
          WHEN 19 THEN 'joint_use'
          WHEN 20 THEN 'latitude'
          WHEN 21 THEN 'longitude'
          WHEN 22 THEN 'major'
          WHEN 23 THEN 'mil_rts'
          WHEN 24 THEN 'own_type'
          WHEN 25 THEN 'site_number'
          WHEN 26 THEN 'state'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'string'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'string'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'string'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'string'
          WHEN 15 THEN 'string'
          WHEN 16 THEN 'string'
          WHEN 17 THEN 'string'
          WHEN 18 THEN 'number'
          WHEN 19 THEN 'string'
          WHEN 20 THEN 'number'
          WHEN 21 THEN 'number'
          WHEN 22 THEN 'string'
          WHEN 23 THEN 'string'
          WHEN 24 THEN 'string'
          WHEN 25 THEN 'string'
          WHEN 26 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN base."act_date"
          WHEN 1 THEN base."aero_cht"
          WHEN 2 THEN base."c_ldg_rts"
          WHEN 3 THEN base."cbd_dir"
          WHEN 5 THEN base."cert"
          WHEN 6 THEN base."city"
          WHEN 7 THEN base."cntl_twr"
          WHEN 8 THEN base."code"
          WHEN 9 THEN base."county"
          WHEN 10 THEN base."cust_intl"
          WHEN 12 THEN base."faa_dist"
          WHEN 13 THEN base."faa_region"
          WHEN 14 THEN base."fac_type"
          WHEN 15 THEN base."fac_use"
          WHEN 16 THEN base."fed_agree"
          WHEN 17 THEN base."full_name"
          WHEN 19 THEN base."joint_use"
          WHEN 22 THEN base."major"
          WHEN 23 THEN base."mil_rts"
          WHEN 24 THEN base."own_type"
          WHEN 25 THEN base."site_number"
          WHEN 26 THEN base."state"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 4 THEN MIN(CAST(base."cbd_dist" as VARCHAR)) || ' to ' || CAST(MAX(base."cbd_dist") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."elevation" as VARCHAR)) || ' to ' || CAST(MAX(base."elevation") as VARCHAR)
          WHEN 18 THEN MIN(CAST(base."id" as VARCHAR)) || ' to ' || CAST(MAX(base."id") as VARCHAR)
          WHEN 20 THEN MIN(CAST(base."latitude" as VARCHAR)) || ' to ' || CAST(MAX(base."latitude") as VARCHAR)
          WHEN 21 THEN MIN(CAST(base."longitude" as VARCHAR)) || ' to ' || CAST(MAX(base."longitude") as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,27,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    , __stage2 AS (
      SELECT
        group_set,
        base."fieldName" as "fieldName__0",
        CASE WHEN group_set=0 THEN
          count(distinct base."fieldValue")
          END as "cardinality__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          base."fieldValue" as "fieldValue", 
          base."weight"::DOUBLE PRECISION as "weight"
          ) as __x)  ORDER BY  base."weight" desc NULLS LAST ) FILTER (WHERE group_set=0))[1:10]),'[]'::JSONB) as "values__0"
      FROM __stage1 as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      WHERE base."fieldType"='string'
      GROUP BY 1,2
    )
    SELECT
      "fieldName__0" as "fieldName",
      (ARRAY_AGG("cardinality__0") FILTER (WHERE group_set=0 AND "cardinality__0" IS NOT NULL))[1] as "cardinality",
      (ARRAY_AGG("values__0") FILTER (WHERE group_set=0 AND "values__0" IS NOT NULL))[1] as "values"
    FROM __stage2
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 1000

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."state"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage1 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT * from (SELECT * FROM "malloytest"."state_facts" TABLESAMPLE SYSTEM_ROWS(10)) as x limit 100000 )
    , __stage1 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."state"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM __stage0 as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage2 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage1
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage2 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT * from (SELECT * FROM "malloytest"."flights" TABLESAMPLE SYSTEM (50)) as x limit 100000 )
    , __stage1 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'tail_num'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'tail_num'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM __stage0 as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage2 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage1
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage2 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/db_index.spec.ts (22.52 s)
  ✕ basic index  - redshift (3224 ms)
  ✕ index value map  - redshift (1646 ms)
  ✕ index no sample rows - redshift (2862 ms)
  ✕ index rows count - redshift (1434 ms)
  ✕ index rows count - redshift (2846 ms)

  ● basic index  - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4b009110-a352-418a-8c3f-5463637e3f9e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:03.755Z",
      "Database": "dev",
      "Duration": 101429200,
      "Error": "Query #3 failed with ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"airports\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 68\n  Position: 143",
      "HasResultSet": false,
      "Id": "21bf86c8-0721-4a56-a525-7a1070ffe355",
      "RedshiftPid": 1073963126,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:03.843Z",
          "Duration": 53126719,
          "HasResultSet": false,
          "Id": "21bf86c8-0721-4a56-a525-7a1070ffe355:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:04.437Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:03.847Z",
          "Duration": 48302481,
          "HasResultSet": false,
          "Id": "21bf86c8-0721-4a56-a525-7a1070ffe355:2",
          "QueryString": "DROP TABLE IF EXISTS tt8f20bd7b3cab6c2cbe6d4613a9f91a09;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:04.437Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:03.850Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"airports\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 68\n  Position: 143",
          "HasResultSet": false,
          "Id": "21bf86c8-0721-4a56-a525-7a1070ffe355:3",
          "QueryString": "CREATE TEMP TABLE tt8f20bd7b3cab6c2cbe6d4613a9f91a09 AS WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"airports\" TABLESAMPLE SYSTEM_ROWS(50000)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'act_date'\n      WHEN 1 THEN 'aero_cht'\n      WHEN 2 THEN 'c_ldg_rts'\n      WHEN 3 THEN 'cbd_dir'\n      WHEN 4 THEN 'cbd_dist'\n      WHEN 5 THEN 'cert'\n      WHEN 6 THEN 'city'\n      WHEN 7 THEN 'cntl_twr'\n      WHEN 8 THEN 'code'\n      WHEN 9 THEN 'county'\n      WHEN 10 THEN 'cust_intl'\n      WHEN 11 THEN 'elevation'\n      WHEN 12 THEN 'faa_dist'\n      WHEN 13 THEN 'faa_region'\n      WHEN 14 THEN 'fac_type'\n      WHEN 15 THEN 'fac_use'\n      WHEN 16 THEN 'fed_agree'\n      WHEN 17 THEN 'full_name'\n      WHEN 18 THEN 'id'\n      WHEN 19 THEN 'joint_use'\n      WHEN 20 THEN 'latitude'\n      WHEN 21 THEN 'longitude'\n      WHEN 22 THEN 'major'\n      WHEN 23 THEN 'mil_rts'\n      WHEN 24 THEN 'own_type'\n      WHEN 25 THEN 'site_number'\n      WHEN 26 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'act_date'\n      WHEN 1 THEN 'aero_cht'\n      WHEN 2 THEN 'c_ldg_rts'\n      WHEN 3 THEN 'cbd_dir'\n      WHEN 4 THEN 'cbd_dist'\n      WHEN 5 THEN 'cert'\n      WHEN 6 THEN 'city'\n      WHEN 7 THEN 'cntl_twr'\n      WHEN 8 THEN 'code'\n      WHEN 9 THEN 'county'\n      WHEN 10 THEN 'cust_intl'\n      WHEN 11 THEN 'elevation'\n      WHEN 12 THEN 'faa_dist'\n      WHEN 13 THEN 'faa_region'\n      WHEN 14 THEN 'fac_type'\n      WHEN 15 THEN 'fac_use'\n      WHEN 16 THEN 'fed_agree'\n      WHEN 17 THEN 'full_name'\n      WHEN 18 THEN 'id'\n      WHEN 19 THEN 'joint_use'\n      WHEN 20 THEN 'latitude'\n      WHEN 21 THEN 'longitude'\n      WHEN 22 THEN 'major'\n      WHEN 23 THEN 'mil_rts'\n      WHEN 24 THEN 'own_type'\n      WHEN 25 THEN 'site_number'\n      WHEN 26 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'string'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'string'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'string'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'string'\n      WHEN 15 THEN 'string'\n      WHEN 16 THEN 'string'\n      WHEN 17 THEN 'string'\n      WHEN 18 THEN 'number'\n      WHEN 19 THEN 'string'\n      WHEN 20 THEN 'number'\n      WHEN 21 THEN 'number'\n      WHEN 22 THEN 'string'\n      WHEN 23 THEN 'string'\n      WHEN 24 THEN 'string'\n      WHEN 25 THEN 'string'\n      WHEN 26 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN base.\"act_date\"\n      WHEN 1 THEN base.\"aero_cht\"\n      WHEN 2 THEN base.\"c_ldg_rts\"\n      WHEN 3 THEN base.\"cbd_dir\"\n      WHEN 5 THEN base.\"cert\"\n      WHEN 6 THEN base.\"city\"\n      WHEN 7 THEN base.\"cntl_twr\"\n      WHEN 8 THEN base.\"code\"\n      WHEN 9 THEN base.\"county\"\n      WHEN 10 THEN base.\"cust_intl\"\n      WHEN 12 THEN base.\"faa_dist\"\n      WHEN 13 THEN base.\"faa_region\"\n      WHEN 14 THEN base.\"fac_type\"\n      WHEN 15 THEN base.\"fac_use\"\n      WHEN 16 THEN base.\"fed_agree\"\n      WHEN 17 THEN base.\"full_name\"\n      WHEN 19 THEN base.\"joint_use\"\n      WHEN 22 THEN base.\"major\"\n      WHEN 23 THEN base.\"mil_rts\"\n      WHEN 24 THEN base.\"own_type\"\n      WHEN 25 THEN base.\"site_number\"\n      WHEN 26 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 4 THEN MIN(CAST(base.\"cbd_dist\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"cbd_dist\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"elevation\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"elevation\") as VARCHAR)\n      WHEN 18 THEN MIN(CAST(base.\"id\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id\") as VARCHAR)\n      WHEN 20 THEN MIN(CAST(base.\"latitude\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"latitude\") as VARCHAR)\n      WHEN 21 THEN MIN(CAST(base.\"longitude\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"longitude\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,27,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage1\n;",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:04.437Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:04.502Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● index value map  - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e0cbc3ce-b2ef-42bb-8b15-b625a1dd2b5b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:05.434Z",
      "Database": "dev",
      "Duration": 45563948,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 145, column 18\n  Position: 4570",
      "HasResultSet": false,
      "Id": "79276399-65b2-4e82-8ba3-550887cb4917",
      "RedshiftPid": 1073971327,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:05.530Z",
          "Duration": 45563948,
          "HasResultSet": false,
          "Id": "79276399-65b2-4e82-8ba3-550887cb4917:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:05.961Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:05.533Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 145, column 18\n  Position: 4570",
          "HasResultSet": false,
          "Id": "79276399-65b2-4e82-8ba3-550887cb4917:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'act_date'\n      WHEN 1 THEN 'aero_cht'\n      WHEN 2 THEN 'c_ldg_rts'\n      WHEN 3 THEN 'cbd_dir'\n      WHEN 4 THEN 'cbd_dist'\n      WHEN 5 THEN 'cert'\n      WHEN 6 THEN 'city'\n      WHEN 7 THEN 'cntl_twr'\n      WHEN 8 THEN 'code'\n      WHEN 9 THEN 'county'\n      WHEN 10 THEN 'cust_intl'\n      WHEN 11 THEN 'elevation'\n      WHEN 12 THEN 'faa_dist'\n      WHEN 13 THEN 'faa_region'\n      WHEN 14 THEN 'fac_type'\n      WHEN 15 THEN 'fac_use'\n      WHEN 16 THEN 'fed_agree'\n      WHEN 17 THEN 'full_name'\n      WHEN 18 THEN 'id'\n      WHEN 19 THEN 'joint_use'\n      WHEN 20 THEN 'latitude'\n      WHEN 21 THEN 'longitude'\n      WHEN 22 THEN 'major'\n      WHEN 23 THEN 'mil_rts'\n      WHEN 24 THEN 'own_type'\n      WHEN 25 THEN 'site_number'\n      WHEN 26 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'act_date'\n      WHEN 1 THEN 'aero_cht'\n      WHEN 2 THEN 'c_ldg_rts'\n      WHEN 3 THEN 'cbd_dir'\n      WHEN 4 THEN 'cbd_dist'\n      WHEN 5 THEN 'cert'\n      WHEN 6 THEN 'city'\n      WHEN 7 THEN 'cntl_twr'\n      WHEN 8 THEN 'code'\n      WHEN 9 THEN 'county'\n      WHEN 10 THEN 'cust_intl'\n      WHEN 11 THEN 'elevation'\n      WHEN 12 THEN 'faa_dist'\n      WHEN 13 THEN 'faa_region'\n      WHEN 14 THEN 'fac_type'\n      WHEN 15 THEN 'fac_use'\n      WHEN 16 THEN 'fed_agree'\n      WHEN 17 THEN 'full_name'\n      WHEN 18 THEN 'id'\n      WHEN 19 THEN 'joint_use'\n      WHEN 20 THEN 'latitude'\n      WHEN 21 THEN 'longitude'\n      WHEN 22 THEN 'major'\n      WHEN 23 THEN 'mil_rts'\n      WHEN 24 THEN 'own_type'\n      WHEN 25 THEN 'site_number'\n      WHEN 26 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'string'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'string'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'string'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'string'\n      WHEN 15 THEN 'string'\n      WHEN 16 THEN 'string'\n      WHEN 17 THEN 'string'\n      WHEN 18 THEN 'number'\n      WHEN 19 THEN 'string'\n      WHEN 20 THEN 'number'\n      WHEN 21 THEN 'number'\n      WHEN 22 THEN 'string'\n      WHEN 23 THEN 'string'\n      WHEN 24 THEN 'string'\n      WHEN 25 THEN 'string'\n      WHEN 26 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN base.\"act_date\"\n      WHEN 1 THEN base.\"aero_cht\"\n      WHEN 2 THEN base.\"c_ldg_rts\"\n      WHEN 3 THEN base.\"cbd_dir\"\n      WHEN 5 THEN base.\"cert\"\n      WHEN 6 THEN base.\"city\"\n      WHEN 7 THEN base.\"cntl_twr\"\n      WHEN 8 THEN base.\"code\"\n      WHEN 9 THEN base.\"county\"\n      WHEN 10 THEN base.\"cust_intl\"\n      WHEN 12 THEN base.\"faa_dist\"\n      WHEN 13 THEN base.\"faa_region\"\n      WHEN 14 THEN base.\"fac_type\"\n      WHEN 15 THEN base.\"fac_use\"\n      WHEN 16 THEN base.\"fed_agree\"\n      WHEN 17 THEN base.\"full_name\"\n      WHEN 19 THEN base.\"joint_use\"\n      WHEN 22 THEN base.\"major\"\n      WHEN 23 THEN base.\"mil_rts\"\n      WHEN 24 THEN base.\"own_type\"\n      WHEN 25 THEN base.\"site_number\"\n      WHEN 26 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 4 THEN MIN(CAST(base.\"cbd_dist\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"cbd_dist\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"elevation\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"elevation\") as VARCHAR)\n      WHEN 18 THEN MIN(CAST(base.\"id\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id\") as VARCHAR)\n      WHEN 20 THEN MIN(CAST(base.\"latitude\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"latitude\") as VARCHAR)\n      WHEN 21 THEN MIN(CAST(base.\"longitude\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"longitude\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,27,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\n, __stage2 AS (\n  SELECT\n    group_set,\n    base.\"fieldName\" as \"fieldName__0\",\n    CASE WHEN group_set=0 THEN\n      count(distinct base.\"fieldValue\")\n      END as \"cardinality__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      base.\"fieldValue\" as \"fieldValue\", \n      base.\"weight\"::DOUBLE PRECISION as \"weight\"\n      ) as __x)  ORDER BY  base.\"weight\" desc NULLS LAST ) FILTER (WHERE group_set=0))[1:10]),'[]'::JSONB) as \"values__0\"\n  FROM __stage1 as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  WHERE base.\"fieldType\"='string'\n  GROUP BY 1,2\n)\nSELECT\n  \"fieldName__0\" as \"fieldName\",\n  (ARRAY_AGG(\"cardinality__0\") FILTER (WHERE group_set=0 AND \"cardinality__0\" IS NOT NULL))[1] as \"cardinality\",\n  (ARRAY_AGG(\"values__0\") FILTER (WHERE group_set=0 AND \"values__0\" IS NOT NULL))[1] as \"values\"\nFROM __stage2\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 1000\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:05.961Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:06.026Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● index no sample rows - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2c520e98-e4e6-4078-8796-e6cf49a4e8c8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:08.303Z",
      "Database": "dev",
      "Duration": 53174865,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308",
      "RedshiftPid": 1073954938,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:08.401Z",
          "Duration": 53174865,
          "HasResultSet": false,
          "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:08.853Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:08.404Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:08.853Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:08.918Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."state"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage1 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2c520e98-e4e6-4078-8796-e6cf49a4e8c8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:08.303Z",
      "Database": "dev",
      "Duration": 53174865,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308",
      "RedshiftPid": 1073954938,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:08.401Z",
          "Duration": 53174865,
          "HasResultSet": false,
          "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:08.853Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:08.404Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:08.853Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:08.918Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/db_index.spec.ts:96:8)

  ● index rows count - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b774dbea-383b-4fec-bc31-7e5897f1ce3c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:09.689Z",
      "Database": "dev",
      "Duration": 53404053,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 71\n  Position: 90",
      "HasResultSet": false,
      "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054",
      "RedshiftPid": 1073995900,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:09.785Z",
          "Duration": 53404053,
          "HasResultSet": false,
          "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:10.222Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:09.788Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 71\n  Position: 90",
          "HasResultSet": false,
          "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS(10)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage2 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage1\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage2 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:10.222Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:10.288Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT * from (SELECT * FROM "malloytest"."state_facts" TABLESAMPLE SYSTEM_ROWS(10)) as x limit 100000 )
    , __stage1 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."state"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM __stage0 as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage2 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage1
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage2 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b774dbea-383b-4fec-bc31-7e5897f1ce3c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:09.689Z",
      "Database": "dev",
      "Duration": 53404053,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 71\n  Position: 90",
      "HasResultSet": false,
      "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054",
      "RedshiftPid": 1073995900,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:09.785Z",
          "Duration": 53404053,
          "HasResultSet": false,
          "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:10.222Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:09.788Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 71\n  Position: 90",
          "HasResultSet": false,
          "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS(10)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage2 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage1\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage2 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:10.222Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:10.288Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/db_index.spec.ts:110:10)

  ● index rows count - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4bd08b84-3f8b-4531-9801-a3be8a3c2140",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:12.533Z",
      "Database": "dev",
      "Duration": 52060224,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"SYSTEM\" in context \"FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM\", at line 2, column 67\n  Position: 86",
      "HasResultSet": false,
      "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a",
      "RedshiftPid": 1073848435,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:12.671Z",
          "Duration": 52060224,
          "HasResultSet": false,
          "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:13.144Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:12.674Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM\" in context \"FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM\", at line 2, column 67\n  Position: 86",
          "HasResultSet": false,
          "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM (50)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'tail_num'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'tail_num'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage2 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage1\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage2 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:13.144Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:13.209Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT * from (SELECT * FROM "malloytest"."flights" TABLESAMPLE SYSTEM (50)) as x limit 100000 )
    , __stage1 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'tail_num'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'tail_num'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM __stage0 as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage2 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage1
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage2 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4bd08b84-3f8b-4531-9801-a3be8a3c2140",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:12.533Z",
      "Database": "dev",
      "Duration": 52060224,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"SYSTEM\" in context \"FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM\", at line 2, column 67\n  Position: 86",
      "HasResultSet": false,
      "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a",
      "RedshiftPid": 1073848435,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:12.671Z",
          "Duration": 52060224,
          "HasResultSet": false,
          "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:13.144Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:12.674Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM\" in context \"FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM\", at line 2, column 67\n  Position: 86",
          "HasResultSet": false,
          "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM (50)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'tail_num'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'tail_num'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage2 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage1\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage2 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:13.144Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:13.209Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/db_index.spec.ts:121:8)

PASS test/src/databases/all/parameters.spec.ts (13.671 s)
  ✓ default value not passed through extension propagates - redshift (3315 ms)
  ○ skipped number param used in dimension - redshift
  ○ skipped number param used in sql function - redshift
  ○ skipped string param used in group_by - redshift
  ○ skipped reference field in source in argument - redshift
  ○ skipped can pass param into joined source correctly - redshift
  ○ skipped can pass param into extended source - redshift
  ○ skipped can use dimension that uses field that is excepted - redshift
  ○ skipped can shadow field that is excepted, using dimension that uses field that is excepted - redshift
  ○ skipped can shadow field that is excepted - redshift
  ○ skipped default value propagates - redshift
  ○ skipped default value can be overridden - redshift
  ○ skipped default value passed through extension propagates - redshift
  ○ skipped use parameter in nested view - redshift
  ○ skipped can pass param into joined source from query - redshift
  ○ skipped can pass param into query definition - redshift
  ○ skipped can use param in join on - redshift
  ○ skipped can use param in join with - redshift
  ○ skipped source arguments in query propagate when turned into source - redshift
  ○ skipped date parameters keep granularity when passing in - redshift
  ○ skipped can use parameter in null check - redshift

PASS test/src/render/drill.spec.ts
  drill query
    ✓ can handle joined-in table fields (599 ms)
    ✓ can handle expression fields (24 ms)
    ✓ can handle renamed and multi-word field names (23 ms)
    ✓ can handle queries with no filter (18 ms)

PASS test/src/core/dependencies.spec.ts (14.517 s)
  dependencies
    ✓ typescript references should not be circular (2442 ms)
    ✓ javascript references should not be circular (11644 ms)
    ○ skipped malloy/src/lang typescript should not be circular
    ○ skipped malloy-render/src typescript should not be circular

PASS test/src/databases/all/problems.spec.ts (12.352 s)
  warnings
    ✓ can appear after errors - redshift (1676 ms)
    ✓ can appear before errors - redshift (13 ms)
    ✓ can appear alone - redshift (11 ms)

PASS packages/malloy/src/lang/test/parse.spec.ts
  ✓ non breaking space in source (1 ms)
  model statements
    ✓ errors on redefinition of query (50 ms)
    ✓ ##! experimental enables all experiments (3 ms)
    ✓ experimental explicit enable (3 ms)
    ✓ experiments do not bleed into one another (3 ms)
    ✓ experiment failures in parse are flagged (1 ms)
    ✓ experiment failures in second pass are flagged (2 ms)
    table method
      ✓ table method works (131 ms)
      ✓ table method works with quoted connection name (4 ms)
      ✓ table method fails when connection name is wrong (1 ms)
      ✓ table method fails when connection is not a connection (5 ms)
      ✓ cannot refine table (142 ms)
      ✓ table function is deprecated (5 ms)
      ✓ cannot run table (2 ms)
  error handling
    ✓ no close brace (374 ms)
    ✓ field and query with same name does not overflow (101 ms)
    ✓ redefine source (4 ms)
    ✓ query from undefined source (2 ms)
    ✓ query with expression from undefined source (18 ms)
    ✓ join reference before definition (21 ms)
    ✓ non-rename rename (3 ms)
    ✓ reference to field in its definition (13 ms)
    ✓ empty model (2 ms)
    ✓ one line model  (7 ms)
    ✓ query without fields (3 ms)
    ✓ refine cannot change query type (12 ms)
    ✓ undefined field ref in query (3 ms)
    ✓ query on source with errors (2 ms)
    ✓ detect duplicate output field names (22 ms)
    ✓ detect join tail overlap existing ref (7 ms)
    ✓ undefined in expression with regex compare (9 ms)
    ✓ detect output collision on join references (2 ms)
    ✓ rejoin a query is renamed (20 ms)
    ✓ popping out of embedding when not embedded
    ✓ bad sql in sql block (3 ms)
  translate imports
    ✓ import at (4 ms)
  translation need error locations
    ✓ import error location
    ✓ sql struct error location (3 ms)
    ✓ table struct error location (1 ms)
  error cascading
    ✓ errors can appear in multiple top level objects (5 ms)
    ✓ dependent errors do not cascade (128 ms)
    ✓ error type inference is good (109 ms)
    ✓ eval space of errors is preserved (46 ms)
  pipeline comprehension
    ✓ second query gets namespace from first (28 ms)
    ✓ second query doesn't have access to original fields (3 ms)
    ✓ new query can append ops to existing query (3 ms)
    ✓ new query can refine and append to exisiting query (8 ms)
    ✓ reference to a query can include a refinement (8 ms)
    ✓ Querying an sourcebased on a query (7 ms)
    ✓ new query appends to existing query (2 ms)
  raw function call with type specified
    ✓ timestamp_seconds (4 ms)
  sql expressions
    ✓ reference to sql expression in unextended source (2 ms)
    ✓ sql expression legal with single quote (2 ms)
    ✓ sql expression legal with double quote (2 ms)
    ✓ reference to sql expression in extended source (2 ms)
    ✓ reference to sql expression in named query (1 ms)
    ✓ reference to sql expression in unnamed query (2 ms)
    ✓ cannot refine sql query (2 ms)
    ✓ reference to sql expression in join (3 ms)
    ✓ reference to sql expression in run (2 ms)
    ✓ reference to sql expression in query def (2 ms)
    ✓ reference to sql expression in anonymous query (4 ms)
    ✓ cannot refine a SQL query saved as a query (2 ms)
    ✓ cannot refine a SQL query directly (2 ms)
  extend and refine
    extend and refine, new syntax
      ✓ query name with query refinements (2 ms)
      ✓ query name with source refinements (3 ms)
      ✓ source name with query refinements (1 ms)
      ✓ source name with source refinements (1 ms)
      ✓ query with source refinements (2 ms)
      ✓ query with extension then new stage (1 ms)
    extend and refine, old syntax
      ✓ query name with query refinements (2 ms)
      ✓ query name with source refinements (3 ms)
      ✓ source name with query refinements (1 ms)
      ✓ source name with source refinements (5 ms)
      query name with ambiguous refinements
        ✓ adding segment to ambuguously refined query (13 ms)
        ✓ automatically recognize this as a query refinement without new stage (6 ms)
        ✓ can extend a query into a source (2 ms)
        ✓ can also add an arrow to clarify that it is a query (91 ms)
    extend and refine fallout
      ✓ syntactically valid to run a source, but still illegal (2 ms)
      ✓ syntactically valid to refine a source, but illegal (1 ms)
    turtles
      ✓ explicit refine in turtle works (4 ms)
      ✓ implicit refine in turtle works (2 ms)
    nests
      ✓ explicit refine in nest (3 ms)
      ✓ refine in nest (3 ms)
  miscellaneous m4 warnings
    ✓ project is deprecated (4 ms)
    ✓ query leading arrow (4 ms)
  m3/m4 source query sentences
    ✓ M4 should error on these sq expressions (2 ms)
    ✓ legal sqexpressions (9 ms)
  sql_functions
    ✓ can aggregate sql function (4 ms)

PASS packages/malloy/src/lang/test/annotation.spec.ts
  document annotation
    ✓ every source annotation point (143 ms)
    ✓ multi line source annotation (2 ms)
    ✓ inherited annotation source (88 ms)
    ✓ define full query annotation points (205 ms)
    ✓ run statement annotation points (5 ms)
    ✓ multi line query annotation (6 ms)
    ✓ inherited annotation query (31 ms)
    ✓ query from turtle inherits turtle annotation (18 ms)
    ✓ model annotations (4 ms)
    ✓ ignores objectless object annotations (1 ms)
    ✓ errors reported from compiler flags (4 ms)
    ✓ checking compiler flags (2 ms)
    ✓ extended models inherit model flags (3 ms)
  source definition annotations
    ✓ turtle block annotation (2 ms)
    ✓ refined turtle inherits annotation (5 ms)
    ✓ dimension block annotation (14 ms)
    ✓ measure block annotation (14 ms)
    ✓ join_one-with block annotation (27 ms)
    ✓ join_many-on block annotation (16 ms)
    ✓ ignores model annotation (2 ms)
  query operation annotations
    ✓ ignores model annotation (1 ms)
    ✓ project new definition annotation (15 ms)
    ✓ select: ref inherits annotation (6 ms)
    ✓ group_by def (27 ms)
    ✓ caculate def (32 ms)
    ✓ group_by ref inherits (6 ms)
    ✓ aggregate def (13 ms)
    ✓ aggregate ref inherits (6 ms)
    ✓ nest annotation (15 ms)
    ✓ nest from existing inherits annotation (3 ms)
    ✓ annotations preserved from path references (88 ms)
    ✓ a reference can have an annotation (2 ms)
    include annotations
      ✓ inherit: star (110 ms)
      ✓ new tags are inherited, not added (12 ms)
      ✓ modifier: star (7 ms)
      ✓ inherit: list (34 ms)
      ✓ modifier: list (7 ms)
      ✓ tags except: list (24 ms)
      ✓ tags except: star (6 ms)
      ✓ oprhaned annotation (4 ms)

PASS packages/malloy/src/lang/test/query.spec.ts
  query:
    basic query syntax
      ✓ run:anonymous query (284 ms)
      ✓ query:anonymous query m4 warning (13 ms)
      ✓ named query: (6 ms)
      ✓ run query ref (3 ms)
      ✓ query from query (3 ms)
      ✓ query with refinements from query (4 ms)
      ✓ chained query operations (24 ms)
      ✓ query output refined into another query (91 ms)
      ✓ query with shortcut filtered turtle (15 ms)
      ✓ query with filtered turtle (4 ms)
      ✓ nest: in group_by: (16 ms)
      ✓ reduce pipe project (29 ms)
      ✓ refine and extend query (2 ms)
      ✓ query refinement preserves original (3 ms)
      ✓ query composition preserves original (3 ms)
      ✓ all ungroup with args (7 ms)
      ✓ all ungroup checks args (2 ms)
      ✓ exclude ungroup with args (16 ms)
      ✓ exclude ungroup checks args (3 ms)
      ✓ exclude problem revealed by production models (55 ms)
      ✓ exclude output checking survives refinement (26 ms)
    query operation typechecking
      field declarations
        ✓ cannot use aggregate in group_by (4 ms)
        ✓ cannot use ungrouped_aggregate in group_by (2 ms)
        ✓ cannot use analytic in group_by (1 ms)
        ✓ cannot use aggregate in dimension (1 ms)
        ✓ cannot use ungrouped_aggregate in dimension (1 ms)
        ✓ cannot use analytic in dimension (1 ms)
        ✓ cannot use scalar in measure (1 ms)
        ✓ cannot use analytic in measure (2 ms)
        ✓ cannot use scalar in aggregate (2 ms)
        ✓ cannot use analytic in aggregate (3 ms)
        ✓ cannot use scalar in calculate (4 ms)
        ✓ cannot use aggregate in calculate (3 ms)
        ✓ cannot use aggregate in project (2 ms)
        ✓ cannot use analytic in project (1 ms)
        ✓ cannot use analytic in extended source (12 ms)
        ✓ cannot use aggregate in index (4 ms)
        ✓ can use aggregate in except (3 ms)
      field references
        ✓ cannot use aggregate in group_by (86 ms)
        ✓ cannot use query in group_by (3 ms)
        ✓ cannot use scalar in aggregate (2 ms)
        ✓ cannot use scalar in calculate (2 ms)
        ✓ cannot use aggregate in calculate (1 ms)
        ✓ cannot use query in project (2 ms)
        ✓ cannot use query in index (5 ms)
        ✓ cannot use query in calculate (2 ms)
        ✓ cannot use query in aggregate (2 ms)
        ✓ cannot use aggregate in calculate, preserved over refinement (1 ms)
        ✓ cannot use scalar in calculate, preserved over refinement (2 ms)
        ✓ cannot use analytic in group_by, preserved over refinement (2 ms)
        ✓ cannot use analytic in order_by, preserved over refinement (4 ms)
        ✓ cannot ungroup an ungrouped (2 ms)
        ✓ cannot aggregate an ungrouped (2 ms)
        ✓ cannot aggregate an aggregate (2 ms)
        ✓ can use field def in group_by, preserved over refinement (5 ms)
        ✓ can use field ref in group_by, preserved over refinement (2 ms)
    function typechecking
      ✓ use function correctly (47 ms)
      ✓ function incorrect case (4 ms)
      ✓ function no matching overload (15 ms)
      ✓ unknown function (15 ms)
      ✓ can select different overload (5 ms)
      ✓ can pass different expression types (10 ms)
      ✓ function return type correct (3 ms)
      ✓ function return type incorrect (1 ms)
      ✓ can use output value in calculate (13 ms)
      ✓ cannot use output value in group_by (4 ms)
      ✓ lag can check that other args are constant (2 ms)
      ✓ lag can check that other args are literal (2 ms)
      ✓ lag can check that other args are nonnull (6 ms)
      ✓ lag can use constant values for other args (2 ms)
      ✓ cannot name top level objects same as functions (1 ms)
      ✓ `now` is considered constant` (2 ms)
      ✓ cannot use a field which is a constant in a constant param (22 ms)
      ✓ cannot use struct in function arg (3 ms)
      ✓ cannot use stddev with no arguments (1 ms)
      ✓ can use stddev with postfix syntax (3 ms)
      ✓ can use stddev with postfix syntax on join (2 ms)
      ✓ can use calculate with a measure (2 ms)
      ✓ cannot use calculate with input fields (2 ms)
      ✓ can use calculate with aggregate field which is not in query (6 ms)
      ✓ cannot use agregate as argument to agg function (2 ms)
      ✓ cannot use calculate with no other fields (2 ms)
      ✓ today: cannot order by analytic function (2 ms)
      ✓ cannot use analytic in calculate -- and preserved over refinement (3 ms)
      ✓ cannot use aggregate analytic in project (2 ms)
      ✓ reference field in join (3 ms)
      ✓ reference field in double nested join inside nest (16 ms)
      ✓ can reference select: inline join.* field in calculate (3 ms)
      ✓ can reference select: join.* field in calculate (2 ms)
      ✓ can reference implied output entries in calculate (9 ms)
      ○ skipped cannot use float in round precision
      ○ skipped reference join as field
      dialect functions
        ✓ can use function enabled in this dialect (standardsql) (2 ms)
        ✓ cannot use function enabled in a different dialect (duckdb) (2 ms)
    qops
      ✓ group by single (2 ms)
      ✓ group_by x is x' (3 ms)
      ✓ group by multiple (2 ms)
      ✓ aggregate single (2 ms)
      ✓ calculate in reduce (1 ms)
      ✓ calculate in project (23 ms)
      ✓ aggregate reference (2 ms)
      ✓ timeunit reference (2 ms)
      ✓ aggregate multiple (6 ms)
      ✓ project ref (3 ms)
      ✓ expands star correctly (2 ms)
      ✓ expands join dot star correctly (1 ms)
      ✓ expands star with exclusions (3 ms)
      ✓ array in query is passed into fields (2 ms)
      ✓ star error checking (11 ms)
      ✓ regress check extend: and star (6 ms)
      ✓ project def (2 ms)
      ✓ project multiple (1 ms)
      ✓ index single
      ✓ regress check extend: and star (1 ms)
      ✓ project def (2 ms)
      ✓ project multiple (1 ms)
      ✓ index single (1 ms)
      ✓ index path (2 ms)
      ✓ index unique on path (2 ms)
      ✓ index join.* (2 ms)
      ✓ index multiple (1 ms)
      ✓ index by (1 ms)
      ✓ index sampled (2 ms)
      ✓ index unsampled (5 ms)
      ✓ index sample-percent (2 ms)
      ✓ index sample-rows (1 ms)
      ✓ top N (2 ms)
      ✓ limit N (1 ms)
      ✓ order by multiple (2 ms)
      ✓ agg cannot be used in where (2 ms)
      ✓ analytic cannot be used in where (2 ms)
      ✓ analytic cannot be used in having (3 ms)
      ✓ where single (1 ms)
      ✓ having single (2 ms)
      ✓ compound having still works (9 ms)
      ✓ compound aggregate still works (22 ms)
      ✓ where multiple (53 ms)
      ✓ filters preserve source formatting in code: (14 ms)
      ✓ field expressions preserve source formatting in code: (2 ms)
      ✓ nest single (7 ms)
      ✓ nest multiple (18 ms)
      ✓ nest ref (1 ms)
      ✓ refine query with extended source (18 ms)
      ✓ refine query source with field (3 ms)
      ✓ refine query source with join (16 ms)
      order by variations
        ✓ order by (2 ms)
        ✓ order by preserved over refinement (2 ms)
        ✓ order by must be in the output space (2 ms)
        ✓ order by asc (1 ms)
        ✓ order by desc (1 ms)
        ✓ order by N (2 ms)
        ✓ first aggregate used for default ordering (2 ms)
        ✓ first temporal used for default ordering (5 ms)
        ✓ first used for ordering when appropriate (2 ms)
      extend block
        ✓ works with dimension (2 ms)
        ✓ works with measure (1 ms)
        ✓ works with join_one (2 ms)
        ✓ works with join_many (3 ms)
        ✓ works with join_cross (2 ms)
        ✓ works with multiple in one block (5 ms)
        ✓ works with multiple blocks (2 ms)
      declare/query join warnings
        ✓ declare warning in query (1 ms)
        ✓ declare warning in source (2 ms)
        ✓ joins in query (2 ms)
    refinement location rules
      ✓ where clauses go into the first segment (2 ms)
      ✓ having clauses go into the last segment (3 ms)
      ✓ limit goes into the last segment (2 ms)
      ✓ order_by goes into the last segment (2 ms)
      ✓ group_by illegal in long pipes (2 ms)
      ✓ aggregate illegal in long pipes (2 ms)
      ✓ calcluate illegal in long pipes (1 ms)
      ✓ extend illegal in long pipes (2 ms)
      ✓ nest illegal in long pipes (4 ms)
      ✓ all single stage refinements are accepted (2 ms)

PASS packages/malloy/src/lang/test/parameters.spec.ts
  parameters
    ✓ can declare parameter with no default value (152 ms)
    ✓ can declare parameter with default value literal (11 ms)
    ✓ can declare parameter with default value constant (11 ms)
    ✓ cannot specify default value with incompatible type (3 ms)
    ✓ error if paramter has no type or value (2 ms)
    ✓ error if paramter type is null (2 ms)
    ✓ allowed to write null::string (3 ms)
    ✓ allowed to write ::string is null (2 ms)
    ✓ can use param in null equality expression (285 ms)
    ✓ error if paramter type is range (8 ms)
    ✓ no additional error if default value type is error (2 ms)
    ✓ can declare parameter with inferred type (1 ms)
    ✓ can pass parameter into extended base source (9 ms)
    ✓ can pass parameter to override default value with constant (2 ms)
    ✓ can pass parameter to override default value with param value (2 ms)
    ✓ can pass parameter into named base source (2 ms)
    ✓ can pass differently-named parameter into extended base source (3 ms)
    ✓ can pass differently-named parameter into named base source (2 ms)
    ✓ can pass parameter into base source longhand (2 ms)
    ✓ can pass parameter into base source shorthand (2 ms)
    ✓ can use declared parameter in dimension (10 ms)
    ✓ can use declared parameter in sql function (7 ms)
    ✓ can use declared parameter in nest extending other (48 ms)
    ✓ can use declared parameter in source extension in view (87 ms)
    ✓ can use declared parameter in nest with table (4 ms)
    ✓ can pass argument for param (3 ms)
    ✓ can not pass argument for default-valued param (2 ms)
    ✓ can pass zero args for source with default-valued param (8 ms)
    ✓ can pass non-literal argument for param (2 ms)
    ✓ parameter not included in wildcard (6 ms)
    ✓ cannot reference renamed param in query against source (2 ms)
    ✓ cannot reference param in query against source (2 ms)
    ✓ cannot reference param in source extension (2 ms)
    ✓ cannot reference param in in-query source extension (2 ms)
    ✓ can reference field in source in argument (2 ms)
    ✓ can pass through parameter to joined source (shorthand) (165 ms)
    ✓ can pass through parameter to joined source (longhand) (9 ms)
    ✓ can reference param in query against source (2 ms)
    ✓ can reference param in view in source (4 ms)
    ✓ can declare dimension which is just the parameter (1 ms)
    ✓ cannot reference param in expression in query against source (3 ms)
    ✓ error when declaring parameter twice (1 ms)
    ✓ error when declaring parameter with same name as field (extended) (2 ms)
    ✓ can shadow field that is excepted (2 ms)
    ✓ error when declaring parameter with same name as field (not extended) (2 ms)
    ✓ do not inherit parameters from base source (3 ms)
    ✓ error when declaring field with same name as parameter (6 ms)
    ✓ error when declaring parameter without experiment enabled (2 ms)
    ✓ cannot except parameter from extended source (2 ms)
    ✓ cannot except parameter in direct extend (1 ms)
    ✓ cannot accept parameter (2 ms)
    ✓ error when using parameter without experiment enabled (1 ms)
    ✓ parameters cannot reference themselves (3 ms)
    ✓ error when circularly referencing mutually recursive parameters in argument (1 ms)
    ✓ error when passing param with no name (1 ms)
    ✓ error when passing param with incorrect name (3 ms)
    ✓ error when passing param multiple times (2 ms)
    ✓ error when not specifying argument for param with parentheses (7 ms)
    ✓ error when not specifying argument for param without parentheses (2 ms)
    ✓ error when not specifying argument for param second time (2 ms)
    ✓ error when referencing parameter that does not exist in join definition (3 ms)
    ✓ error when referencing identifier in default param value (1 ms)
    ✓ can not pass parameter into source of query yet (2 ms)
    ✓ source arguments from query propagate as arguments not parameters (18 ms)
    ✓ source arguments carry over from previous invocation (2 ms)
    ○ skipped can pass parameter into source of query
    ○ skipped can pass through parameter to source in joined query
    ○ skipped can pass through parameter to view in joined query
    ○ skipped can pass through parameter to source in query in SQL source
    ○ skipped can pass through parameter to view in query in SQL source
    ○ skipped can pass through parameter to source in query in joined SQL source
    ○ skipped can use param in multi-stage query
    ○ skipped can add an annotation to a param

PASS packages/malloy/src/lang/test/sql-block.spec.ts
  connection sql()
    ✓ source from sql (229 ms)
    ✓ source from imported sql-based-source (168 ms)
    ✓ simple turducken (30 ms)
    ✓ turduckenzilla (214 ms)
    ✓ source from extended sql-based-source (7 ms)

PASS packages/malloy/src/lang/test/expressions.spec.ts
  expressions
    ✓ field name (5 ms)
    ✓ function call (2 ms)
    ✓ raw function call codegen (3 ms)
    ✓ filtered measure (4 ms)
    ✓ filtered ungrouped aggregate (23 ms)
    ✓ correctly flags filtered scalar (4 ms)
    ✓ correctly flags filtered analytic (3 ms)
    ✓ can use calculate with partition by in select (29 ms)
    ✓ paren and applied div (1 ms)
    ✓ Can compare field ats (type timestamp) to NULL (1 ms)
    ✓ Can compare field ad (type date) to NULL
    ✓ Can compare field ai (type number) to NULL (1 ms)
    ✓ Can compare field astr (type string) to NULL (1 ms)
    ✓ Can compare field abool (type boolean) to NULL (1 ms)
    timeframes
      ✓ timestamp truncate second (165 ms)
      ✓ date truncate week (2 ms)
      ✓ timestamp difference - second (8 ms)
      ✓ timestamp difference - second (2 ms)
    operators
      ✓ addition (2 ms)
      ✓ typecheck addition lhs (2 ms)
      ✓ typecheck addition rhs (1 ms)
      ✓ subtraction (2 ms)
      ✓ multiplication (1 ms)
      ✓ mod (2 ms)
      ✓ division (2 ms)
      ✓ unary negation (1 ms)
      ✓ equal (5 ms)
      ✓ not equal (2 ms)
      ✓ greater than (3 ms)
      ✓ greater than or equal (2 ms)
      ✓ less than or equal (1 ms)
      ✓ less than (2 ms)
      ✓ match (2 ms)
      ✓ not match (1 ms)
      ✓ regexp-match (2 ms)
      ✓ not regexp-match (1 ms)
      ✓ apply as equality (3 ms)
      ✓ not (4 ms)
      ✓ and (2 ms)
      ✓ or (4 ms)
      ✓ null-check (??) (8 ms)
      ✓ normal is-null (1 ms)
      ✓ normal is-not-null (1 ms)
      ✓ apply is-null (1 ms)
      ✓ apply is-not-null (1 ms)
      ✓ coalesce type mismatch (1 ms)
      ✓ disallow date OP number (1 ms)
      ✓ disallow date OP timestamp (1 ms)
      ✓ disallow interval from date to timestamp (2 ms)
      ✓ compare to truncation uses straight comparison (1 ms)
      ✓ compare to granular result expression uses straight comparison (2 ms)
      ✓ apply granular-truncation uses range (2 ms)
      ✓ apply granular-literal alternation uses all literals for range (1 ms)
      ✓ apply followed by another condition
      ✓ apply followed by another condition, with parenthesis (5 ms)
      ✓ apply or-tree granular-literal doesnt turn into IN (2 ms)
      ✓ comparison promotes date literal to timestamp (2 ms)
      ✓ can apply range to date (9 ms)
      ✓ disallow date delta second (8 ms)
      ✓ disallow date delta minute (9 ms)
      ✓ disallow date delta hour (7 ms)
      ✓ apply with parens (2 ms)
      sql friendly warnings
        ✓ = null with warning (1 ms)
        ✓ is not null with warning (5 ms)
        ✓ like with warning (6 ms)
        ✓ NOT LIKE with warning (2 ms)
        ✓ x is expr y is not null (11 ms)
        ✓ not null::number (1 ms)
        ✓ (not null)::number (1 ms)
    expr props
      ✓ aggregate order by not allowed without experiments enabled (3 ms)
      ✓ aggregate limit not allowed without experiments enabled (2 ms)
      ✓ aggregate order_by not allowed with different experiment enabled (3 ms)
      ✓ aggregate limit not allowed with different experiment enabled (2 ms)
      ✓ props not allowed on most expressions (4 ms)
      ✓ analytics can take parititon_by and order_by (7 ms)
      ✓ partition by works with scalar and aggregate (3 ms)
      ✓ partition by fails with analytic and ungrouped aggregate (2 ms)
      ✓ analytics order_by requires expression (3 ms)
      ✓ string_agg_distinct order by cannot specify expression (2 ms)
      ✓ string_agg_distinct order by can be just direction (2 ms)
      ✓ string_agg order by can be just direction (2 ms)
      ✓ can specify multiple partition_bys (19 ms)
      ✓ can specify multiple order_bys (3 ms)
      ✓ aggregate order by cannot be aggregate (2 ms)
      ✓ aggregate order by cannot be analytic (5 ms)
      ✓ analytic order by can be an aggregate (2 ms)
      ✓ analytic order by can be an output field (2 ms)
      ✓ analytic order by must be an output field (2 ms)
      ✓ can specify multiple wheres (4 ms)
      ✓ string_agg can take order_by (4 ms)
    aggregate forms
      ✓ one.column.min() (3 ms)
      ✓ one.min(one.column) (2 ms)
      ✓ min(one.column) (2 ms)
      ✓ min(many.column) (5 ms)
      ✓ min() (1 ms)
      ✓ source.min(column) (2 ms)
      ✓ many.column.max() (2 ms)
      ✓ max(many.column) (2 ms)
      ✓ max() (1 ms)
      ✓ source.max(many.column) (2 ms)
      ✓ many.column.count() (1 ms)
      ✓ count() (2 ms)
      ✓ count(many.column) (2 ms)
      ✓ source.count() (2 ms)
      ✓ many.count() (4 ms)
      ✓ sum() (1 ms)
      ✓ sum(column) (2 ms)
      ✓ sum(column * 2) (3 ms)
      ✓ column.sum() (2 ms)
      ✓ source.sum(column) (2 ms)
      ✓ sum(many.column) (2 ms)
      ✓ source.sum(many.column) (2 ms)
      ✓ many.column.sum() (1 ms)
      ✓ many.sum(many.column) (4 ms)
      ✓ sum(one.column) (2 ms)
      ✓ sum(many.constant) (2 ms)
      ✓ source.sum(many.constant) (2 ms)
      ✓ sum(nested.column) (2 ms)
      ✓ nested.column.sum() (2 ms)
      ✓ source.sum(nested.column) (2 ms)
      ✓ can aggregate field defined with no join usage (3 ms)
      ✓ sum(inline.column) (2 ms)
      ✓ inline.column.sum() (4 ms)
      ✓ source.sum(inline.column) (2 ms)
      ✓ sum(many.field) (2 ms)
      ✓ source.sum(many.field) (2 ms)
      ✓ many.field.sum() (2 ms)
      ✓ many.sum(many.field) (2 ms)
      ✓ sum(many.field + many.field) (3 ms)
      ✓ source.sum(many.field + many.field) (2 ms)
      ✓ many.field + many.field.sum() (3 ms)
      ✓ many.sum(many.field + many.field) (5 ms)
      ✓ sum(many_field) (3 ms)
      ✓ source.sum(many_field) (2 ms)
      ✓ many_field.sum() (2 ms)
      ✓ many.sum(many_field) (2 ms)
      ✓ sum(one.many_field) (2 ms)
      ✓ source.sum(one.many_field) (2 ms)
      ✓ one.many_field.sum() (2 ms)
      ✓ many.sum(one.many_field) (3 ms)
      ✓ sum(many.field + one.field) (5 ms)
      ✓ source.sum(many.field + one.field) (3 ms)
      ✓ many.sum(many.field + one.field) (2 ms)
      ✓ many_one_field.sum() (2 ms)
      ✓ sum(many_one_field) (2 ms)
      ✓ source.sum(many_one_field) (2 ms)
      ✓ many.sum(many_one_field) (2 ms)
      ✓ sum(many.one.field) (2 ms)
      ✓ sum(many.one.one.field) (2 ms)
      ✓ many.avg(field) (6 ms)
      ✓ one.avg(field) (2 ms)
      ✓ cross.avg(field) (2 ms)
      ✓ cross.avg(cross.field) (2 ms)
      ✓ one.column.sum() (1 ms)
      ✓ one.sum(one.column) (2 ms)
      ✓ source.sum(one.column) (2 ms)
      ✓ sum(one.column + one.column) (3 ms)
      ✓ one.sum(one.column + one.column) (2 ms)
      ✓ source.sum(one.column + one.column) (5 ms)
      ✓ lag(sum(output)) (3 ms)
    case statements
      ✓ full (6 ms)
      ✓ with value (2 ms)
      ✓ no else (2 ms)
      ✓ wrong then type (2 ms)
      ✓ wrong when type (1 ms)
      ✓ wrong else type (1 ms)
      ✓ null then type okay second (1 ms)
      ✓ null then type okay first (1 ms)
      ✓ null else type okay (2 ms)
      ✓ null then type before else okay (1 ms)
      ✓ non boolean when (1 ms)
      ✓ type of null then second (1 ms)
      ✓ type of null then first (1 ms)
      ✓ type of null else (1 ms)
      ✓ type of null then type before else (1 ms)
      ✓ replacement for full case (1 ms)
      ✓ replacement for case with no else
      ✓ replacement for case with value
      ✓ interaction with pick (13 ms)
    pick statements
      ✓ full (7 ms)
      ✓ applied (2 ms)
      ✓ filtering (1 ms)
      ✓ null branch with else (10 ms)
      ✓ null branch no else (1 ms)
      ✓ null branch no apply (1 ms)
      ✓ tiering (1 ms)
      ✓ transforming (2 ms)
      ✓ when single values (1 ms)
      ✓ n-ary without else (2 ms)
      ✓ n-ary with mismatch when clauses (4 ms)
      ✓ n-ary with mismatched else clause (3 ms)
      ✓ applied else mismatch (2 ms)
      ✓ applied default mismatch (2 ms)
      ✓ applied when mismatch (5 ms)
  alternations as in
    ✓ a=b|c (1 ms)
    ✓ a!=b|c (1 ms)
    ✓ a=(b|c) (2 ms)
    ✓ a?b|c (1 ms)
    ✓ a=(b)|c (1 ms)
    ✓ a=b|c|d (1 ms)
    ✓ a=(b|c)|d (5 ms)
    ✓ a=b|(c|d) (2 ms)
    ✓ a=b|c&d (1 ms)
    ✓ a=b|>d (2 ms)
    ✓ a ? (= (b | c)) (1 ms)
    ✓ legacy in (2 ms)
    ○ skipped a ? (( =1) | 2)
  sql native fields in schema
    ✓ sql native reference in result allowed (2 ms)
    ✓ sql native reference can be compared to NULL (3 ms)
    ✓ flag unsupported equality (1 ms)
    ✓ flag unsupported compare (4 ms)
    ✓ allow unsupported equality when raw types match (3 ms)
    ✓ flag not applied to unsupported (2 ms)
    ✓ allow unsupported to be cast (1 ms)
    ✓ negative numbers are not tokens (1 ms)
    sql functions
      ✓ can aggregate a sql_ function (2 ms)
      ✓ error when interpolating field that does not exist (2 ms)
      ✓ error when using sql_ function without experiment (2 ms)
    cast
      ✓ sql cast (5 ms)
      ✓ sql safe cast (7 ms)
      ✓ malloy cast (2 ms)
      ✓ malloy safe cast (1 ms)
      ✓ sql cast illegal type name (1 ms)

PASS test/src/core/tags.spec.ts
  tagParse to Tag
    ✓ tag just_name (9 ms)
    ✓ tag name=bare_string (1 ms)
    ✓ tag name="quoted_string" (1 ms)
    ✓ tag name {prop1} (2 ms)
    ✓ tag name {prop1 prop2=value} (1 ms)
    ✓ tag name.prop (1 ms)
    ✓ tag name.prop=value
    ✓ tag name.prop.sub=value
    ✓ tag name{first3=[a, b, c]} (2 ms)
    ✓ tag name{first1=[a,]}
    ✓ tag name{first=[a {A}]} (1 ms)
    ✓ tag name{first=[{A}]}
    ✓ tag name=value {prop}
    ✓ tag name.prop={prop2} (1 ms)
    ✓ tag no yes -no
    ✓ tag x -x.y (1 ms)
    ✓ tag x={y} -x.y
    ✓ tag x={y z} -x.y
    ✓ tag x={y z} x {-y} (1 ms)
    ✓ tag x=1 x {xx=11}
    ✓ tag x.y=xx x=1 {...} (1 ms)
    ✓ tag a {b c} a=1
    ✓ tag a=1 a=...{b}
    ✓ tag a=red { shade=dark } color=$(a) shade=$(a.shade) (1 ms)
    ✓ tag x=.01 (1 ms)
    ✓ tag x=-7
    ✓ tag x=7
    ✓ tag x=7.0 (1 ms)
    ✓ tag x=.7
    ✓ tag x=.7e2
    ✓ tag x=7E2 (1 ms)
    ✓ tag `spacey name`=Zaphod (1 ms)
    ✓ tag image { alt=hello { field=department } }
    ✓ tag image image.alt=hello image.alt.field=department
    ✓ tag can remove.properties -...
    ✓ inherits can be over-ridden (1 ms)
    ○ skipped unskip to debug just one of the expressions
  Tag access
    ✓ just text
    ✓ tag path (1 ms)
    ✓ just array
    ✓ array as text
    ✓ text as array
    ✓ just numeric (4 ms)
    ✓ text as numeric
    ✓ array as numeric (1 ms)
    ✓ full text array
    ✓ filtered text array
    ✓ full numeric array (1 ms)
    ✓ filtered numeric array
    ✓ has (1 ms)
  ## top level
    ✓ top level tags are available in the model def (100 ms)
  tags in results
    ✓ nameless query (266 ms)
    ✓ named query (29 ms)
    ✓ turtle query (111 ms)
    ✓ field ref has tag (24 ms)
    ✓ atomic field model scope tag (7 ms)
    ✓ nested query has tag (54 ms)
    ✓ render usage test case (20 ms)
    ✓ User defined scopes nest properly (7 ms)
    ✓ inherited model tags override (18 ms)
    ✓ property access on existing tag (which does not yet have properties) (1 ms)
    ✓ nested fields of same field do not share tags (15 ms)

PASS packages/malloy/src/lang/test/source.spec.ts
  source:
    ✓ table (123 ms)
    ✓ shorcut fitlered table (109 ms)
    ✓ fitlered table (2 ms)
    ✓ ref source with no refinement (4 ms)
    ✓ source from query (187 ms)
    ✓ refine source (9 ms)
    ✓ source refinement preserves original (3 ms)
    ✓ dates do not become timestamps (2 ms)
    source properties
      ✓ single dimension (1 ms)
      ✓ field def with null value (2 ms)
      ✓ multiple dimensions (14 ms)
      ✓ single declare ok b4 m4 (9 ms)
      ✓ multiple declare ok b4 m4 (2 ms)
      ✓ single measure (3 ms)
      ✓ multiple measures (22 ms)
      ✓ single where (3 ms)
      ✓ multiple where (5 ms)
      ✓ where clause can use the join namespace in source refined query (133 ms)
      ✓ primary_key (2 ms)
      ✓ rename (2 ms)
      ✓ accept single (2 ms)
      ✓ accept multi (2 ms)
      ✓ except single (1 ms)
      ✓ except multi (1 ms)
      ✓ turtle in a source can be called view (1 ms)
      ✓ turtle in source can be called query with m4 warning (2 ms)
      ✓ refined explore-query (16 ms)
      ✓ chained explore-query (8 ms)
      ✓ chained explore-query with refinement two steps (8 ms)
      ✓ pipelined explore-query with refinement (2 ms)
      ✓ pipelined explore-query with view chain (2 ms)
      ✓ multiple explore-query (2 ms)
      joins
        ✓ with (2 ms)
        ✓ with (2 ms)
        ✓ with dotted ref (2 ms)
        ✓ one on (2 ms)
        ✓ one is on (2 ms)
        ✓ many on (5 ms)
        ✓ many with (1 ms)
        ✓ many is on (2 ms)
        ✓ cross (2 ms)
        ✓ cross is (1 ms)
        ✓ cross on (2 ms)
        ✓ multiple joins (4 ms)
        ✓ with requires primary key (3 ms)
        ✓ can join a query without a rename (37 ms)
        ✓ can with join a single column query (7 ms)
      access modifiers and include
        ✓ private not accessible in query (110 ms)
        ✓ internal not accessible in query (3 ms)
        ✓ internal is accessible in source extension (3 ms)
        ✓ private is inaccessible in source extension (4 ms)
        ✓ internal is inaccessible in joining source on (3 ms)
        ✓ internal at definition time (2 ms)
        ✓ internal is inaccessible in joining source field (5 ms)
        ✓ internal is inaccessible in view reference (4 ms)
        ✓ private field used in view is accessible outside via view (3 ms)
        ✓ use internal field in query in extension (2 ms)
        ✓ cannot expand access from private (2 ms)
        ✓ can expand access from internal explicitly (3 ms)
        ✓ can expand access from internal with star (1 ms)
        ✓ star does not expand access (3 ms)
        ✓ access modifier * (1 ms)
        ✓ private things can be used in immediate extension (1 ms)
        ✓ private things cannot be used in later extension (2 ms)
        ✓ access modifier * except (22 ms)
        ✓ access modifier * nonconflicting use (3 ms)
        ✓ cannot override in same source (2 ms)
        ✓ rename in include (3 ms)
        ✓ commas optional in include (33 ms)
        ✓ include and except list (21 ms)
        ✓ except and include list (3 ms)
    composite sources
      ✓ basic composite source (3 ms)

PASS test/src/core/sql_source.spec.ts
  turducken
    ✓ malloy source code is wrapped in parens (341 ms)
    ✓ malloy source code not double-wrapped in parens (8 ms)

PASS packages/malloy/src/lang/test/syntax-errors.spec.ts
  errors
    ✓ source missing closing curly: EOF (140 ms)
    ✓ view is missing name (84 ms)
    ✓ missing closing curly, source>view (186 ms)
    ✓ incorrect opening curly after dimension (19 ms)
    ✓ misspelled primarykey (1 ms)
    ✓ missing opening curly after source extend keyword (313 ms)

PASS packages/malloy/src/lang/test/lenses.spec.ts
  lenses
    ✓ long lens patterns (633 ms)
    ✓ lens parens patterns (46 ms)
    ✓ cannot have overlapping names (10 ms)
    ✓ cannot override limit (8 ms)
    ✓ cannot override ordering (11 ms)
    ✓ weird issue with order by constant group by (2 ms)
    ✓ can add a limit late (7 ms)
    ✓ cannot refine with incompatible view types (32 ms)
    ✓ can reference dimension at head of query when experiment is enabled (4 ms)
    ✓ can change refine precedence (12 ms)
    ✓ cannot refine with multi-stage (3 ms)
    ✓ cannot refine with literal multi-stage (10 ms)
    ✓ can reference dimension in refinement when experiment is enabled (2 ms)
    ✓ can reference join field when experiment is enabled (25 ms)
    ✓ can reference join field in refinement when experiment is enabled (9 ms)
    ✓ can reference join field in nest refinement when experiment is enabled (4 ms)
    ✓ can nest dimension when experiment is enabled (2 ms)
    ✓ cannot use join_name in refinement shortcut (7 ms)
    ✓ cannot use view from join as whole pipeline (7 ms)
    ✓ cannot use view from join in nest (3 ms)
    ✓ cannot use view from join as nest view head (4 ms)
    ✓ cannot use view from join as lens in query (3 ms)
    ✓ cannot use view from join as lens in nest (5 ms)
    ✓ can nest dimension with refinement when experiment is enabled (21 ms)
    ✓ cannot reference join (2 ms)
    ✓ cannot reference field in LHS of refinement in group_by (6 ms)
    ✓ cannot named-refine multi-stage query (4 ms)
    ○ skipped can split multi-stage refinement with plus
  partial views
    ✓ allow where-headed refinement chains (4 ms)
    ✓ order by tacked on the end should work (12 ms)
    ✓ name can be inferred with arrow (3 ms)
    ✓ nice error when nest has no name (1 ms)
    ✓ disallow chains that have no fields in view (4 ms)
    ✓ disallow chains that have no fields in multi-stage (3 ms)
    ✓ copy of view with refinement should work (2 ms)
    ○ skipped partial with index

PASS packages/malloy/src/lang/test/pretranslate.spec.ts
  pretranslated models
    ✓ import of pretranslated (116 ms)

PASS packages/malloy/src/lang/test/locations.spec.ts
  source locations
    ✓ renamed source location (125 ms)
    ✓ refined source location (23 ms)
    ✓ location of defined dimension (79 ms)
    ✓ location of defined measure (4 ms)
    ✓ location of defined view (167 ms)
    ✓ location of defined field inside a view (2 ms)
    ✓ location of filtered field inside a view (23 ms)
    ✓ location of field inherited from table (3 ms)
    ✓ location of field inherited from sql source (4 ms)
    ✓ location of fields inherited from a query (20 ms)
    ✓ location of named query (36 ms)
    ✓ location of field in named query (2 ms)
    ✓ location of renamed field (3 ms)
    ✓ location of join on (25 ms)
    ✓ location of join with (2 ms)
    ✓ location of field in join (5 ms)
    ✓ undefined query location (2 ms)
    ✓ undefined field reference (1 ms)
    ✓ bad query (2 ms)
    ○ skipped undefined field reference in top
    ○ skipped undefined field reference in order_by
    ✎ todo location of parameter
  source references
    ✓ reference to explore (2 ms)
    ✓ reference to query in query (5 ms)
    ✓ reference to query in query (version 2) (1 ms)
    ✓ reference to query (2 ms)
    ✓ reference to query in query head (3 ms)
    ✓ reference to query in refined query (4 ms)
    ✓ reference to field in expression (6 ms)
    ✓ reference to quoted field in expression (3 ms)
    ✓ reference to joined field in expression (15 ms)
    ✓ reference to joined join in expression (2 ms)
    ✓ reference to field not in expression (group by) (2 ms)
    ✓ reference to field not in expression (project) (1 ms)
    ✓ reference to field in aggregate (2 ms)
    ✓ reference to field in measure (4 ms)
    ✓ reference to field in filter (2 ms)
    ✓ reference to field in aggregate source (3 ms)
    ✓ reference to join in aggregate source (3 ms)
    ✓ reference to join in aggregate in expr (2 ms)
    ✓ reference to sourcein join (2 ms)
    ✓ reference to field in aggregate (in expr) (2 ms)
    ✓ reference to field in rename (2 ms)
    ✓ reference to field in join with (1 ms)
    ○ skipped reference to field in order by
    ○ skipped reference to field in order by (output space)
    ○ skipped reference to field in top
    ○ skipped reference to field in top (output space)

PASS packages/malloy/src/lang/test/imports.spec.ts
  import:
    ✓ simple source (127 ms)
    ✓ simple source with importBaseURL (6 ms)
    ✓ simple query (179 ms)
    ✓ query based source with named structref (137 ms)
    ✓ missing import (1 ms)
    ✓ chained imports (4 ms)
    ✓ relative imports (9 ms)
    ✓ relative imports with errors (10 ms)
    ✓ source references expanded when not exported (25 ms)
    ✓ selective import of source (4 ms)
    ✓ renaming import of source (2 ms)
    ✓ selective import of source, not found (5 ms)
    ✓ selective renamed import of source, not found (2 ms)
    ✓ selective import of source, no-redefinition (2 ms)

PASS packages/malloy/src/lang/test/document-symbol-walker.spec.ts
  ✓ source symbols are included (118 ms)
  ✓ query symbols are included (29 ms)
  ✓ run (def) symbols are included (1 ms)
  ✓ run (ref) symbols are included (1 ms)
  ✓ expression field defs are included (97 ms)
  ✓ renamed fields are included (1 ms)
  ✓ name only fields are included (4 ms)
  ✓ turtle fields are included (162 ms)
  ✓ turtle children fields are included (1 ms)
  ✓ turtle children turtles are included (12 ms)
  ✓ refinement chain gets name correctly (14 ms)
  ✓ arrow in nest infers name correctly (3 ms)
  ✓ join withs are included (17 ms)
  ✓ join ons are included
  ✓ source lenses go before block annotations when one source (4 ms)
  ✓ source lenses go before individual annotations when more than one source (11 ms)
  ✓ query lenses go before block annotations when one source (3 ms)
  ✓ query lenses go before individual annotations when more than one source (12 ms)
  ✓ anonymous query lenses go before block annotations (1 ms)
  ✓ run lenses go before block annotations (2 ms)
  ✓ multiline unnamed queries include last line (1 ms)
  ✓ multiline named queries include last line
  ✓ (regression) query does not use source block range (24 ms)

PASS packages/malloy/src/lang/test/composite-field-usage.spec.ts
  composite sources
    composite field usage
      ✓ looked up value (2 ms)
      ✓ multiple values (1 ms)
      ✓ value plus constant (2 ms)
      ✓ join usage (8 ms)
      ✓ join usage complex (1 ms)
      ✓ measure defined in composite source (1 ms)
      ✓ measure with filter defined in composite source (1 ms)
    composite source resolution and validation
      ✓ compose fails on group_by that is relevant (176 ms)
      ✓ compose fails on filter that is relevant (4 ms)
      ✓ compose fails in case where second field has overlap with first (3 ms)
      ✓ compose resolution succeeds nested (26 ms)
      ✓ good composite field usage works (2 ms)
      ✓ index on composite translates (5 ms)
      ✓ raw run of composite source fails (2 ms)
      ✓ composite source with parameter (7 ms)
      ✓ composite source does not include private field (3 ms)
      ✓ composite source does not resolve to private field (2 ms)
      ✓ composite source does include internal field (7 ms)
      ✓ access level mismatch in composite (before) (2 ms)
      ✓ access level mismatch in composite (after) (4 ms)
      ✓ array.each is okay (4 ms)
      ✓ timevalue extract okay (4 ms)

PASS packages/malloy/src/lang/test/literals.spec.ts
  literals
    ✓ integer (42 ms)
    ✓ string (2 ms)
    ✓ string with quoted quote (2 ms)
    ✓ string with quoted backslash (1 ms)
    ✓ @1960 (6 ms)
    ✓ @1960-Q2 (2 ms)
    ✓ @1960-06 (2 ms)
    ✓ @1960-06-26-WK (2 ms)
    ✓ @1960-06-30 (2 ms)
    ✓ @1960-06-30 10 (1 ms)
    ✓ @1960-06-30 10:30 (2 ms)
    ✓ @1960-06-30 10:30:00 (1 ms)
    ✓ @1960-06-30 10:30:00.123 (1 ms)
    ✓ @1960-06-30T10:30:00 (2 ms)
    ✓ @1960-06-30 10:30:00[America/Los_Angeles] (4 ms)
    ✓ morphic value for @1960 is 1960-01-01 00:00:00 (1 ms)
    ✓ morphic value for @1960-Q2 is 1960-04-01 00:00:00 (1 ms)
    ✓ morphic value for @1960-06 is 1960-06-01 00:00:00 (2 ms)
    ✓ morphic value for @1960-06-26-Wk is 1960-06-26 00:00:00 (1 ms)
    ✓ morphic value for @1960-06-30 is 1960-06-30 00:00:00 (1 ms)
    ✓ morphic value for @1960-06-30 00:00 is undefined (1 ms)
    ✓ minute+locale (1 ms)
    ✓ second 8601 (2 ms)
    ✓ null (1 ms)
    ✓ now (2 ms)
    ✓ true (1 ms)
    ✓ false (1 ms)
    ✓ regex (4 ms)
    quote comprehension inside strings
      ✓ \b
      ✓ \f
      ✓ \n
      ✓ \r
      ✓ \t
      ✓ unicode ?
      ✓ normal stuff
      ✓ stuff & nonsense
      ✓ one thing\nnext thing
      ✓ quote stripping works
    string parsing in language
      ✓ multi-line indent increasing (4 ms)
      ✓ multi-line indent decreasing (1 ms)
      ✓ multi-line indent keep (1 ms)
      ✓ timezone single quote (248 ms)
      ✓ timezone double quote (3 ms)
      ✓ timezone triple quote (3 ms)
      ✓ timezone with illegal query (6 ms)
      ✓ table single quote (11 ms)
      ✓ table double quote (1 ms)
      ✓ table triple quote
      ✓ sql single quote (1 ms)
      ✓ sql double quote (2 ms)
      ✓ sql triple quote (1 ms)
      ✓ import single quote
      ✓ import double quote (1 ms)
      ✓ import triple quote
      ✓ literal single quote (1 ms)
      ✓ literal double quote (4 ms)
      ✓ literal triple quote (1 ms)
      ✓ a string containing a tab (1 ms)
    compound literals
      ✓ simple record literal (5 ms)
      ✓ record literal with path (13 ms)
      ✓ array of records with same schema (3 ms)
      ✓ array of records with head schema (1 ms)

PASS packages/malloy/src/lang/test/document-help-context-walker.spec.ts
  ✓ Supports model properties (415 ms)
  ✓ Supports source properties (3 ms)
  ✓ Supports query properties (3 ms)

PASS packages/malloy-syntax-highlight/grammars/malloy/malloy.spec.ts
  malloy
    ✓ correctly tokenizes
	"// / ' " """ // unable to break out of /* line comments"
	with correct colors
    ✓ correctly tokenizes
	" -- a different -- line comment"
	with correct colors
    ✓ correctly tokenizes
	"    /* *** / * // " " ' \'"
	"   """ multi-line * /*"
	"" */  -- escaped block"
	with correct colors (1 ms)
    ✓ correctly tokenizes
	"  sample: true"
	with correct colors
    ✓ correctly tokenizes
	"fl1ght_y34r is `Year of Flight 256/* */`  -- escapes identifier"
	with correct colors
    ✓ correctly tokenizes
	"`Year"
	"  -- escapes quoted identifier at newline"
	with correct colors
    ✓ correctly tokenizes
	"`Disposable Income` is (0.88 * b1) + 84 / 100.00 * b2 + (.79 * `b3`)  "
	with correct colors
    ✓ correctly tokenizes
	"(123E4, 1E-27, E4, 0E+1)"
	with correct colors (1 ms)
    ✓ correctly tokenizes
	"avg(count(distinct session_id))"
	with correct colors
    ✓ correctly tokenizes
	"`year` is year(dep_time)::string  // interpret year as 'categorical'"
	with correct colors
    ✓ correctly tokenizes
	"is hash!number(us3r_n4me)  -- SQL function usage"
	with correct colors
    ✓ correctly tokenizes
	"(@2001-02-03 04:05:06.001[America/Mexico_City], @2005-01-28 12:12:12.999, @1961-02-14 09:30:15, @2017-10-03 07:23) "
	with correct colors
    ✓ correctly tokenizes
	"event_time ~ @2003-Q1 for 6 quarters"
	with correct colors (1 ms)
    ✓ correctly tokenizes
	"(@2021, @2022-06, @2022-09-09, @2023-06-25-WK)"
	with correct colors
    ✓ correctly tokenizes
	"'a string with \escapes\u0FF1 \'more\"
	with correct colors
    ✓ correctly tokenizes
	"state ? """ multiple " " \u "" \u2001 ' /* -- // " \"
	" lines "
	" """  -- exited"
	with correct colors
    ✓ correctly tokenizes
	"/'regexp string /*-- \escapes\uFFFF \'more\"
	with correct colors
    ✓ correctly tokenizes
	""/* -- \e\uFFFF \'\"
	with correct colors
    ✓ correctly tokenizes
	"state ~ 'CA' | r'M.' | "CO" | /'O.'  -- end"
	with correct colors
    ✓ correctly tokenizes
	"run: duckdb.sql(""""
	"  SELECT 1"
	"""")"
	with correct colors

PASS packages/malloy/src/lang/test/model_serialization.spec.ts
  serializeModel
    ✓ Stringify on an `explore` with no parent nor source explore (1 ms)
    ✓ No parent nor source explore
    ✓ Having parent and source explores

PASS packages/malloy-malloy-sql/src/grammar/test/parse.spec.ts
  MalloySQL parse
    Should parse inital comments
      ✓ initial single-line forward-slash comment (1 ms)
      ✓ initial single-line double-dash comment (1 ms)
      ✓ initial multi-line comment
      ✓ initial comments mixed
    Should parse control statement
      ✓ Should parse immediate delimiter (1 ms)
      ✓ Should parse initial comments and delimiter
      ✓ Should parse multiple empty control statements (1 ms)
    Should parse statement
      ✓ Should parse statement with comments (1 ms)
      ✓ Should parse statements
    connection: config
      ✓ Should not allow connection in >>>malloy line
      ✓ Should not allow anything besides comments in >>>malloy line
      ✓ Should handle a connection in a delimiter
      ✓ Should handle a connection in a comment (1 ms)
      ✓ Should mark a connection as inherited
    Embedded Malloy
      ✓ Parenthesized embedded malloy can handle space between ( and {%
      ✓ Non-parenthesized embedded malloy
    Parse output
      ✓ Should provide correct output for single statement (1 ms)
      ✓ Should provide correct output for multiple statements
      ✓ Should provide correct output for mulitple statements with embedded malloy (1 ms)
      ✓ Should provide correct output for embedded >>> (2 ms)
      ✓ Should provide correct output for cells that contain only comments

PASS packages/malloy/src/lang/test/find-table-path-walker.spec.ts
  ✓ Table path can be retrieved (227 ms)
  ✓ Table path can not be retrieved
  ✓ Table path can not be retrieved for non string path (3 ms)

PASS packages/malloy-db-trino/src/trino_connection.spec.ts
  Trino connection
    schema parser
      ✓ parses arrays (1 ms)
      ✓ parses inline
      ✓ parses nested
      ✓ parses a simple type
      ✓ parses a decimal integer type
      ✓ parses a decimal float type
      ✓ parses row with timestamp(3) (1 ms)
      ✓ parses deep nesting

PASS packages/malloy/src/lang/test/model-annotation-walker.spec.ts
  ✓ model annotations can be retrieved (101 ms)
  ✓ does not explode if bad parse (3 ms)

PASS packages/malloy/src/lang/test/field-symbols.spec.ts
  structdef comprehension
    ✓ import string field (1 ms)
    ✓ import float field
    ✓ import integer field (1 ms)
    ✓ import boolean field
    ✓ import unsupported field (1 ms)
    ✓ import repeated record
    ✓ import inline field
    ✓ import join field (1 ms)
    ✓ import query stage field
    ✓ import struct with parameters (1 ms)

PASS packages/malloy/src/model/utils.spec.ts
  model/utils
    ✓ should generate deterministic hashes (1 ms)
    ✓ should generate unique hashes (1 ms)

Summary of all failing tests
FAIL test/src/databases/all/functions.spec.ts (369.645 s)
  ● concat › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "17fe031e-4c96-4093-b8b9-ae9453f6435d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:24:55.563Z",
      "Database": "dev",
      "Duration": 53336150,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", boolean) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "50330e55-69ca-4b2d-b74e-7295c652f4a8",
      "RedshiftPid": 1073873261,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:24:55.668Z",
          "Duration": 53336150,
          "HasResultSet": false,
          "Id": "50330e55-69ca-4b2d-b74e-7295c652f4a8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:24:56.138Z"
        },
        {
          "CreatedAt": "2025-02-28T02:24:55.672Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", boolean) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "50330e55-69ca-4b2d-b74e-7295c652f4a8:2",
          "QueryString": "SELECT \n   CONCAT('foo','bar') as \"f0\",\n   CONCAT(1,'bar') as \"f1\",\n   CONCAT('cons',true) as \"f2\",\n   CONCAT('foo',DATE '2003-01-01') as \"f3\",\n   CONCAT('foo',TIMESTAMP '2003-01-01 12:00:00') as \"f4\",\n   '' as \"f5\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4,5,6\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:24:56.138Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:24:56.203Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● round › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: "1"

      119 |       // console.log(databaseName, result.sql);
      120 |       // console.log(result.data);
    > 121 |       expect(result.data.path(0, `f${i}`).value).toBe(testCase[1]);
          |                                                  ^
      122 |     });
      123 |   };
      124 |

      at test/src/databases/all/functions.spec.ts:121:50
          at Array.forEach (<anonymous>)
      at funcTestMultiple (test/src/databases/all/functions.spec.ts:118:15)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:161:7)

  ● floor › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "94c93d2b-0077-4ce3-a73f-b334c9b5e8ef",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:01.781Z",
      "Database": "dev",
      "Duration": 53411088,
      "Error": "Query #2 failed with ERROR: function floor(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "04db8646-ec82-4af0-a3c7-0baa0dfe77e5",
      "RedshiftPid": 1073987682,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:01.881Z",
          "Duration": 53411088,
          "HasResultSet": false,
          "Id": "04db8646-ec82-4af0-a3c7-0baa0dfe77e5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:02.314Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:01.884Z",
          "Duration": -1,
          "Error": "ERROR: function floor(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "04db8646-ec82-4af0-a3c7-0baa0dfe77e5:2",
          "QueryString": "SELECT \n   FLOOR(1.9) as \"f0\",\n   FLOOR(-1.9) as \"f1\",\n   FLOOR(NULL) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:02.314Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:02.379Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● ceil › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "16c85105-36f7-4aef-b6b5-8ca9936b2255",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:03.157Z",
      "Database": "dev",
      "Duration": 52677381,
      "Error": "Query #2 failed with ERROR: function ceil(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "07792093-c0d6-4749-b59c-238a2e133f6b",
      "RedshiftPid": 1073791095,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:03.262Z",
          "Duration": 52677381,
          "HasResultSet": false,
          "Id": "07792093-c0d6-4749-b59c-238a2e133f6b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:03.722Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:03.266Z",
          "Duration": -1,
          "Error": "ERROR: function ceil(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "07792093-c0d6-4749-b59c-238a2e133f6b:2",
          "QueryString": "SELECT \n   CEIL(1.9) as \"f0\",\n   CEIL(-1.9) as \"f1\",\n   CEIL(NULL) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:03.722Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:03.787Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● replace › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e1e47daa-04fe-441b-9af8-92cba83d7568",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:20.002Z",
      "Database": "dev",
      "Duration": 52732111,
      "Error": "Query #2 failed with ERROR: invalid input syntax for integer: \"g\"",
      "HasResultSet": false,
      "Id": "5b5c8d69-21f3-44c5-b9cc-c063c1a25af9",
      "RedshiftPid": 1073987687,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:20.095Z",
          "Duration": 52732111,
          "HasResultSet": false,
          "Id": "5b5c8d69-21f3-44c5-b9cc-c063c1a25af9:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:20.529Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:20.098Z",
          "Duration": -1,
          "Error": "ERROR: invalid input syntax for integer: \"g\"",
          "HasResultSet": false,
          "Id": "5b5c8d69-21f3-44c5-b9cc-c063c1a25af9:2",
          "QueryString": "SELECT \n   REPLACE('aaaa','a','c') as \"f0\",\n   REGEXP_REPLACE('aaaa', '.', 'c', 'g') as \"f1\",\n   REGEXP_REPLACE('axbxc', '(a).(b).(c)', '\\0 - \\1 - \\2 - \\3', 'g') as \"f2\",\n   REPLACE('aaaa','','c') as \"f3\",\n   REPLACE(NULL,'a','c') as \"f4\",\n   REPLACE('aaaa',NULL,'c') as \"f5\",\n   REPLACE('aaaa','a',NULL) as \"f6\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4,5,6,7\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:20.529Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:20.593Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● stddev › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: 29
    Received: "29"

      87 |     if (expected.success !== undefined) {
      88 |       const result = await run();
    > 89 |       expect(result.data.path(0, 'f').value).toBe(expected.success);
         |                                              ^
      90 |     } else {
      91 |       expect(run).rejects.toThrowError(expected.error);
      92 |     }

      at funcTestGeneral (test/src/databases/all/functions.spec.ts:89:46)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:298:7)

  ● stddev › works with struct - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9a4eb94b-fb17-4bc2-9c60-d94ed310e66b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:37.795Z",
      "Database": "dev",
      "Duration": 51524191,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
      "HasResultSet": false,
      "Id": "98573829-bf7e-4449-b4dd-c6782aca211d",
      "RedshiftPid": 1073766501,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:37.902Z",
          "Duration": 51524191,
          "HasResultSet": false,
          "Id": "98573829-bf7e-4449-b4dd-c6782aca211d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:38.346Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:37.906Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
          "HasResultSet": false,
          "Id": "98573829-bf7e-4449-b4dd-c6782aca211d:2",
          "QueryString": "SELECT \n   ROUND(((\n        SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0.\"aircraft_model_code\",aircraft_models_0.\"seats\"))::text)) a\n        ) a\n      ))::NUMERIC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:38.346Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:38.411Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● stddev › works with implicit parameter - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0bb174fb-3bd8-458c-a269-0c9c7e7a502e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:39.216Z",
      "Database": "dev",
      "Duration": 52240431,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
      "HasResultSet": false,
      "Id": "4f794a26-86fa-4931-9400-a6081f99cef1",
      "RedshiftPid": 1073881214,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:39.321Z",
          "Duration": 52240431,
          "HasResultSet": false,
          "Id": "4f794a26-86fa-4931-9400-a6081f99cef1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:39.797Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:39.324Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
          "HasResultSet": false,
          "Id": "4f794a26-86fa-4931-9400-a6081f99cef1:2",
          "QueryString": "SELECT \n   ROUND(((\n        SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0.\"aircraft_model_code\",aircraft_models_0.\"seats\"))::text)) a\n        ) a\n      ))::NUMERIC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:39.797Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:39.861Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● stddev › works with filter - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "82b98c2c-8360-4674-a6c0-fed41566e6cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:40.633Z",
      "Database": "dev",
      "Duration": 52044906,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
      "HasResultSet": false,
      "Id": "1f74f50a-7d6a-4966-afef-5f875ec0e8cc",
      "RedshiftPid": 1073848434,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:40.732Z",
          "Duration": 52044906,
          "HasResultSet": false,
          "Id": "1f74f50a-7d6a-4966-afef-5f875ec0e8cc:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:41.192Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:40.735Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 5, column 18\n  Position: 120",
          "HasResultSet": false,
          "Id": "1f74f50a-7d6a-4966-afef-5f875ec0e8cc:2",
          "QueryString": "SELECT \n   ROUND(((\n        SELECT STDDEV((a::json->>'f2')::DOUBLE PRECISION) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(aircraft_models_0.\"aircraft_model_code\",CASE WHEN 1=1 THEN aircraft_models_0.\"seats\" END))::text)) a\n        ) a\n      ))::NUMERIC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:41.192Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:41.257Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● row_number › works inside nest - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e733cdfa-3527-4316-ad6b-4e9496bf0623",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:57.489Z",
      "Database": "dev",
      "Duration": 44057639,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
      "HasResultSet": false,
      "Id": "6b3cc7ef-51c0-47ab-b226-8dc639c522e6",
      "RedshiftPid": 1073873013,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:57.603Z",
          "Duration": 44057639,
          "HasResultSet": false,
          "Id": "6b3cc7ef-51c0-47ab-b226-8dc639c522e6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:58.042Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:57.606Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
          "HasResultSet": false,
          "Id": "6b3cc7ef-51c0-47ab-b226-8dc639c522e6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      airports_0.\"county\"\n      END as \"county__1\",\n    CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base.\"state\"  ORDER BY  CASE WHEN group_set=1 THEN\n      airports_0.\"county\"\n      END asc NULLS LAST ) END as \"row_num__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n   LEFT JOIN \"malloytest\".\"airports\" AS airports_0\n    ON airports_0.\"state\"=base.\"state\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"county__1\" as \"county\", \n    \"row_num__1\"::DOUBLE PRECISION as \"row_num\"\n    ) as __x)  ORDER BY  \"county__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"q\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:58.042Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:58.108Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● row_number › works outside nest, but with a nest nearby - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "04c12d67-c82c-4cfd-862c-a98eb0f1051c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:25:58.915Z",
      "Database": "dev",
      "Duration": 43685151,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"row_num__0\") FILTER\", at line 15, column 28\n  Position: 453",
      "HasResultSet": false,
      "Id": "71c79e26-1079-485d-a9e5-4ddb52322197",
      "RedshiftPid": 1073971305,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:25:59.014Z",
          "Duration": 43685151,
          "HasResultSet": false,
          "Id": "71c79e26-1079-485d-a9e5-4ddb52322197:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:25:59.478Z"
        },
        {
          "CreatedAt": "2025-02-28T02:25:59.017Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"row_num__0\") FILTER\", at line 15, column 28\n  Position: 453",
          "HasResultSet": false,
          "Id": "71c79e26-1079-485d-a9e5-4ddb52322197:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  base.\"state\" asc NULLS LAST ) END as \"row_num__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__0\" as \"state\",\n  (ARRAY_AGG(\"row_num__0\") FILTER (WHERE group_set=0 AND \"row_num__0\" IS NOT NULL))[1] as \"row_num\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\"\n    ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"nested\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:25:59.478Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:25:59.542Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● rank › works ordered by aggregate - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ec2f86e2-1015-424b-a487-6821639d72d3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:08.278Z",
      "Database": "dev",
      "Duration": 52219436,
      "Error": "Query #2 failed with ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     631631[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073766504]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "2bf6dd2e-80b0-449e-bd36-83047083c762",
      "RedshiftPid": 1073766504,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:08.369Z",
          "Duration": 52219436,
          "HasResultSet": false,
          "Id": "2bf6dd2e-80b0-449e-bd36-83047083c762:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:08.828Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:08.372Z",
          "Duration": -1,
          "Error": "ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     631631[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073766504]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "2bf6dd2e-80b0-449e-bd36-83047083c762:2",
          "QueryString": "SELECT \n   SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) as \"first_letter\",\n   (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 as \"states_with_first_letter_ish\",\n   RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST ) as \"r\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:08.828Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:08.892Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● rank › works using unary minus in calculate block - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f92fa976-5ffc-48e9-906d-9e8db50b5217",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:09.650Z",
      "Database": "dev",
      "Duration": 43102273,
      "Error": "Query #2 failed with ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     631638[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073750122]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "ab7ff448-6b4d-4321-aca0-2dfa4c3652fe",
      "RedshiftPid": 1073750122,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:09.738Z",
          "Duration": 43102273,
          "HasResultSet": false,
          "Id": "ab7ff448-6b4d-4321-aca0-2dfa4c3652fe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:10.176Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:09.741Z",
          "Duration": -1,
          "Error": "ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     631638[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073750122]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "ab7ff448-6b4d-4321-aca0-2dfa4c3652fe:2",
          "QueryString": "SELECT \n   SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) as \"first_letter\",\n   (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 as \"states_with_first_letter_ish\",\n   RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST ) as \"r\",\n   -(RANK() OVER(  ORDER BY  (ROUND((COUNT(1)*1.0/2)::NUMERIC))*2 desc NULLS LAST )) as \"neg_r\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:10.176Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:10.241Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● rank › properly isolated nested calculations - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8ce33039-1286-48dd-9b05-cb0fc485d8cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:11.029Z",
      "Database": "dev",
      "Duration": 43468589,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 39, column 73\n  Position: 1390",
      "HasResultSet": false,
      "Id": "18a7520d-a085-4755-891a-be9571894b9f",
      "RedshiftPid": 1073881211,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:11.129Z",
          "Duration": 43468589,
          "HasResultSet": false,
          "Id": "18a7520d-a085-4755-891a-be9571894b9f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:11.571Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:11.132Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 39, column 73\n  Position: 1390",
          "HasResultSet": false,
          "Id": "18a7520d-a085-4755-891a-be9571894b9f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"faa_region\" as \"faa_region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"id__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"fac_type\"\n      END as \"fac_type__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base.\"faa_region\"  ORDER BY  CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"id2__1\",\n    CASE WHEN group_set=2 THEN\n      AVG(base.\"elevation\")\n      END as \"avg_elevation__2\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"faa_region__0\" as \"faa_region__0\",\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    MAX(\"id__0\") as \"id__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"fac_type__1\"\n      END as \"fac_type__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    MAX(\"id2__1\") as \"id2__1\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"avg_elevation__2\"::DOUBLE PRECISION as \"avg_elevation\") as __x)) FILTER (WHERE group_set=2))[1]) as \"elevation__1\"\n  FROM __stage0\n  GROUP BY 1,2,5\n)\n, __stage2 AS (\n  SELECT\n    \"faa_region__0\" as \"faa_region\",\n    (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n    (ARRAY_AGG(\"id__0\") FILTER (WHERE group_set=0 AND \"id__0\" IS NOT NULL))[1] as \"id\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"fac_type__1\" as \"fac_type\", \n      \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n      \"id2__1\"::DOUBLE PRECISION as \"id2\", \n      \"elevation__1\" as \"elevation\"\n      ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_fac_type\"\n  FROM __stage1\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(by_fac_type_0,'id2')::double precision as \"id2\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"by_fac_type\") as by_fac_type_0 ON true\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:11.571Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:11.637Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."faa_region" as "faa_region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "airport_count__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "id__0",
        CASE WHEN group_set IN (1,2) THEN
          base."fac_type"
          END as "fac_type__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "airport_count__1",
        CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base."faa_region"  ORDER BY  CASE WHEN group_set=1 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "id2__1",
        CASE WHEN group_set=2 THEN
          AVG(base."elevation")
          END as "avg_elevation__2"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "faa_region__0" as "faa_region__0",
        MAX("airport_count__0") as "airport_count__0",
        MAX("id__0") as "id__0",
        CASE WHEN group_set IN (1,2) THEN
          "fac_type__1"
          END as "fac_type__1",
        MAX("airport_count__1") as "airport_count__1",
        MAX("id2__1") as "id2__1",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "avg_elevation__2"::DOUBLE PRECISION as "avg_elevation") as __x)) FILTER (WHERE group_set=2))[1]) as "elevation__1"
      FROM __stage0
      GROUP BY 1,2,5
    )
    , __stage2 AS (
      SELECT
        "faa_region__0" as "faa_region",
        (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
        (ARRAY_AGG("id__0") FILTER (WHERE group_set=0 AND "id__0" IS NOT NULL))[1] as "id",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "fac_type__1" as "fac_type", 
          "airport_count__1"::DOUBLE PRECISION as "airport_count", 
          "id2__1"::DOUBLE PRECISION as "id2", 
          "elevation__1" as "elevation"
          ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as "by_fac_type"
      FROM __stage1
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(by_fac_type_0,'id2')::double precision as "id2"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."by_fac_type") as by_fac_type_0 ON true
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8ce33039-1286-48dd-9b05-cb0fc485d8cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:11.029Z",
      "Database": "dev",
      "Duration": 43468589,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 39, column 73\n  Position: 1390",
      "HasResultSet": false,
      "Id": "18a7520d-a085-4755-891a-be9571894b9f",
      "RedshiftPid": 1073881211,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:11.129Z",
          "Duration": 43468589,
          "HasResultSet": false,
          "Id": "18a7520d-a085-4755-891a-be9571894b9f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:11.571Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:11.132Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 39, column 73\n  Position: 1390",
          "HasResultSet": false,
          "Id": "18a7520d-a085-4755-891a-be9571894b9f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"faa_region\" as \"faa_region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"id__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"fac_type\"\n      END as \"fac_type__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=1 THEN ROW_NUMBER() OVER(PARTITION BY group_set, base.\"faa_region\"  ORDER BY  CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"id2__1\",\n    CASE WHEN group_set=2 THEN\n      AVG(base.\"elevation\")\n      END as \"avg_elevation__2\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"faa_region__0\" as \"faa_region__0\",\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    MAX(\"id__0\") as \"id__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"fac_type__1\"\n      END as \"fac_type__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    MAX(\"id2__1\") as \"id2__1\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"avg_elevation__2\"::DOUBLE PRECISION as \"avg_elevation\") as __x)) FILTER (WHERE group_set=2))[1]) as \"elevation__1\"\n  FROM __stage0\n  GROUP BY 1,2,5\n)\n, __stage2 AS (\n  SELECT\n    \"faa_region__0\" as \"faa_region\",\n    (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n    (ARRAY_AGG(\"id__0\") FILTER (WHERE group_set=0 AND \"id__0\" IS NOT NULL))[1] as \"id\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"fac_type__1\" as \"fac_type\", \n      \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n      \"id2__1\"::DOUBLE PRECISION as \"id2\", \n      \"elevation__1\" as \"elevation\"\n      ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_fac_type\"\n  FROM __stage1\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(by_fac_type_0,'id2')::double precision as \"id2\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"by_fac_type\") as by_fac_type_0 ON true\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:11.571Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:11.637Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:508:10)

  ● lag › works with default value - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8337d8a0-6f68-488b-89fb-b8d80b9d5770",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:55.430Z",
      "Database": "dev",
      "Duration": 44705993,
      "Error": "Query #2 failed with ERROR: Default parameter not be supported for window function lag",
      "HasResultSet": false,
      "Id": "b853cc20-33a0-40f4-b538-5c2d177c9669",
      "RedshiftPid": 1073873021,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:55.546Z",
          "Duration": 44705993,
          "HasResultSet": false,
          "Id": "b853cc20-33a0-40f4-b538-5c2d177c9669:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:56.007Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:55.549Z",
          "Duration": -1,
          "Error": "ERROR: Default parameter not be supported for window function lag",
          "HasResultSet": false,
          "Id": "b853cc20-33a0-40f4-b538-5c2d177c9669:2",
          "QueryString": "SELECT \n   base.\"state\" as \"state\",\n   LAG((base.\"state\"),1,'NONE') OVER(  ORDER BY  base.\"state\" asc NULLS LAST ) as \"prev_state\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:56.007Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:56.072Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● lag › works with now as the default value - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "29b2dced-2e78-4df7-b64c-6920312e518f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:26:56.900Z",
      "Database": "dev",
      "Duration": 52344324,
      "Error": "Query #2 failed with ERROR: Default parameter not be supported for window function lag",
      "HasResultSet": false,
      "Id": "e7add416-da13-40fd-ac9c-fb31eff85750",
      "RedshiftPid": 1073963222,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:26:56.990Z",
          "Duration": 52344324,
          "HasResultSet": false,
          "Id": "e7add416-da13-40fd-ac9c-fb31eff85750:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:26:57.441Z"
        },
        {
          "CreatedAt": "2025-02-28T02:26:56.994Z",
          "Duration": -1,
          "Error": "ERROR: Default parameter not be supported for window function lag",
          "HasResultSet": false,
          "Id": "e7add416-da13-40fd-ac9c-fb31eff85750:2",
          "QueryString": "SELECT \n   base.\"state\" as \"state\",\n   DATE_TRUNC('year', (LAG(TIMESTAMP '2011-11-11 11:11:11',1,LOCALTIMESTAMP) OVER(  ORDER BY  base.\"state\" asc NULLS LAST )))=DATE_TRUNC('year', LOCALTIMESTAMP) as \"lag_val\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:26:57.441Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:26:57.505Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● first_value › works in nest - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b1e07c26-dde5-4d61-a5ce-ccf04f11b334",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:02.961Z",
      "Database": "dev",
      "Duration": 44100788,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 27, column 16\n  Position: 880",
      "HasResultSet": false,
      "Id": "fccb0b04-76b1-4bb6-88ed-aabb8c4bd8f6",
      "RedshiftPid": 1073823869,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:03.054Z",
          "Duration": 44100788,
          "HasResultSet": false,
          "Id": "fccb0b04-76b1-4bb6-88ed-aabb8c4bd8f6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:03.494Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:03.058Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 27, column 16\n  Position: 880",
          "HasResultSet": false,
          "Id": "fccb0b04-76b1-4bb6-88ed-aabb8c4bd8f6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"county\"\n      END as \"county__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=1 THEN FIRST_VALUE(CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END) OVER(PARTITION BY group_set, base.\"state\"  ORDER BY  CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"first_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" IS NOT NULL\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"county__1\" as \"county\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n    \"first_count__1\"::DOUBLE PRECISION as \"first_count\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_county\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:03.494Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:03.560Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● first_value › works outside nest - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1139e2b7-b89d-4f2b-b3c4-47a6d512d3a8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:04.343Z",
      "Database": "dev",
      "Duration": 44837269,
      "Error": "Query #2 failed with ERROR: Aggregate window functions with an ORDER BY clause require a frame clause",
      "HasResultSet": false,
      "Id": "ce5b44db-a0f1-424d-8547-ccd12f91f9e6",
      "RedshiftPid": 1073963122,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:04.446Z",
          "Duration": 44837269,
          "HasResultSet": false,
          "Id": "ce5b44db-a0f1-424d-8547-ccd12f91f9e6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:04.866Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:04.449Z",
          "Duration": -1,
          "Error": "ERROR: Aggregate window functions with an ORDER BY clause require a frame clause",
          "HasResultSet": false,
          "Id": "ce5b44db-a0f1-424d-8547-ccd12f91f9e6:2",
          "QueryString": "SELECT \n   base.\"state\" as \"state\",\n   base.\"births\" as \"births\",\n   FIRST_VALUE((base.\"births\")) OVER(  ORDER BY  base.\"births\" desc NULLS LAST ) as \"most_births\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:04.866Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:04.931Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● first_value › works with a localized aggregate - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9e11c99a-b154-4233-8c3c-ab3a678f1fa5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:13.616Z",
      "Database": "dev",
      "Duration": 44650210,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "339b208d-48dd-4b12-b35d-ef9891e1eb9b",
      "RedshiftPid": 1073832040,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:13.726Z",
          "Duration": 44650210,
          "HasResultSet": false,
          "Id": "339b208d-48dd-4b12-b35d-ef9891e1eb9b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:14.171Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:13.729Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "339b208d-48dd-4b12-b35d-ef9891e1eb9b:2",
          "QueryString": "SELECT \n   aircraft_models_0.\"seats\" as \"seats\",\n   LAG(COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)) OVER(  ORDER BY  aircraft_models_0.\"seats\" asc NULLS LAST ) as \"prev_sum_of_seats\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:14.171Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:14.235Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● trunc › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: "2"

      119 |       // console.log(databaseName, result.sql);
      120 |       // console.log(result.data);
    > 121 |       expect(result.data.path(0, `f${i}`).value).toBe(testCase[1]);
          |                                                  ^
      122 |     });
      123 |   };
      124 |

      at test/src/databases/all/functions.spec.ts:121:50
          at Array.forEach (<anonymous>)
      at funcTestMultiple (test/src/databases/all/functions.spec.ts:118:15)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:717:7)

  ● abs › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c97f2fb4-51bf-4284-9afe-a76a018c30f3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:53.262Z",
      "Database": "dev",
      "Duration": 42628474,
      "Error": "Query #2 failed with ERROR: function abs(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "de5381dc-c2e5-4aa7-a774-04b8455f241d",
      "RedshiftPid": 1073774714,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:53.344Z",
          "Duration": 42628474,
          "HasResultSet": false,
          "Id": "de5381dc-c2e5-4aa7-a774-04b8455f241d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:53.793Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:53.347Z",
          "Duration": -1,
          "Error": "ERROR: function abs(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "de5381dc-c2e5-4aa7-a774-04b8455f241d:2",
          "QueryString": "SELECT \n   ABS(-3) as \"f0\",\n   ABS(3) as \"f1\",\n   ABS(NULL) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:53.793Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:53.858Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● sign › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "723adfb2-8d5d-481b-9c6a-7468daad6cbc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:27:54.615Z",
      "Database": "dev",
      "Duration": 53220495,
      "Error": "Query #2 failed with ERROR: function sign(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "fe50fc5b-f530-4a0b-aa54-b453ff3070e0",
      "RedshiftPid": 1073782902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:27:54.717Z",
          "Duration": 53220495,
          "HasResultSet": false,
          "Id": "fe50fc5b-f530-4a0b-aa54-b453ff3070e0:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:27:55.170Z"
        },
        {
          "CreatedAt": "2025-02-28T02:27:54.720Z",
          "Duration": -1,
          "Error": "ERROR: function sign(\"unknown\") is not unique\n  Hint: Could not choose a best candidate function. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "fe50fc5b-f530-4a0b-aa54-b453ff3070e0:2",
          "QueryString": "SELECT \n   SIGN(100) as \"f0\",\n   SIGN(-2) as \"f1\",\n   SIGN(0) as \"f2\",\n   SIGN(NULL) as \"f3\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:27:55.170Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:27:55.233Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● is_inf › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: null

      119 |       // console.log(databaseName, result.sql);
      120 |       // console.log(result.data);
    > 121 |       expect(result.data.path(0, `f${i}`).value).toBe(testCase[1]);
          |                                                  ^
      122 |     });
      123 |   };
      124 |

      at test/src/databases/all/functions.spec.ts:121:50
          at Array.forEach (<anonymous>)
      at funcTestMultiple (test/src/databases/all/functions.spec.ts:118:15)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:846:7)

  ● is_nan › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "64c9562b-7aa3-40da-a4c0-7df9dcdf186a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:00.708Z",
      "Database": "dev",
      "Duration": 43929850,
      "Error": "Query #2 failed with ERROR: Assert\n  Detail: \n  -----------------------------------------------\n  error:  Assert\n  code:      1000\n  context:   precision <= 38 - precision=32767, 38=38. \n  query:     -1[child_sequence:1]\n  location:  pg_utils.cpp:5380\n  process:   padbmaster [pid=1073946732]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "d0c013a5-aa64-4bcc-9067-7db20fe0b5f2",
      "RedshiftPid": 1073946732,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:00.796Z",
          "Duration": 43929850,
          "HasResultSet": false,
          "Id": "d0c013a5-aa64-4bcc-9067-7db20fe0b5f2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:03.027Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:00.800Z",
          "Duration": -1,
          "Error": "ERROR: Assert\n  Detail: \n  -----------------------------------------------\n  error:  Assert\n  code:      1000\n  context:   precision <= 38 - precision=32767, 38=38. \n  query:     -1[child_sequence:1]\n  location:  pg_utils.cpp:5380\n  process:   padbmaster [pid=1073946732]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "d0c013a5-aa64-4bcc-9067-7db20fe0b5f2:2",
          "QueryString": "SELECT \n   COALESCE(CAST('NaN' AS double precision) = NUMERIC 'NaN', false) as \"f0\",\n   COALESCE(100 = NUMERIC 'NaN', false) as \"f1\",\n   COALESCE(NULL = NUMERIC 'NaN', false) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:03.027Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:03.090Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● greatest › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "35a08650-e584-4ac2-b718-9336fa8af38f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:04.214Z",
      "Database": "dev",
      "Duration": 45368466,
      "Error": "Query #2 failed with ERROR: function num_nulls(integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "52466ef7-c670-442d-81dd-064a83eb6d8a",
      "RedshiftPid": 1073791100,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:04.310Z",
          "Duration": 45368466,
          "HasResultSet": false,
          "Id": "52466ef7-c670-442d-81dd-064a83eb6d8a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:04.744Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:04.313Z",
          "Duration": -1,
          "Error": "ERROR: function num_nulls(integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "52466ef7-c670-442d-81dd-064a83eb6d8a:2",
          "QueryString": "SELECT \n   CASE WHEN NUM_NULLS(1,10,-100) > 0 THEN NULL ELSE GREATEST(1,10,-100) END as \"f0\",\n   ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE GREATEST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)>=DATE '2004-01-01') and ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE GREATEST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)<DATE '2005-01-01') as \"f1\",\n   (CASE WHEN NUM_NULLS(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') > 0 THEN NULL ELSE GREATEST(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') END)=TIMESTAMP '2023-05-26 11:59:00' as \"f2\",\n   CASE WHEN NUM_NULLS('a','b') > 0 THEN NULL ELSE GREATEST('a','b') END as \"f3\",\n   CASE WHEN NUM_NULLS(1,NULL,0) > 0 THEN NULL ELSE GREATEST(1,NULL,0) END as \"f4\",\n   CASE WHEN NUM_NULLS(NULL,NULL) > 0 THEN NULL ELSE GREATEST(NULL,NULL) END as \"f5\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4,5,6\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:04.744Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:04.810Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● least › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f4fe9506-8587-47d9-9270-ef6bf3401247",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:05.590Z",
      "Database": "dev",
      "Duration": 45037011,
      "Error": "Query #2 failed with ERROR: function num_nulls(integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "fe62db65-dfa0-42b6-9e49-70933eccfd4b",
      "RedshiftPid": 1073782894,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:05.676Z",
          "Duration": 45037011,
          "HasResultSet": false,
          "Id": "fe62db65-dfa0-42b6-9e49-70933eccfd4b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:06.110Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:05.679Z",
          "Duration": -1,
          "Error": "ERROR: function num_nulls(integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "fe62db65-dfa0-42b6-9e49-70933eccfd4b:2",
          "QueryString": "SELECT \n   CASE WHEN NUM_NULLS(1,10,-100) > 0 THEN NULL ELSE LEAST(1,10,-100) END as \"f0\",\n   ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE LEAST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)>=DATE '1994-01-01') and ((CASE WHEN NUM_NULLS(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') > 0 THEN NULL ELSE LEAST(DATE '2003-01-01',DATE '2004-01-01',DATE '1994-01-01') END)<DATE '1995-01-01') as \"f1\",\n   (CASE WHEN NUM_NULLS(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') > 0 THEN NULL ELSE LEAST(TIMESTAMP '2023-05-26 11:58:00',TIMESTAMP '2023-05-26 11:59:00') END)=TIMESTAMP '2023-05-26 11:58:00' as \"f2\",\n   CASE WHEN NUM_NULLS('a','b') > 0 THEN NULL ELSE LEAST('a','b') END as \"f3\",\n   CASE WHEN NUM_NULLS(1,NULL,0) > 0 THEN NULL ELSE LEAST(1,NULL,0) END as \"f4\",\n   CASE WHEN NUM_NULLS(NULL,NULL) > 0 THEN NULL ELSE LEAST(NULL,NULL) END as \"f5\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4,5,6\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:06.110Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:06.176Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● div › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b5525e51-33ed-48fb-82cd-9ac87c0a37b3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:06.935Z",
      "Database": "dev",
      "Duration": 52239539,
      "Error": "Query #2 failed with ERROR: function div(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "eed55c99-3666-4ac2-b137-5aac5a1616a8",
      "RedshiftPid": 1073979491,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:07.024Z",
          "Duration": 52239539,
          "HasResultSet": false,
          "Id": "eed55c99-3666-4ac2-b137-5aac5a1616a8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:07.468Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:07.027Z",
          "Duration": -1,
          "Error": "ERROR: function div(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "eed55c99-3666-4ac2-b137-5aac5a1616a8:2",
          "QueryString": "SELECT \n   DIV(3,2) as \"f0\",\n   DIV(NULL,2) as \"f1\",\n   DIV(2,NULL) as \"f2\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:07.468Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:07.533Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● starts_with › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b2593d6c-e3c3-4106-93cd-c56e2dc7f8cb",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:28:13.034Z",
      "Database": "dev",
      "Duration": 43140568,
      "Error": "Query #2 failed with ERROR: function starts_with(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5b181d38-5fe3-4984-879c-c7728c97bf6a",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:28:13.119Z",
          "Duration": 43140568,
          "HasResultSet": false,
          "Id": "5b181d38-5fe3-4984-879c-c7728c97bf6a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:28:13.582Z"
        },
        {
          "CreatedAt": "2025-02-28T02:28:13.144Z",
          "Duration": -1,
          "Error": "ERROR: function starts_with(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5b181d38-5fe3-4984-879c-c7728c97bf6a:2",
          "QueryString": "SELECT \n   COALESCE(STARTS_WITH('hello world', 'hello'), false) as \"f0\",\n   COALESCE(STARTS_WITH('hello world', 'world'), false) as \"f1\",\n   COALESCE(STARTS_WITH(NULL, 'world'), false) as \"f2\",\n   COALESCE(STARTS_WITH('hello world', NULL), false) as \"f3\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 1,2,3,4\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:28:13.582Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:28:13.646Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● ends_with › works - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: null

      119 |       // console.log(databaseName, result.sql);
      120 |       // console.log(result.data);
    > 121 |       expect(result.data.path(0, `f${i}`).value).toBe(testCase[1]);
          |                                                  ^
      122 |     });
      123 |   };
      124 |

      at test/src/databases/all/functions.spec.ts:121:50
          at Array.forEach (<anonymous>)
      at funcTestMultiple (test/src/databases/all/functions.spec.ts:118:15)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:935:7)

  ● rand › is usually not the same value - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: false
    Received: null

      87 |     if (expected.success !== undefined) {
      88 |       const result = await run();
    > 89 |       expect(result.data.path(0, 'f').value).toBe(expected.success);
         |                                              ^
      90 |     } else {
      91 |       expect(run).rejects.toThrowError(expected.error);
      92 |     }

      at funcTestGeneral (test/src/databases/all/functions.spec.ts:89:46)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:990:7)

  ● pi › is pi - redshift

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: null

      87 |     if (expected.success !== undefined) {
      88 |       const result = await run();
    > 89 |       expect(result.data.path(0, 'f').value).toBe(expected.success);
         |                                              ^
      90 |     } else {
      91 |       expect(run).rejects.toThrowError(expected.error);
      92 |     }

      at funcTestGeneral (test/src/databases/all/functions.spec.ts:89:46)
      at async Object.<anonymous> (test/src/databases/all/functions.spec.ts:995:7)

  ● lead › works with default value - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6c1a195d-cb30-4747-bc4a-2c03d6b96257",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:29:35.948Z",
      "Database": "dev",
      "Duration": 44579012,
      "Error": "Query #2 failed with ERROR: Default parameter not be supported for window function lead",
      "HasResultSet": false,
      "Id": "5cfcfd96-d43c-4aa3-8b41-8c52f62f54d1",
      "RedshiftPid": 1073848432,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:29:36.030Z",
          "Duration": 44579012,
          "HasResultSet": false,
          "Id": "5cfcfd96-d43c-4aa3-8b41-8c52f62f54d1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:29:36.462Z"
        },
        {
          "CreatedAt": "2025-02-28T02:29:36.034Z",
          "Duration": -1,
          "Error": "ERROR: Default parameter not be supported for window function lead",
          "HasResultSet": false,
          "Id": "5cfcfd96-d43c-4aa3-8b41-8c52f62f54d1:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  LIMIT 10\n)\nSELECT \n   base.\"state\" as \"state\",\n   LEAD((base.\"state\"),1,'NONE') OVER(  ORDER BY  base.\"state\" asc NULLS LAST ) as \"next_state\"\nFROM __stage0 as base\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:29:36.462Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:29:36.527Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● min, max, sum / window, cumulative › works - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d88511c4-d3ce-4816-8202-56bb73964316",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:07.438Z",
      "Database": "dev",
      "Duration": 44470485,
      "Error": "Query #2 failed with ERROR: Aggregate window functions with an ORDER BY clause require a frame clause",
      "HasResultSet": false,
      "Id": "02239399-307e-43f3-835d-222ec565b569",
      "RedshiftPid": 1073766511,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:07.529Z",
          "Duration": 44470485,
          "HasResultSet": false,
          "Id": "02239399-307e-43f3-835d-222ec565b569:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:07.961Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:07.532Z",
          "Duration": -1,
          "Error": "ERROR: Aggregate window functions with an ORDER BY clause require a frame clause",
          "HasResultSet": false,
          "Id": "02239399-307e-43f3-835d-222ec565b569:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  LIMIT 5\n)\nSELECT \n   base.\"state\" as \"state\",\n   base.\"births\" as \"births\",\n   MIN((base.\"births\")) OVER(  ORDER BY  base.\"births\" asc NULLS LAST ) as \"min_c\",\n   MAX((base.\"births\")) OVER(  ORDER BY  base.\"births\" asc NULLS LAST ) as \"max_c\",\n   SUM((base.\"births\")) OVER(  ORDER BY  base.\"births\" asc NULLS LAST ) as \"sum_c\",\n   MIN((base.\"births\")) OVER(  ) as \"min_w\",\n   MAX((base.\"births\")) OVER(  ) as \"max_w\",\n   SUM((base.\"births\")) OVER(  ) as \"sum_w\"\nFROM __stage0 as base\nGROUP BY 1,2\nORDER BY 2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:07.961Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:08.026Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift › string_agg › works no order by - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4c0dd09e-96c1-48a6-b8dd-c4a1ef689caf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:08.825Z",
      "Database": "dev",
      "Duration": 51767068,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20",
      "RedshiftPid": 1073963112,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:08.913Z",
          "Duration": 51767068,
          "HasResultSet": false,
          "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:09.361Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:08.917Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:09.361Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:09.425Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4c0dd09e-96c1-48a6-b8dd-c4a1ef689caf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:08.825Z",
      "Database": "dev",
      "Duration": 51767068,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20",
      "RedshiftPid": 1073963112,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:08.913Z",
          "Duration": 51767068,
          "HasResultSet": false,
          "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:09.361Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:08.917Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "c14c41bb-45fb-4fb3-be9a-b41f45756e20:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:09.361Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:09.425Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1475:11)

  ● redshift › string_agg › works with dotted shortcut - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a3984623-06ec-4d9f-ab3c-a95e14daa897",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:10.195Z",
      "Database": "dev",
      "Duration": 46006182,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a",
      "RedshiftPid": 1073938547,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:10.298Z",
          "Duration": 46006182,
          "HasResultSet": false,
          "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:10.726Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:10.301Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:10.726Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:10.791Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a3984623-06ec-4d9f-ab3c-a95e14daa897",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:10.195Z",
      "Database": "dev",
      "Duration": 46006182,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a",
      "RedshiftPid": 1073938547,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:10.298Z",
          "Duration": 46006182,
          "HasResultSet": false,
          "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:10.726Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:10.301Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "11e3f233-b0cd-40d4-bc55-0be86a512b4a:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:10.726Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:10.791Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1482:11)

  ● redshift › string_agg › works with order by field - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a7981366-fd05-452d-9099-a7429a71bf57",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:11.636Z",
      "Database": "dev",
      "Duration": 45181493,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0",
      "RedshiftPid": 1073963113,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:11.749Z",
          "Duration": 45181493,
          "HasResultSet": false,
          "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:12.191Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:11.752Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:12.191Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:12.256Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name") as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a7981366-fd05-452d-9099-a7429a71bf57",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:11.636Z",
      "Database": "dev",
      "Duration": 45181493,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0",
      "RedshiftPid": 1073963113,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:11.749Z",
          "Duration": 45181493,
          "HasResultSet": false,
          "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:12.191Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:11.752Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "beb4bcb5-32f0-4d93-886f-5384ab8d18b0:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:12.191Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:12.256Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1492:11)

  ● redshift › string_agg › works with multiple order_bys - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ab535bdc-c28b-485e-91e4-54ca282e3800",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:13.136Z",
      "Database": "dev",
      "Duration": 44755550,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4",
      "RedshiftPid": 1073840350,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:13.257Z",
          "Duration": 44755550,
          "HasResultSet": false,
          "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:13.751Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:13.261Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"city\", base.\"name\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:13.751Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:13.776Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."city", base."name") as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ab535bdc-c28b-485e-91e4-54ca282e3800",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:13.136Z",
      "Database": "dev",
      "Duration": 44755550,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4",
      "RedshiftPid": 1073840350,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:13.257Z",
          "Duration": 44755550,
          "HasResultSet": false,
          "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:13.751Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:13.261Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "2e909e3d-3256-4925-92b8-1f9b40eb93a4:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"city\", base.\"name\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:13.751Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:13.776Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1516:11)

  ● redshift › string_agg › works with order by expression - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d9f39699-8981-402a-ad60-2288010fca6d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:13.144Z",
      "Database": "dev",
      "Duration": 51997912,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe",
      "RedshiftPid": 1073758311,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:13.267Z",
          "Duration": 51997912,
          "HasResultSet": false,
          "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:13.731Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:13.270Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:13.731Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:13.796Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d9f39699-8981-402a-ad60-2288010fca6d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:13.144Z",
      "Database": "dev",
      "Duration": 51997912,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe",
      "RedshiftPid": 1073758311,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:13.267Z",
          "Duration": 51997912,
          "HasResultSet": false,
          "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:13.731Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:13.270Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "5d7e17e2-a9d6-4a54-bae7-1e840923bebe:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:13.731Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:13.796Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1504:11)

  ● redshift › string_agg › works with order by expression - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ec56d775-9efe-4467-9ad3-7e5ae691ac66",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:14.577Z",
      "Database": "dev",
      "Duration": 44520717,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062",
      "RedshiftPid": 1073750124,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:14.671Z",
          "Duration": 44520717,
          "HasResultSet": false,
          "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:15.091Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:14.674Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY LENGTH(base.\"name\")) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:15.091Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:15.156Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY LENGTH(base."name")) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ec56d775-9efe-4467-9ad3-7e5ae691ac66",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:14.577Z",
      "Database": "dev",
      "Duration": 44520717,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062",
      "RedshiftPid": 1073750124,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:14.671Z",
          "Duration": 44520717,
          "HasResultSet": false,
          "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:15.091Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:14.674Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "38da108b-fe98-4d0f-ac2a-e82eaa7db062:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY LENGTH(base.\"name\")) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:15.091Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:15.156Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1532:11)

  ● redshift › string_agg › works with order by join expression - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9553a15-73bb-46b3-8b92-2e358829fb4a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:15.989Z",
      "Database": "dev",
      "Duration": 52774617,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171",
      "RedshiftPid": 1073774690,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:16.114Z",
          "Duration": 52774617,
          "HasResultSet": false,
          "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:16.589Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:16.117Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY aircraft_models_0.\"model\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nWHERE base.\"name\" ~ '.*ADVENTURE.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:16.589Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:16.654Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(base."name", ',' ORDER BY aircraft_models_0."model") as "f"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
    WHERE base."name" ~ '.*ADVENTURE.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9553a15-73bb-46b3-8b92-2e358829fb4a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:15.989Z",
      "Database": "dev",
      "Duration": 52774617,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
      "HasResultSet": false,
      "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171",
      "RedshiftPid": 1073774690,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:16.114Z",
          "Duration": 52774617,
          "HasResultSet": false,
          "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:16.589Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:16.117Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 32\n  Position: 40",
          "HasResultSet": false,
          "Id": "dce212a9-bf86-4939-b6d3-9c4d4f7d8171:2",
          "QueryString": "SELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY aircraft_models_0.\"model\") as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nWHERE base.\"name\" ~ '.*ADVENTURE.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:16.589Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:16.654Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1542:11)

  ● redshift › string_agg › works with order asc - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "357f916f-bd64-4b3e-a32a-2549feb542f2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:17.429Z",
      "Database": "dev",
      "Duration": 44869047,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75",
      "RedshiftPid": 1073979489,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:17.527Z",
          "Duration": 44869047,
          "HasResultSet": false,
          "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:17.940Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:17.531Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:17.940Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:18.006Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "357f916f-bd64-4b3e-a32a-2549feb542f2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:17.429Z",
      "Database": "dev",
      "Duration": 44869047,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75",
      "RedshiftPid": 1073979489,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:17.527Z",
          "Duration": 44869047,
          "HasResultSet": false,
          "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:17.940Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:17.531Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "160f840c-5317-4f56-a1b1-4d4d53d7db75:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:17.940Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:18.006Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1556:11)

  ● redshift › string_agg › works with order desc - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5c195f7f-a5cd-4fde-8b0b-db4ec1d09e02",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:18.792Z",
      "Database": "dev",
      "Duration": 44529233,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5",
      "RedshiftPid": 1073873023,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:18.884Z",
          "Duration": 44529233,
          "HasResultSet": false,
          "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:19.330Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:18.887Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" DESC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:19.330Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:19.394Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(base."name", ',' ORDER BY base."name" DESC) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5c195f7f-a5cd-4fde-8b0b-db4ec1d09e02",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:18.792Z",
      "Database": "dev",
      "Duration": 44529233,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
      "HasResultSet": false,
      "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5",
      "RedshiftPid": 1073873023,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:18.884Z",
          "Duration": 44529233,
          "HasResultSet": false,
          "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:19.330Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:18.887Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 32\n  Position: 221",
          "HasResultSet": false,
          "Id": "165e9ae4-9763-4f48-84f4-720ca01fcaa5:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(base.\"name\", ',' ORDER BY base.\"name\" DESC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:19.330Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:19.394Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1570:11)

  ● redshift › string_agg › works with fanout and order_by - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8e2b0a19-f96c-4086-b92b-4b79f9e6ad98",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:20.165Z",
      "Database": "dev",
      "Duration": 44471312,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"->>'f2'), ',' ORDER\", at line 4, column 49\n  Position: 121",
      "HasResultSet": false,
      "Id": "3f356856-f935-4dae-8990-fb2112bd6633",
      "RedshiftPid": 1073971307,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:20.273Z",
          "Duration": 44471312,
          "HasResultSet": false,
          "Id": "3f356856-f935-4dae-8990-fb2112bd6633:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:20.717Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:20.276Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"->>'f2'), ',' ORDER\", at line 4, column 49\n  Position: 121",
          "HasResultSet": false,
          "Id": "3f356856-f935-4dae-8990-fb2112bd6633:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), ',' ORDER BY (a::json->>'f3'), (a::json->>'f4')) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",base.\"state\",base.\"popular_name\",base.\"state\"))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:20.717Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:20.782Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), ',' ORDER BY (a::json->>'f3'), (a::json->>'f4')) as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",base."state",base."popular_name",base."state"))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8e2b0a19-f96c-4086-b92b-4b79f9e6ad98",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:20.165Z",
      "Database": "dev",
      "Duration": 44471312,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"->>'f2'), ',' ORDER\", at line 4, column 49\n  Position: 121",
      "HasResultSet": false,
      "Id": "3f356856-f935-4dae-8990-fb2112bd6633",
      "RedshiftPid": 1073971307,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:20.273Z",
          "Duration": 44471312,
          "HasResultSet": false,
          "Id": "3f356856-f935-4dae-8990-fb2112bd6633:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:20.717Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:20.276Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"->>'f2'), ',' ORDER\", at line 4, column 49\n  Position: 121",
          "HasResultSet": false,
          "Id": "3f356856-f935-4dae-8990-fb2112bd6633:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), ',' ORDER BY (a::json->>'f3'), (a::json->>'f4')) as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",base.\"state\",base.\"popular_name\",base.\"state\"))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:20.717Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:20.782Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1597:11)

  ● redshift › string_agg › works with fanout - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "febfe1dc-7825-4fdf-80ba-61316895f787",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:21.699Z",
      "Database": "dev",
      "Duration": 53428738,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 163",
      "HasResultSet": false,
      "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d",
      "RedshiftPid": 1073799292,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:21.821Z",
          "Duration": 53428738,
          "HasResultSet": false,
          "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:22.300Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:21.825Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 163",
          "HasResultSet": false,
          "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), ',') as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",'o'))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:22.300Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:22.366Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), ',') as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",'o'))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "febfe1dc-7825-4fdf-80ba-61316895f787",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:21.699Z",
      "Database": "dev",
      "Duration": 53428738,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 163",
      "HasResultSet": false,
      "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d",
      "RedshiftPid": 1073799292,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:21.821Z",
          "Duration": 53428738,
          "HasResultSet": false,
          "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:22.300Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:21.825Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 163",
          "HasResultSet": false,
          "Id": "3d87f2f0-399d-49d7-90f8-6c8b9747ac0d:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), ',') as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",'o'))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:22.300Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:22.366Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1618:11)

  ● redshift › string_agg › works with fanout and separator - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f2274ea3-3754-4953-997d-72347868debd",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:23.118Z",
      "Database": "dev",
      "Duration": 44206237,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 162",
      "HasResultSet": false,
      "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6",
      "RedshiftPid": 1073840233,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:23.205Z",
          "Duration": 44206237,
          "HasResultSet": false,
          "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:23.633Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:23.208Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 162",
          "HasResultSet": false,
          "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), '') as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",'o',''))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:23.633Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:23.699Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COUNT(DISTINCT state_facts2_0."__distinct_key") as "c",
       (
            SELECT STRING_AGG((a::json->>'f2'), '') as value
            FROM (
              SELECT UNNEST(array_agg(distinct row_to_json(row(base."__distinct_key",'o',''))::text)) a
            ) a
          ) as "s"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS state_facts2_0
      ON state_facts2_0."state"=base."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f2274ea3-3754-4953-997d-72347868debd",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:23.118Z",
      "Database": "dev",
      "Duration": 44206237,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 162",
      "HasResultSet": false,
      "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6",
      "RedshiftPid": 1073840233,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:23.205Z",
          "Duration": 44206237,
          "HasResultSet": false,
          "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:23.633Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:23.208Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"UNNEST\" in context \"FROM (\n          SELECT UNNEST\", at line 6, column 18\n  Position: 162",
          "HasResultSet": false,
          "Id": "e2f709c2-de82-4b52-8a7f-a2b8097e83d6:2",
          "QueryString": "SELECT \n   COUNT(DISTINCT state_facts2_0.\"__distinct_key\") as \"c\",\n   (\n        SELECT STRING_AGG((a::json->>'f2'), '') as value\n        FROM (\n          SELECT UNNEST(array_agg(distinct row_to_json(row(base.\"__distinct_key\",'o',''))::text)) a\n        ) a\n      ) as \"s\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS state_facts2_0\n  ON state_facts2_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:23.633Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:23.699Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1634:11)

  ● redshift › string_agg_distinct › actually distincts - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3264a843-15f7-43e1-8bd1-3de70e6e5a71",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:24.575Z",
      "Database": "dev",
      "Duration": 52881235,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"aircraft_0.\"name\", ',' ORDER\", at line 2, column 47\n  Position: 55",
      "HasResultSet": false,
      "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de",
      "RedshiftPid": 1073741930,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:24.696Z",
          "Duration": 52881235,
          "HasResultSet": false,
          "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:25.157Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:24.699Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"aircraft_0.\"name\", ',' ORDER\", at line 2, column 47\n  Position: 55",
          "HasResultSet": false,
          "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT aircraft_0.\"name\", ',' ORDER BY aircraft_0.\"name\" ASC) as \"f_dist\",\n   STRING_AGG(aircraft_0.\"name\", ',' ORDER BY aircraft_0.\"name\") as \"f_all\"\nFROM \"malloytest\".\"aircraft_models\" as base\n LEFT JOIN \"malloytest\".\"aircraft\" AS aircraft_0\n  ON base.\"aircraft_model_code\"=aircraft_0.\"aircraft_model_code\"\nWHERE aircraft_0.\"name\" IN ('RAYTHEON AIRCRAFT COMPANY','FOWLER IRA R DBA')\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:25.157Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:25.221Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(DISTINCT aircraft_0."name", ',' ORDER BY aircraft_0."name" ASC) as "f_dist",
       STRING_AGG(aircraft_0."name", ',' ORDER BY aircraft_0."name") as "f_all"
    FROM "malloytest"."aircraft_models" as base
     LEFT JOIN "malloytest"."aircraft" AS aircraft_0
      ON base."aircraft_model_code"=aircraft_0."aircraft_model_code"
    WHERE aircraft_0."name" IN ('RAYTHEON AIRCRAFT COMPANY','FOWLER IRA R DBA')

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3264a843-15f7-43e1-8bd1-3de70e6e5a71",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:24.575Z",
      "Database": "dev",
      "Duration": 52881235,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"aircraft_0.\"name\", ',' ORDER\", at line 2, column 47\n  Position: 55",
      "HasResultSet": false,
      "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de",
      "RedshiftPid": 1073741930,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:24.696Z",
          "Duration": 52881235,
          "HasResultSet": false,
          "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:25.157Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:24.699Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"aircraft_0.\"name\", ',' ORDER\", at line 2, column 47\n  Position: 55",
          "HasResultSet": false,
          "Id": "3dc3e5f7-42ce-42a1-9625-9fef0095a9de:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT aircraft_0.\"name\", ',' ORDER BY aircraft_0.\"name\" ASC) as \"f_dist\",\n   STRING_AGG(aircraft_0.\"name\", ',' ORDER BY aircraft_0.\"name\") as \"f_all\"\nFROM \"malloytest\".\"aircraft_models\" as base\n LEFT JOIN \"malloytest\".\"aircraft\" AS aircraft_0\n  ON base.\"aircraft_model_code\"=aircraft_0.\"aircraft_model_code\"\nWHERE aircraft_0.\"name\" IN ('RAYTHEON AIRCRAFT COMPANY','FOWLER IRA R DBA')\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:25.157Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:25.221Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1681:11)

  ● redshift › string_agg_distinct › works no order by - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "97e1235c-f0f4-480d-af30-1b9993cfde7a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:25.964Z",
      "Database": "dev",
      "Duration": 45430489,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6",
      "RedshiftPid": 1073897594,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:26.072Z",
          "Duration": 45430489,
          "HasResultSet": false,
          "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:26.486Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:26.075Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:26.486Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:26.561Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(DISTINCT base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "97e1235c-f0f4-480d-af30-1b9993cfde7a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:25.964Z",
      "Database": "dev",
      "Duration": 45430489,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6",
      "RedshiftPid": 1073897594,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:26.072Z",
          "Duration": 45430489,
          "HasResultSet": false,
          "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:26.486Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:26.075Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "6a6b33ae-e9ae-4bdf-9b18-93a409538da6:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:26.486Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:26.561Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1692:11)

  ● redshift › string_agg_distinct › works with dotted shortcut - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d7ed30fa-7d6c-4569-909b-55ae86ec6a09",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:27.310Z",
      "Database": "dev",
      "Duration": 44587411,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50",
      "RedshiftPid": 1073791073,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:27.397Z",
          "Duration": 44587411,
          "HasResultSet": false,
          "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:27.817Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:27.400Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:27.817Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:27.884Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(DISTINCT base."name", ',') as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name"='RUTHERFORD PAT R JR'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d7ed30fa-7d6c-4569-909b-55ae86ec6a09",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:27.310Z",
      "Database": "dev",
      "Duration": 44587411,
      "Error": "Query #2 failed with ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50",
      "RedshiftPid": 1073791073,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:27.397Z",
          "Duration": 44587411,
          "HasResultSet": false,
          "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:27.817Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:27.400Z",
          "Duration": -1,
          "Error": "ERROR: function string_agg(character varying, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "4bc62664-9908-4ac7-a2b2-185deb695c50:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',') as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\"='RUTHERFORD PAT R JR'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:27.817Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:27.884Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1701:11)

  ● redshift › string_agg_distinct › works with order by direction - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4459a7a3-0c3f-4e4c-beda-cdbbbf55e548",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:28.703Z",
      "Database": "dev",
      "Duration": 44607969,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 41\n  Position: 49",
      "HasResultSet": false,
      "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1",
      "RedshiftPid": 1073864817,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:28.822Z",
          "Duration": 44607969,
          "HasResultSet": false,
          "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:29.269Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:28.826Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 41\n  Position: 49",
          "HasResultSet": false,
          "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:29.269Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:29.334Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM "malloytest"."aircraft" as base
    WHERE base."name" ~ '.*RUTHERFORD.*'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4459a7a3-0c3f-4e4c-beda-cdbbbf55e548",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:28.703Z",
      "Database": "dev",
      "Duration": 44607969,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 41\n  Position: 49",
      "HasResultSet": false,
      "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1",
      "RedshiftPid": 1073864817,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:28.822Z",
          "Duration": 44607969,
          "HasResultSet": false,
          "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:29.269Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:28.826Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 2, column 41\n  Position: 49",
          "HasResultSet": false,
          "Id": "8fe75887-7125-4d00-8756-ad7f2e1e35e1:2",
          "QueryString": "SELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM \"malloytest\".\"aircraft\" as base\nWHERE base.\"name\" ~ '.*RUTHERFORD.*'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:29.269Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:29.334Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1713:11)

  ● redshift › string_agg_distinct › works with order asc - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bb05094e-ab42-45d5-8319-a44398650117",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:30.111Z",
      "Database": "dev",
      "Duration": 48621904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
      "HasResultSet": false,
      "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff",
      "RedshiftPid": 1073823850,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:30.197Z",
          "Duration": 48621904,
          "HasResultSet": false,
          "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:30.646Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:30.200Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
          "HasResultSet": false,
          "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:30.646Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:30.712Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" ASC) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bb05094e-ab42-45d5-8319-a44398650117",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:30.111Z",
      "Database": "dev",
      "Duration": 48621904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
      "HasResultSet": false,
      "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff",
      "RedshiftPid": 1073823850,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:30.197Z",
          "Duration": 48621904,
          "HasResultSet": false,
          "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:30.646Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:30.200Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
          "HasResultSet": false,
          "Id": "7367fe4c-b8be-4966-8834-784d44deb0ff:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" ASC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:30.646Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:30.712Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1727:11)

  ● redshift › string_agg_distinct › works with order desc - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "46a3c540-6209-4c2f-a908-dc720c8cd73f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:31.535Z",
      "Database": "dev",
      "Duration": 50520500,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
      "HasResultSet": false,
      "Id": "1362ddce-15be-4877-9381-18a859cd2c2f",
      "RedshiftPid": 1073946731,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:31.662Z",
          "Duration": 50520500,
          "HasResultSet": false,
          "Id": "1362ddce-15be-4877-9381-18a859cd2c2f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:32.131Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:31.666Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
          "HasResultSet": false,
          "Id": "1362ddce-15be-4877-9381-18a859cd2c2f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" DESC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:32.131Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:32.195Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."name" as "name"
      FROM "malloytest"."aircraft" as base
      WHERE base."name" ~ '.*FLY.*'
      GROUP BY 1
      ORDER BY 1 desc NULLS LAST
      LIMIT 3
    )
    SELECT 
       STRING_AGG(DISTINCT base."name", ',' ORDER BY base."name" DESC) as "f"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "46a3c540-6209-4c2f-a908-dc720c8cd73f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:31.535Z",
      "Database": "dev",
      "Duration": 50520500,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
      "HasResultSet": false,
      "Id": "1362ddce-15be-4877-9381-18a859cd2c2f",
      "RedshiftPid": 1073946731,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:31.662Z",
          "Duration": 50520500,
          "HasResultSet": false,
          "Id": "1362ddce-15be-4877-9381-18a859cd2c2f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:32.131Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:31.666Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"base.\"name\", ',' ORDER\", at line 11, column 41\n  Position: 230",
          "HasResultSet": false,
          "Id": "1362ddce-15be-4877-9381-18a859cd2c2f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"name\" as \"name\"\n  FROM \"malloytest\".\"aircraft\" as base\n  WHERE base.\"name\" ~ '.*FLY.*'\n  GROUP BY 1\n  ORDER BY 1 desc NULLS LAST\n  LIMIT 3\n)\nSELECT \n   STRING_AGG(DISTINCT base.\"name\", ',' ORDER BY base.\"name\" DESC) as \"f\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:32.131Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:32.195Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1741:11)

  ● redshift › partition_by › works - redshift

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 16: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |         where: dep_time < @2002
      |                ^
    line 4: year() requires time type, not 'sql native'
      |           yr is year(dep_time)
      |                 ^
    line 5: quarter() requires time type, not 'sql native'
      |           qtr is quarter(dep_time)
      |                  ^

      1787 |         order_by: yr, qtr
      1788 |         where: dep_time < @2002
    > 1789 |       }`).malloyResultMatches(expressionModel, [
           |           ^
      1790 |         {yr: 2000, qtr: 1, qtr_flights: 12148, last_yr_qtr_flights: null},
      1791 |         {yr: 2000, qtr: 2, qtr_flights: 11599, last_yr_qtr_flights: null},
      1792 |         {yr: 2000, qtr: 3, qtr_flights: 12075, last_yr_qtr_flights: null},

      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1789:11)

  ● redshift › partition_by › works with aggregate - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "81a97b31-54e5-4224-97ea-00adec3510df",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:32.949Z",
      "Database": "dev",
      "Duration": 44003938,
      "Error": "Query #2 failed with ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     632399[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073913964]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216",
      "RedshiftPid": 1073913964,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:33.049Z",
          "Duration": 44003938,
          "HasResultSet": false,
          "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:33.487Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:33.053Z",
          "Duration": -1,
          "Error": "ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     632399[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073913964]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216:2",
          "QueryString": "SELECT \n   COUNT(1) as \"c\",\n   SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) as \"l\",\n   LAG((SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1))) OVER(PARTITION BY (COUNT(1))  ORDER BY  SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) ASC NULLS LAST ) as \"prev\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 2\nORDER BY 2 ASC NULLS LAST\nLIMIT 5\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:33.487Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:33.552Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COUNT(1) as "c",
       SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1) as "l",
       LAG((SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1))) OVER(PARTITION BY (COUNT(1))  ORDER BY  SUBSTR(base."state", CASE WHEN 1 < 0 THEN LENGTH(base."state") + 1 + 1 ELSE 1 END, 1) ASC NULLS LAST ) as "prev"
    FROM "malloytest"."state_facts" as base
    GROUP BY 2
    ORDER BY 2 ASC NULLS LAST
    LIMIT 5

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "81a97b31-54e5-4224-97ea-00adec3510df",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:32.949Z",
      "Database": "dev",
      "Duration": 44003938,
      "Error": "Query #2 failed with ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     632399[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073913964]\n  -----------------------------------------------\n",
      "HasResultSet": false,
      "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216",
      "RedshiftPid": 1073913964,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:33.049Z",
          "Duration": 44003938,
          "HasResultSet": false,
          "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:33.487Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:33.053Z",
          "Duration": -1,
          "Error": "ERROR: SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  Detail: \n  -----------------------------------------------\n  error:  SUBSTR() function is not supported (Hint: use SUBSTRING instead)\n  code:      8001\n  context:   \n  query:     632399[child_sequence:1]\n  location:  cg_expr_fn_builder.cpp:9022\n  process:   padbmaster [pid=1073913964]\n  -----------------------------------------------\n",
          "HasResultSet": false,
          "Id": "7b51ee07-1d48-4ebe-904e-9945bab3d216:2",
          "QueryString": "SELECT \n   COUNT(1) as \"c\",\n   SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) as \"l\",\n   LAG((SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1))) OVER(PARTITION BY (COUNT(1))  ORDER BY  SUBSTR(base.\"state\", CASE WHEN 1 < 0 THEN LENGTH(base.\"state\") + 1 + 1 ELSE 1 END, 1) ASC NULLS LAST ) as \"prev\"\nFROM \"malloytest\".\"state_facts\" as base\nGROUP BY 2\nORDER BY 2 ASC NULLS LAST\nLIMIT 5\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:33.487Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:33.552Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1813:11)

  ● redshift › partition_by › works with multiple order_bys - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a59695d0-e0d4-4a5d-bedc-1291064fe207",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:34.345Z",
      "Database": "dev",
      "Duration": 55117992,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74",
      "RedshiftPid": 1073758322,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:34.444Z",
          "Duration": 55117992,
          "HasResultSet": false,
          "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:34.873Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:34.447Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74:2",
          "QueryString": "SELECT \n   base.\"name\" as \"name\",\n   RANK() OVER( ORDER BY COUNT(DISTINCT aircraft_models_0.\"aircraft_model_code\") DESC, COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) DESC ) as \"r\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nWHERE base.\"name\" IN ('UNITED AIR LINES INC','FEDERAL EXPRESS CORP','AMERICAN AIRLINES INC','CESSNA AIRCRAFT COMPANY')\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:34.873Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:34.939Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       base."name" as "name",
       RANK() OVER( ORDER BY COUNT(DISTINCT aircraft_models_0."aircraft_model_code") DESC, COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(aircraft_models_0."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) DESC ) as "r"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
    WHERE base."name" IN ('UNITED AIR LINES INC','FEDERAL EXPRESS CORP','AMERICAN AIRLINES INC','CESSNA AIRCRAFT COMPANY')
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a59695d0-e0d4-4a5d-bedc-1291064fe207",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:30:34.345Z",
      "Database": "dev",
      "Duration": 55117992,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74",
      "RedshiftPid": 1073758322,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:30:34.444Z",
          "Duration": 55117992,
          "HasResultSet": false,
          "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:30:34.873Z"
        },
        {
          "CreatedAt": "2025-02-28T02:30:34.447Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "194fb94d-0b40-4606-bbd3-1d213793cd74:2",
          "QueryString": "SELECT \n   base.\"name\" as \"name\",\n   RANK() OVER( ORDER BY COUNT(DISTINCT aircraft_models_0.\"aircraft_model_code\") DESC, COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) DESC ) as \"r\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\nWHERE base.\"name\" IN ('UNITED AIR LINES INC','FEDERAL EXPRESS CORP','AMERICAN AIRLINES INC','CESSNA AIRCRAFT COMPANY')\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:30:34.873Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:30:34.939Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/functions.spec.ts:1839:11)

FAIL test/src/databases/all/expr.spec.ts (89.425 s)
  ● redshift › basic calculations

    SQL Generated:
      SELECT 
         COALESCE(SUM(base."seats"),0) as "total_seats",
         COALESCE(SUM(base."seats"),0) as "total_seats2",
         COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0) as "boeing_seats",
         COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0) as "boeing_seats2",
         (COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0)) as "boeing_seats3",
         FLOOR(((COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0))*1.0/(COALESCE(SUM(base."seats"),0)))*100) as "percent_boeing_floor"
      FROM "malloytest"."aircraft_models" as base
      
    Expected {percent_boeing_floor: 55} Got: Non Numeric '"55"'

      76 |           percent_boeing_floor,
      77 |       }
    > 78 |     `).malloyResultMatches(expressionModel, {
         |        ^
      79 |       total_seats: 452415,
      80 |       total_seats2: 452415,
      81 |       boeing_seats: 252771,

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:78:8)

  ● redshift › Floor() -or any function bustage with aggregates

    SQL Generated:
      SELECT 
         FLOOR(((COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0))*1.0/(COALESCE(SUM(base."seats"),0)))*100) as "percent_boeing_floor",
         FLOOR(((COALESCE(SUM(CASE WHEN base."manufacturer"='BOEING' THEN base."seats" END),0))*1.0/(COALESCE(SUM(base."seats"),0)))*100) as "percent_boeing_floor2"
      FROM "malloytest"."aircraft_models" as base
      
    Expected {percent_boeing_floor: 55} Got: Non Numeric '"55"'
    Expected {percent_boeing_floor2: 55} Got: Non Numeric '"55"'

      104 |           percent_boeing_floor2 is floor(boeing_seats / total_seats * 100)
      105 |       }
    > 106 |     `).malloyResultMatches(expressionModel, {
          |        ^
      107 |       percent_boeing_floor: 55,
      108 |       percent_boeing_floor2: 55,
      109 |     });

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:106:8)

  ● redshift › model: expression fixups.

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1ccc17b8-d19f-4e5b-852b-de0820eeeab4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:05.237Z",
      "Database": "dev",
      "Duration": 53284226,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "53f6c755-4d84-4889-95d1-155c236d56c2",
      "RedshiftPid": 1073963113,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:05.319Z",
          "Duration": 53284226,
          "HasResultSet": false,
          "Id": "53f6c755-4d84-4889-95d1-155c236d56c2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:05.781Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:05.322Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "53f6c755-4d84-4889-95d1-155c236d56c2:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"total_seats\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(CASE WHEN aircraft_models_0.\"manufacturer\"='BOEING' THEN aircraft_models_0.\"seats\" END,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"boeing_seats\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:05.781Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:05.846Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(aircraft_models_0."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "total_seats",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(CASE WHEN aircraft_models_0."manufacturer"='BOEING' THEN aircraft_models_0."seats" END,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(aircraft_models_0."aircraft_model_code"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0."aircraft_model_code"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "boeing_seats"
    FROM "malloytest"."aircraft" as base
     LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
      ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1ccc17b8-d19f-4e5b-852b-de0820eeeab4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:05.237Z",
      "Database": "dev",
      "Duration": 53284226,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "53f6c755-4d84-4889-95d1-155c236d56c2",
      "RedshiftPid": 1073963113,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:05.319Z",
          "Duration": 53284226,
          "HasResultSet": false,
          "Id": "53f6c755-4d84-4889-95d1-155c236d56c2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:05.781Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:05.322Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "53f6c755-4d84-4889-95d1-155c236d56c2:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(aircraft_models_0.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"total_seats\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(CASE WHEN aircraft_models_0.\"manufacturer\"='BOEING' THEN aircraft_models_0.\"seats\" END,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(aircraft_models_0.\"aircraft_model_code\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(aircraft_models_0.\"aircraft_model_code\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"boeing_seats\"\nFROM \"malloytest\".\"aircraft\" as base\n LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n  ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:05.781Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:05.846Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:126:8)

  ● redshift › simple turtle

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7753f7b7-8734-4842-9524-cec7af53abc1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:08.048Z",
      "Database": "dev",
      "Duration": 44539767,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 20, column 34\n  Position: 569",
      "HasResultSet": false,
      "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8",
      "RedshiftPid": 1073799291,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:08.139Z",
          "Duration": 44539767,
          "HasResultSet": false,
          "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:08.572Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:08.142Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 20, column 34\n  Position: 569",
          "HasResultSet": false,
          "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 3\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:08.572Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:08.638Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "popular_name__0" as "popular_name",
      (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 3

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7753f7b7-8734-4842-9524-cec7af53abc1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:08.048Z",
      "Database": "dev",
      "Duration": 44539767,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 20, column 34\n  Position: 569",
      "HasResultSet": false,
      "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8",
      "RedshiftPid": 1073799291,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:08.139Z",
          "Duration": 44539767,
          "HasResultSet": false,
          "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:08.572Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:08.142Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 20, column 34\n  Position: 569",
          "HasResultSet": false,
          "Id": "d29018f3-a132-4161-a44d-45ef8c88e8c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:2]),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 3\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:08.572Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:08.638Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:146:8)

  ● redshift › double turtle

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7fe2928c-5f09-46f0-b2b9-8a2c8d385a1d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:09.439Z",
      "Database": "dev",
      "Duration": 44029358,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1247",
      "HasResultSet": false,
      "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2",
      "RedshiftPid": 1073856611,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:09.538Z",
          "Duration": 44029358,
          "HasResultSet": false,
          "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:09.966Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:09.541Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1247",
          "HasResultSet": false,
          "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2,3) THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__2\",\n    CASE WHEN group_set=3 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"inline_sum__3\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  GROUP BY 1,3,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 WHEN group_set=3 THEN 1 ELSE group_set END as group_set,\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2,3) THEN\n      \"popular_name__1\"\n      END as \"popular_name__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n      ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as \"by_state__1\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"inline_sum__3\"::DOUBLE PRECISION as \"inline_sum\") as __x)) FILTER (WHERE group_set=3))[1]) as \"inline__1\"\n  FROM __stage0\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n    \"by_state__1\" as \"by_state\", \n    \"inline__1\" as \"inline\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as \"o\"\nFROM __stage1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:09.966Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:10.031Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set IN (1,2,3) THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__2",
        CASE WHEN group_set=3 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "inline_sum__3"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      GROUP BY 1,3,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 WHEN group_set=3 THEN 1 ELSE group_set END as group_set,
        MAX("airport_count__0") as "airport_count__0",
        CASE WHEN group_set IN (1,2,3) THEN
          "popular_name__1"
          END as "popular_name__1",
        MAX("airport_count__1") as "airport_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "airport_count__2"::DOUBLE PRECISION as "airport_count"
          ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as "by_state__1",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "inline_sum__3"::DOUBLE PRECISION as "inline_sum") as __x)) FILTER (WHERE group_set=3))[1]) as "inline__1"
      FROM __stage0
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count", 
        "by_state__1" as "by_state", 
        "inline__1" as "inline"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as "o"
    FROM __stage1

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7fe2928c-5f09-46f0-b2b9-8a2c8d385a1d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:09.439Z",
      "Database": "dev",
      "Duration": 44029358,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1247",
      "HasResultSet": false,
      "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2",
      "RedshiftPid": 1073856611,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:09.538Z",
          "Duration": 44029358,
          "HasResultSet": false,
          "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:09.966Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:09.541Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1247",
          "HasResultSet": false,
          "Id": "28cae268-59c4-4821-a5f1-32086e7d62a2:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2,3) THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__2\",\n    CASE WHEN group_set=3 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"inline_sum__3\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  GROUP BY 1,3,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 WHEN group_set=3 THEN 1 ELSE group_set END as group_set,\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2,3) THEN\n      \"popular_name__1\"\n      END as \"popular_name__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n      ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as \"by_state__1\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"inline_sum__3\"::DOUBLE PRECISION as \"inline_sum\") as __x)) FILTER (WHERE group_set=3))[1]) as \"inline__1\"\n  FROM __stage0\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n    \"by_state__1\" as \"by_state\", \n    \"inline__1\" as \"inline\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as \"o\"\nFROM __stage1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:09.966Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:10.031Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:170:8)

  ● redshift › double turtle - pipeline

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "df63b982-6dfd-4e0a-8d6f-04b66892e0fc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:10.827Z",
      "Database": "dev",
      "Duration": 43162790,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 34, column 18\n  Position: 1114",
      "HasResultSet": false,
      "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4",
      "RedshiftPid": 1073774705,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:10.918Z",
          "Duration": 43162790,
          "HasResultSet": false,
          "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:11.337Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:10.922Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 34, column 18\n  Position: 1114",
          "HasResultSet": false,
          "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,3,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"popular_name__1\"\n      END as \"popular_name__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n      ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as \"by_state__1\"\n  FROM __stage0\n  GROUP BY 1,3\n)\n, __stage2 AS (\n  SELECT\n    (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n      \"by_state__1\" as \"by_state\"\n      ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as \"o\"\n  FROM __stage1\n)\nSELECT \n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(by_state_0,'airport_count')::double precision),0) as \"airport_count\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"o\") as o_0 ON true\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(o_0,'by_state')) as by_state_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:11.337Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:11.402Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__0",
        CASE WHEN group_set IN (1,2) THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airport_count__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,3,5
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        MAX("airport_count__0") as "airport_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "popular_name__1"
          END as "popular_name__1",
        MAX("airport_count__1") as "airport_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "airport_count__2"::DOUBLE PRECISION as "airport_count"
          ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as "by_state__1"
      FROM __stage0
      GROUP BY 1,3
    )
    , __stage2 AS (
      SELECT
        (ARRAY_AGG("airport_count__0") FILTER (WHERE group_set=0 AND "airport_count__0" IS NOT NULL))[1] as "airport_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "airport_count__1"::DOUBLE PRECISION as "airport_count", 
          "by_state__1" as "by_state"
          ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as "o"
      FROM __stage1
    )
    SELECT 
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(by_state_0,'airport_count')::double precision),0) as "airport_count"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."o") as o_0 ON true
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(o_0,'by_state')) as by_state_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "df63b982-6dfd-4e0a-8d6f-04b66892e0fc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:10.827Z",
      "Database": "dev",
      "Duration": 43162790,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 34, column 18\n  Position: 1114",
      "HasResultSet": false,
      "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4",
      "RedshiftPid": 1073774705,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:10.918Z",
          "Duration": 43162790,
          "HasResultSet": false,
          "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:11.337Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:10.922Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 34, column 18\n  Position: 1114",
          "HasResultSet": false,
          "Id": "b38dfa6c-dbbb-4c6e-93b1-2e4ee52222c4:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airport_count__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,3,5\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    MAX(\"airport_count__0\") as \"airport_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"popular_name__1\"\n      END as \"popular_name__1\",\n    MAX(\"airport_count__1\") as \"airport_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n      ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:2]),'[]'::JSONB) as \"by_state__1\"\n  FROM __stage0\n  GROUP BY 1,3\n)\n, __stage2 AS (\n  SELECT\n    (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\", \n      \"by_state__1\" as \"by_state\"\n      ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:3]),'[]'::JSONB) as \"o\"\n  FROM __stage1\n)\nSELECT \n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(by_state_0,'airport_count')::double precision),0) as \"airport_count\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"o\") as o_0 ON true\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(o_0,'by_state')) as by_state_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:11.337Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:11.402Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:196:8)

  ● redshift › model: filtered turtle

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "da6e69b5-0739-48d8-91cb-70483e62cfe5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:13.654Z",
      "Database": "dev",
      "Duration": 52407797,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 16\n  Position: 762",
      "HasResultSet": false,
      "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad",
      "RedshiftPid": 1073840253,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:13.752Z",
          "Duration": 52407797,
          "HasResultSet": false,
          "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:14.202Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:13.755Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 16\n  Position: 762",
          "HasResultSet": false,
          "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      aircraft_models_0.\"manufacturer\"\n      END as \"manufacturer__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n   LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n    ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE (group_set NOT IN (1) OR (group_set IN (1) AND aircraft_models_0.\"manufacturer\" LIKE 'B%'))\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"manufacturer__1\" as \"manufacturer\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as \"b\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:14.202Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:14.268Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          aircraft_models_0."manufacturer"
          END as "manufacturer__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1"
      FROM "malloytest"."aircraft" as base
       LEFT JOIN "malloytest"."aircraft_models" AS aircraft_models_0
        ON aircraft_models_0."aircraft_model_code"=base."aircraft_model_code"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE (group_set NOT IN (1) OR (group_set IN (1) AND aircraft_models_0."manufacturer" LIKE 'B%'))
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "manufacturer__1" as "manufacturer", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count"
        ) as __x)  ORDER BY  "aircraft_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as "b"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "da6e69b5-0739-48d8-91cb-70483e62cfe5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:13.654Z",
      "Database": "dev",
      "Duration": 52407797,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 16\n  Position: 762",
      "HasResultSet": false,
      "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad",
      "RedshiftPid": 1073840253,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:13.752Z",
          "Duration": 52407797,
          "HasResultSet": false,
          "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:14.202Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:13.755Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 16\n  Position: 762",
          "HasResultSet": false,
          "Id": "e55b50cb-f3b3-475f-aa4d-8e69185bb3ad:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      aircraft_models_0.\"manufacturer\"\n      END as \"manufacturer__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n   LEFT JOIN \"malloytest\".\"aircraft_models\" AS aircraft_models_0\n    ON aircraft_models_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE (group_set NOT IN (1) OR (group_set IN (1) AND aircraft_models_0.\"manufacturer\" LIKE 'B%'))\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"manufacturer__1\" as \"manufacturer\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as \"b\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:14.202Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:14.268Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:215:8)

  ● redshift › model: having in a nest

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c63a59ad-c7ae-4afe-8c74-853e3bc09b59",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:16.534Z",
      "Database": "dev",
      "Duration": 44431824,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 677",
      "HasResultSet": false,
      "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c",
      "RedshiftPid": 1073922153,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:16.631Z",
          "Duration": 44431824,
          "HasResultSet": false,
          "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:17.055Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:16.634Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 677",
          "HasResultSet": false,
          "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"region\" as \"region__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"region\" IS NOT NULL\n  GROUP BY 1,2,3\n  HAVING (group_set<>1 OR (group_set=1 AND (CASE WHEN group_set=1 THEN\n    COUNT(1)\n    END)>50))\n)\nSELECT\n  \"region__0\" as \"region\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\"\n    ) as __x)  ORDER BY  \"state__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:10]),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\nLIMIT 10\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:17.055Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:17.121Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."region" as "region__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1"
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."region" IS NOT NULL
      GROUP BY 1,2,3
      HAVING (group_set<>1 OR (group_set=1 AND (CASE WHEN group_set=1 THEN
        COUNT(1)
        END)>50))
    )
    SELECT
      "region__0" as "region",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count"
        ) as __x)  ORDER BY  "state__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:10]),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST
    LIMIT 10

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c63a59ad-c7ae-4afe-8c74-853e3bc09b59",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:16.534Z",
      "Database": "dev",
      "Duration": 44431824,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 677",
      "HasResultSet": false,
      "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c",
      "RedshiftPid": 1073922153,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:16.631Z",
          "Duration": 44431824,
          "HasResultSet": false,
          "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:17.055Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:16.634Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 677",
          "HasResultSet": false,
          "Id": "1c5324e1-2185-49b4-9572-22aa66bfec7c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"region\" as \"region__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"region\" IS NOT NULL\n  GROUP BY 1,2,3\n  HAVING (group_set<>1 OR (group_set=1 AND (CASE WHEN group_set=1 THEN\n    COUNT(1)\n    END)>50))\n)\nSELECT\n  \"region__0\" as \"region\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\"\n    ) as __x)  ORDER BY  \"state__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:10]),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\nLIMIT 10\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:17.055Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:17.121Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:246:8)

  ● redshift › model: turtle having on main

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ee2af781-ab3b-42b1-845c-3fc1f941807a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:17.914Z",
      "Database": "dev",
      "Duration": 45545964,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 56, column 18\n  Position: 1911",
      "HasResultSet": false,
      "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3",
      "RedshiftPid": 1073930472,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:18.013Z",
          "Duration": 45545964,
          "HasResultSet": false,
          "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:18.465Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:18.016Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 56, column 18\n  Position: 1911",
          "HasResultSet": false,
          "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"region\" as \"region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"city\"\n      END as \"city__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"aircraft_count__2\",\n    CASE WHEN group_set=1 THEN CASE WHEN (CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)>45 THEN 0 ELSE 1 END END as __delete__1,\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>500 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,6\n  HAVING (group_set<>2 OR (group_set=2 AND (CASE WHEN group_set=2 THEN\n    COUNT(1)\n    END)>5))\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1,2) THEN __delete__0 END) OVER(partition by CAST(\"region__0\" as VARCHAR)) as __shaving__0,\n    MAX(CASE WHEN group_set IN (1,2) THEN __delete__1 END) OVER(partition by CAST(\"state__1\" as VARCHAR),CAST(\"region__0\" as VARCHAR)) as __shaving__1 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1,2) AND __shaving__0=1)OR (group_set IN (1,2) AND __shaving__1=1)\n  ))\n, __stage3 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"region__0\" as \"region__0\",\n    MAX(\"aircraft_count__0\") as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"state__1\"\n      END as \"state__1\",\n    MAX(\"aircraft_count__1\") as \"aircraft_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"city__2\" as \"city\", \n      \"aircraft_count__2\"::DOUBLE PRECISION as \"aircraft_count\"\n      ) as __x)  ORDER BY  \"aircraft_count__2\" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_city__1\"\n  FROM __stage2\n  GROUP BY 1,2,4\n)\nSELECT\n  \"region__0\" as \"region\",\n  (ARRAY_AGG(\"aircraft_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_count__0\" IS NOT NULL))[1] as \"aircraft_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n    \"by_city__1\" as \"by_city\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage3\nGROUP BY 1\nORDER BY 2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:18.465Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:18.531Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."region" as "region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1",
        CASE WHEN group_set=2 THEN
          base."city"
          END as "city__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "aircraft_count__2",
        CASE WHEN group_set=1 THEN CASE WHEN (CASE WHEN group_set=1 THEN
          COUNT(1)
          END)>45 THEN 0 ELSE 1 END END as __delete__1,
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>500 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,6
      HAVING (group_set<>2 OR (group_set=2 AND (CASE WHEN group_set=2 THEN
        COUNT(1)
        END)>5))
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1,2) THEN __delete__0 END) OVER(partition by CAST("region__0" as VARCHAR)) as __shaving__0,
        MAX(CASE WHEN group_set IN (1,2) THEN __delete__1 END) OVER(partition by CAST("state__1" as VARCHAR),CAST("region__0" as VARCHAR)) as __shaving__1 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1,2) AND __shaving__0=1)OR (group_set IN (1,2) AND __shaving__1=1)
      ))
    , __stage3 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "region__0" as "region__0",
        MAX("aircraft_count__0") as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "state__1"
          END as "state__1",
        MAX("aircraft_count__1") as "aircraft_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "city__2" as "city", 
          "aircraft_count__2"::DOUBLE PRECISION as "aircraft_count"
          ) as __x)  ORDER BY  "aircraft_count__2" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_city__1"
      FROM __stage2
      GROUP BY 1,2,4
    )
    SELECT
      "region__0" as "region",
      (ARRAY_AGG("aircraft_count__0") FILTER (WHERE group_set=0 AND "aircraft_count__0" IS NOT NULL))[1] as "aircraft_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count", 
        "by_city__1" as "by_city"
        ) as __x)  ORDER BY  "aircraft_count__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage3
    GROUP BY 1
    ORDER BY 2 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ee2af781-ab3b-42b1-845c-3fc1f941807a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:17.914Z",
      "Database": "dev",
      "Duration": 45545964,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 56, column 18\n  Position: 1911",
      "HasResultSet": false,
      "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3",
      "RedshiftPid": 1073930472,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:18.013Z",
          "Duration": 45545964,
          "HasResultSet": false,
          "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:18.465Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:18.016Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 56, column 18\n  Position: 1911",
          "HasResultSet": false,
          "Id": "62f0e005-5097-4c76-b4c8-028bd78ca5e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"region\" as \"region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"city\"\n      END as \"city__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"aircraft_count__2\",\n    CASE WHEN group_set=1 THEN CASE WHEN (CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)>45 THEN 0 ELSE 1 END END as __delete__1,\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>500 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,6\n  HAVING (group_set<>2 OR (group_set=2 AND (CASE WHEN group_set=2 THEN\n    COUNT(1)\n    END)>5))\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1,2) THEN __delete__0 END) OVER(partition by CAST(\"region__0\" as VARCHAR)) as __shaving__0,\n    MAX(CASE WHEN group_set IN (1,2) THEN __delete__1 END) OVER(partition by CAST(\"state__1\" as VARCHAR),CAST(\"region__0\" as VARCHAR)) as __shaving__1 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1,2) AND __shaving__0=1)OR (group_set IN (1,2) AND __shaving__1=1)\n  ))\n, __stage3 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"region__0\" as \"region__0\",\n    MAX(\"aircraft_count__0\") as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"state__1\"\n      END as \"state__1\",\n    MAX(\"aircraft_count__1\") as \"aircraft_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"city__2\" as \"city\", \n      \"aircraft_count__2\"::DOUBLE PRECISION as \"aircraft_count\"\n      ) as __x)  ORDER BY  \"aircraft_count__2\" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_city__1\"\n  FROM __stage2\n  GROUP BY 1,2,4\n)\nSELECT\n  \"region__0\" as \"region\",\n  (ARRAY_AGG(\"aircraft_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_count__0\" IS NOT NULL))[1] as \"aircraft_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n    \"by_city__1\" as \"by_city\"\n    ) as __x)  ORDER BY  \"aircraft_count__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage3\nGROUP BY 1\nORDER BY 2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:18.465Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:18.531Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:271:8)

  ● redshift › model: having float group by partition

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "dabd21bb-1ea4-4e31-9aaf-a26d9220f738",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:19.323Z",
      "Database": "dev",
      "Duration": 42903555,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"aircraft_model_count__0\") FILTER\", at line 34, column 41\n  Position: 1025",
      "HasResultSet": false,
      "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d",
      "RedshiftPid": 1073938528,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:19.405Z",
          "Duration": 42903555,
          "HasResultSet": false,
          "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:19.830Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:19.408Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"aircraft_model_count__0\") FILTER\", at line 34, column 41\n  Position: 1025",
          "HasResultSet": false,
          "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    (FLOOR(base.\"seats\"*1.0/20))*20.0 as \"seats_bucketed__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_model_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"engines\"\n      END as \"engines__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_model_count__1\",\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>400 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft_models\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE ((FLOOR(base.\"seats\"*1.0/20))*20.0)>0\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST(\"seats_bucketed__0\" as VARCHAR)) as __shaving__0 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)\n  ))\nSELECT\n  \"seats_bucketed__0\" as \"seats_bucketed\",\n  (ARRAY_AGG(\"aircraft_model_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_model_count__0\" IS NOT NULL))[1] as \"aircraft_model_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"engines__1\"::DOUBLE PRECISION as \"engines\", \n    \"aircraft_model_count__1\"::DOUBLE PRECISION as \"aircraft_model_count\"\n    ) as __x)  ORDER BY  \"aircraft_model_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"foo\"\nFROM __stage2\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:19.830Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:19.895Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        (FLOOR(base."seats"*1.0/20))*20.0 as "seats_bucketed__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_model_count__0",
        CASE WHEN group_set=1 THEN
          base."engines"
          END as "engines__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_model_count__1",
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>400 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft_models" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE ((FLOOR(base."seats"*1.0/20))*20.0)>0
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST("seats_bucketed__0" as VARCHAR)) as __shaving__0 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)
      ))
    SELECT
      "seats_bucketed__0" as "seats_bucketed",
      (ARRAY_AGG("aircraft_model_count__0") FILTER (WHERE group_set=0 AND "aircraft_model_count__0" IS NOT NULL))[1] as "aircraft_model_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "engines__1"::DOUBLE PRECISION as "engines", 
        "aircraft_model_count__1"::DOUBLE PRECISION as "aircraft_model_count"
        ) as __x)  ORDER BY  "aircraft_model_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "foo"
    FROM __stage2
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "dabd21bb-1ea4-4e31-9aaf-a26d9220f738",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:19.323Z",
      "Database": "dev",
      "Duration": 42903555,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"aircraft_model_count__0\") FILTER\", at line 34, column 41\n  Position: 1025",
      "HasResultSet": false,
      "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d",
      "RedshiftPid": 1073938528,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:19.405Z",
          "Duration": 42903555,
          "HasResultSet": false,
          "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:19.830Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:19.408Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"aircraft_model_count__0\") FILTER\", at line 34, column 41\n  Position: 1025",
          "HasResultSet": false,
          "Id": "7a8015c9-891e-4e36-8563-2279d2d5aa8d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    (FLOOR(base.\"seats\"*1.0/20))*20.0 as \"seats_bucketed__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_model_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"engines\"\n      END as \"engines__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_model_count__1\",\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>400 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft_models\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE ((FLOOR(base.\"seats\"*1.0/20))*20.0)>0\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST(\"seats_bucketed__0\" as VARCHAR)) as __shaving__0 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)\n  ))\nSELECT\n  \"seats_bucketed__0\" as \"seats_bucketed\",\n  (ARRAY_AGG(\"aircraft_model_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_model_count__0\" IS NOT NULL))[1] as \"aircraft_model_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"engines__1\"::DOUBLE PRECISION as \"engines\", \n    \"aircraft_model_count__1\"::DOUBLE PRECISION as \"aircraft_model_count\"\n    ) as __x)  ORDER BY  \"aircraft_model_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"foo\"\nFROM __stage2\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:19.830Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:19.895Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:292:11)

  ● redshift › model: dates named

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 8: Cannot do time truncation on type 'number'
      |           t_timestamp_date is t_timestamp.day,
      |                               ^
    line 9: Cannot do time truncation on type 'number'
      |           t_timestamp_hour is t_timestamp.hour,
      |                               ^
    line 10: Cannot do time truncation on type 'number'
      |           t_timestamp_minute is t_timestamp.minute,
      |                                 ^
    line 11: Cannot do time truncation on type 'number'
      |           t_timestamp_second is t_timestamp.second,
      |                                 ^
    line 12: Cannot do time truncation on type 'number'
      |           t_timestamp_month is t_timestamp.month,
      |                                ^
    line 13: Cannot do time truncation on type 'number'
      |           t_timestamp_year is t_timestamp.year,
      |                               ^

      342 |           t_timestamp_year is t_timestamp.year,
      343 |       }
    > 344 |     `).malloyResultMatches(runtime, {
          |        ^
      345 |         t_date: new Date('2020-03-02'),
      346 |         t_date_month: new Date('2020-03-01'),
      347 |         t_date_year: new Date('2020-01-01'),

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:344:8)

  ● redshift › sql expr functions › sql_boolean

    SQL Generated:
      SELECT 
         base."seats" > 20 as "boolean_1",
         base."engines" = 2 as "boolean_2"
      FROM "malloytest"."aircraft_models" as base
      WHERE base."aircraft_model_code"='0270202'
      GROUP BY 1,2
      ORDER BY 1 asc NULLS LAST
      
    Expected {boolean_1: true} Got: null
    Expected {boolean_2: false} Got: null

      521 |           group_by: boolean_2 is sql_boolean("\${engines} = 2")
      522 |         }
    > 523 |   `).malloyResultMatches(expressionModel, {
          |      ^
      524 |         boolean_1: booleanResult(true, databaseName),
      525 |         boolean_2: booleanResult(false, databaseName),
      526 |       });

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:523:6)

  ● redshift › query with aliasname used twice

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "300ee431-ad60-45f6-bf56-0c0dab42ec79",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:47.079Z",
      "Database": "dev",
      "Duration": 44497102,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 18\n  Position: 1312",
      "HasResultSet": false,
      "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590",
      "RedshiftPid": 1073987709,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:47.168Z",
          "Duration": 44497102,
          "HasResultSet": false,
          "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:47.594Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:47.171Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 18\n  Position: 1312",
          "HasResultSet": false,
          "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 1) as \"first__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 2)\n      END as \"first_two__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=2 THEN\n      SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 3)\n      END as \"first_three__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"aircraft_count__2\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,6\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"first__0\" as \"first__0\",\n    MAX(\"aircraft_count__0\") as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"first_two__1\"\n      END as \"first_two__1\",\n    MAX(\"aircraft_count__1\") as \"aircraft_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"first_three__2\" as \"first_three\", \n      \"aircraft_count__2\"::DOUBLE PRECISION as \"aircraft_count\"\n      ) as __x)  ORDER BY  \"aircraft_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"aircraft__1\"\n  FROM __stage0\n  GROUP BY 1,2,4\n)\n, __stage2 AS (\n  SELECT\n    \"first__0\" as \"first\",\n    (ARRAY_AGG(\"aircraft_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_count__0\" IS NOT NULL))[1] as \"aircraft_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"first_two__1\" as \"first_two\", \n      \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n      \"aircraft__1\" as \"aircraft\"\n      ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"aircraft\"\n  FROM __stage1\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(aircraft_0,'first_three') as \"first_three\",\n   base.\"aircraft_count\" as \"aircraft_count\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"aircraft\") as aircraft_2 ON true\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(aircraft_2,'aircraft')) as aircraft_0 ON true\nORDER BY 2 desc NULLS LAST,1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:47.594Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:47.656Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 1) as "first__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 2)
          END as "first_two__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "aircraft_count__1",
        CASE WHEN group_set=2 THEN
          SUBSTR(base."city", CASE WHEN 1 < 0 THEN LENGTH(base."city") + 1 + 1 ELSE 1 END, 3)
          END as "first_three__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "aircraft_count__2"
      FROM "malloytest"."aircraft" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,6
    )
    , __stage1 AS (
      SELECT 
        CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,
        "first__0" as "first__0",
        MAX("aircraft_count__0") as "aircraft_count__0",
        CASE WHEN group_set IN (1,2) THEN
          "first_two__1"
          END as "first_two__1",
        MAX("aircraft_count__1") as "aircraft_count__1",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "first_three__2" as "first_three", 
          "aircraft_count__2"::DOUBLE PRECISION as "aircraft_count"
          ) as __x)  ORDER BY  "aircraft_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "aircraft__1"
      FROM __stage0
      GROUP BY 1,2,4
    )
    , __stage2 AS (
      SELECT
        "first__0" as "first",
        (ARRAY_AGG("aircraft_count__0") FILTER (WHERE group_set=0 AND "aircraft_count__0" IS NOT NULL))[1] as "aircraft_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "first_two__1" as "first_two", 
          "aircraft_count__1"::DOUBLE PRECISION as "aircraft_count", 
          "aircraft__1" as "aircraft"
          ) as __x)  ORDER BY  "aircraft_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "aircraft"
      FROM __stage1
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(aircraft_0,'first_three') as "first_three",
       base."aircraft_count" as "aircraft_count"
    FROM __stage2 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."aircraft") as aircraft_2 ON true
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(aircraft_2,'aircraft')) as aircraft_0 ON true
    ORDER BY 2 desc NULLS LAST,1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "300ee431-ad60-45f6-bf56-0c0dab42ec79",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:47.079Z",
      "Database": "dev",
      "Duration": 44497102,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 18\n  Position: 1312",
      "HasResultSet": false,
      "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590",
      "RedshiftPid": 1073987709,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:47.168Z",
          "Duration": 44497102,
          "HasResultSet": false,
          "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:47.594Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:47.171Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 18\n  Position: 1312",
          "HasResultSet": false,
          "Id": "abbb76d4-085f-4d6a-b566-3c6d2b8c5590:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 1) as \"first__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 2)\n      END as \"first_two__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"aircraft_count__1\",\n    CASE WHEN group_set=2 THEN\n      SUBSTR(base.\"city\", CASE WHEN 1 < 0 THEN LENGTH(base.\"city\") + 1 + 1 ELSE 1 END, 3)\n      END as \"first_three__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"aircraft_count__2\"\n  FROM \"malloytest\".\"aircraft\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,6\n)\n, __stage1 AS (\n  SELECT \n    CASE WHEN group_set=2 THEN 1 ELSE group_set END as group_set,\n    \"first__0\" as \"first__0\",\n    MAX(\"aircraft_count__0\") as \"aircraft_count__0\",\n    CASE WHEN group_set IN (1,2) THEN\n      \"first_two__1\"\n      END as \"first_two__1\",\n    MAX(\"aircraft_count__1\") as \"aircraft_count__1\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"first_three__2\" as \"first_three\", \n      \"aircraft_count__2\"::DOUBLE PRECISION as \"aircraft_count\"\n      ) as __x)  ORDER BY  \"aircraft_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"aircraft__1\"\n  FROM __stage0\n  GROUP BY 1,2,4\n)\n, __stage2 AS (\n  SELECT\n    \"first__0\" as \"first\",\n    (ARRAY_AGG(\"aircraft_count__0\") FILTER (WHERE group_set=0 AND \"aircraft_count__0\" IS NOT NULL))[1] as \"aircraft_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"first_two__1\" as \"first_two\", \n      \"aircraft_count__1\"::DOUBLE PRECISION as \"aircraft_count\", \n      \"aircraft__1\" as \"aircraft\"\n      ) as __x)  ORDER BY  \"aircraft_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"aircraft\"\n  FROM __stage1\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(aircraft_0,'first_three') as \"first_three\",\n   base.\"aircraft_count\" as \"aircraft_count\"\nFROM __stage2 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"aircraft\") as aircraft_2 ON true\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_EXTRACT_PATH(aircraft_2,'aircraft')) as aircraft_0 ON true\nORDER BY 2 desc NULLS LAST,1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:47.594Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:47.656Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:655:10)

  ● redshift › string literal quoting › quote single character

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bbf4a5fb-03ab-4a29-bc25-6e9bda85aa0a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:51.377Z",
      "Database": "dev",
      "Duration": 49606473,
      "Error": "Query #2 failed with ERROR: failed to find conversion function from \"unknown\" to text",
      "HasResultSet": false,
      "Id": "3c03b1cb-010f-4e53-8fda-34028de5b532",
      "RedshiftPid": 1073799274,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:51.478Z",
          "Duration": 49606473,
          "HasResultSet": false,
          "Id": "3c03b1cb-010f-4e53-8fda-34028de5b532:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:51.908Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:51.481Z",
          "Duration": -1,
          "Error": "ERROR: failed to find conversion function from \"unknown\" to text",
          "HasResultSet": false,
          "Id": "3c03b1cb-010f-4e53-8fda-34028de5b532:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     'x' as \"expect\",\n     'x' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}x{single-quote} == x',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:51.908Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:51.974Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift › string literal quoting › quote single quote

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "af8606fe-94d8-4dde-a31d-070ec3dba3d3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:52.788Z",
      "Database": "dev",
      "Duration": 45658351,
      "Error": "Query #2 failed with ERROR: failed to find conversion function from \"unknown\" to text",
      "HasResultSet": false,
      "Id": "30631126-9594-4023-a1f7-c127fef65380",
      "RedshiftPid": 1073979506,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:52.868Z",
          "Duration": 45658351,
          "HasResultSet": false,
          "Id": "30631126-9594-4023-a1f7-c127fef65380:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:53.282Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:52.871Z",
          "Duration": -1,
          "Error": "ERROR: failed to find conversion function from \"unknown\" to text",
          "HasResultSet": false,
          "Id": "30631126-9594-4023-a1f7-c127fef65380:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     '''' as \"expect\",\n     '''' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{single-quote}{single-quote} == {single-quote}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:53.282Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:53.349Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift › string literal quoting › quote backslash

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "01af7117-2d95-46c8-a855-46f309d12941",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:31:55.590Z",
      "Database": "dev",
      "Duration": 43977730,
      "Error": "Query #2 failed with Unterminated string literal started at position 370 in SQL WITH __stage0 AS (\n  SELECT \n     '\\' as \"expect\",\n     '\\' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{backslash}{single-quote} == {backslash}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n. Expected  char",
      "HasResultSet": false,
      "Id": "f6076439-0828-4fa1-bc4f-ae3a7ab1b540",
      "RedshiftPid": 1073750135,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:31:55.687Z",
          "Duration": 43977730,
          "HasResultSet": false,
          "Id": "f6076439-0828-4fa1-bc4f-ae3a7ab1b540:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:31:56.057Z"
        },
        {
          "CreatedAt": "2025-02-28T02:31:55.691Z",
          "Duration": -1,
          "Error": "Unterminated string literal started at position 370 in SQL WITH __stage0 AS (\n  SELECT \n     '\\' as \"expect\",\n     '\\' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{backslash}{single-quote} == {backslash}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n. Expected  char",
          "HasResultSet": false,
          "Id": "f6076439-0828-4fa1-bc4f-ae3a7ab1b540:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     '\\' as \"expect\",\n     '\\' as \"got\"\n  FROM (SELECT 1 as one) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: {single-quote}{backslash}{backslash}{single-quote} == {backslash}',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',base.\"got\")) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:31:56.057Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:31:56.073Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift › null safe booleans › not boolean

    SQL Generated:
      SELECT 
         COALESCE(NOT base."tf",TRUE) as "not_null_boolean"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {not_null_boolean: true} Got: null

      859 |         select:
      860 |           not_null_boolean is not tf
    > 861 |       }`).malloyResultMatches(runtime, {not_null_boolean: is_true});
          |           ^
      862 |     });
      863 |     it('numeric != non-null to null', async () => {
      864 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:861:11)

  ● redshift › null safe booleans › numeric != non-null to null

    SQL Generated:
      SELECT 
         COALESCE(base."x"!=9,true) as "val_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {val_ne_null: true} Got: null

      864 |       await expect(
      865 |         `run: ${nulls} -> { select: val_ne_null is x != 9 }`
    > 866 |       ).malloyResultMatches(runtime, {val_ne_null: is_true});
          |         ^
      867 |     });
      868 |     it('string !~ non-null to null', async () => {
      869 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:866:9)

  ● redshift › null safe booleans › string !~ non-null to null

    SQL Generated:
      SELECT 
         COALESCE(base."a" NOT LIKE 'z',true) as "val_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {val_ne_null: true} Got: null

      869 |       await expect(
      870 |         `run: ${nulls} -> { select: val_ne_null is a !~ 'z' }`
    > 871 |       ).malloyResultMatches(runtime, {val_ne_null: is_true});
          |         ^
      872 |     });
      873 |     it('regex !~ non-null to null', async () => {
      874 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:871:9)

  ● redshift › null safe booleans › regex !~ non-null to null

    SQL Generated:
      SELECT 
         COALESCE(NOT (base."a" ~ 'z'),TRUE) as "val_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {val_ne_null: true} Got: null

      874 |       await expect(
      875 |         `run: ${nulls} -> { select: val_ne_null is a !~ r'z' }`
    > 876 |       ).malloyResultMatches(runtime, {val_ne_null: is_true});
          |         ^
      877 |     });
      878 |     it('numeric != null-to-null', async () => {
      879 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:876:9)

  ● redshift › null safe booleans › numeric != null-to-null

    SQL Generated:
      SELECT 
         COALESCE(base."x"!=base."y",true) as "null_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {null_ne_null: true} Got: null

      879 |       await expect(
      880 |         `run: ${nulls} -> { select: null_ne_null is x != y }`
    > 881 |       ).malloyResultMatches(runtime, {null_ne_null: is_true});
          |         ^
      882 |     });
      883 |     it('string !~ null-to-null', async () => {
      884 |       await expect(

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:881:9)

  ● redshift › null safe booleans › string !~ null-to-null

    SQL Generated:
      SELECT 
         COALESCE(base."a" NOT LIKE base."b",true) as "null_ne_null"
      FROM (
            SELECT
              0 as "n",
              1 as "x", 2 as "y",
              'a' as "a", 'b' as "b",
              (1 = 1) as "tf"
            UNION ALL SELECT
              5,
              null, null, null, null, null
          ) as base
      WHERE base."n">0
      
    Expected {null_ne_null: true} Got: null

      884 |       await expect(
      885 |         `run: ${nulls} -> { select: null_ne_null is a !~ b }`
    > 886 |       ).malloyResultMatches(runtime, {null_ne_null: is_true});
          |         ^
      887 |     });
      888 |   });
      889 |

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:886:9)

  ● redshift › dimension expressions expanded with parens properly

    SQL Generated:
      SELECT 
         false and ((false) or (true)) as "no_paren",
         false and (((false) or (true))) as "paren"
      FROM (SELECT 1 as one) as base
      
    Expected {paren: false} Got: null
    Expected {no_paren: false} Got: null

      897 |           paren is    false and (fot)
      898 |       }`
    > 899 |     ).malloyResultMatches(runtime, {
          |       ^
      900 |       paren: booleanResult(false, databaseName),
      901 |       no_paren: booleanResult(false, databaseName),
      902 |     });

      at Object.<anonymous> (test/src/databases/all/expr.spec.ts:899:7)

FAIL test/src/databases/all/nomodel.spec.ts (141.248 s)
  ● join_many - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "afa5a618-6a7d-4b8b-9d60-a3311504e02b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:46.469Z",
      "Database": "dev",
      "Duration": 45052612,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb",
      "RedshiftPid": 1073766522,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:46.564Z",
          "Duration": 45052612,
          "HasResultSet": false,
          "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:47.003Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:46.567Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb:2",
          "QueryString": "SELECT \n   FLOOR((CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base.\"seats\" IS NOT NULL THEN base.\"__distinct_key\" END),0)) as \"avg_seats\",\n   FLOOR(AVG(a_0.\"year_built\")) as \"avg_year\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"aircraft_models\" as x) as base\n LEFT JOIN \"malloytest\".\"aircraft\" AS a_0\n  ON a_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:47.003Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:47.069Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       FLOOR((CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."seats",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base."seats" IS NOT NULL THEN base."__distinct_key" END),0)) as "avg_seats",
       FLOOR(AVG(a_0."year_built")) as "avg_year"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."aircraft_models" as x) as base
     LEFT JOIN "malloytest"."aircraft" AS a_0
      ON a_0."aircraft_model_code"=base."aircraft_model_code"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "afa5a618-6a7d-4b8b-9d60-a3311504e02b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:46.469Z",
      "Database": "dev",
      "Duration": 45052612,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb",
      "RedshiftPid": 1073766522,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:46.564Z",
          "Duration": 45052612,
          "HasResultSet": false,
          "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:47.003Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:46.567Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "6b981aca-5b8e-455f-8b66-ab7f4a8fd6eb:2",
          "QueryString": "SELECT \n   FLOOR((CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"seats\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base.\"seats\" IS NOT NULL THEN base.\"__distinct_key\" END),0)) as \"avg_seats\",\n   FLOOR(AVG(a_0.\"year_built\")) as \"avg_year\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"aircraft_models\" as x) as base\n LEFT JOIN \"malloytest\".\"aircraft\" AS a_0\n  ON a_0.\"aircraft_model_code\"=base.\"aircraft_model_code\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:47.003Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:47.069Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:139:10)

  ● join_many filter multiple values - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "191f0b82-f322-40ed-8490-94f561f5990f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:50.685Z",
      "Database": "dev",
      "Duration": 44287504,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5",
      "RedshiftPid": 1073750136,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:50.777Z",
          "Duration": 44287504,
          "HasResultSet": false,
          "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:51.185Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:50.781Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\",\n   a_0.\"state\" as \"state\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN \"malloytest\".\"airports\" AS a_0\n  ON base.\"state\"=a_0.\"state\" AND (a_0.\"state\" IN ('NH','CA'))\nGROUP BY 2\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:51.185Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:51.252Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c",
       a_0."state" as "state"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN "malloytest"."airports" AS a_0
      ON base."state"=a_0."state" AND (a_0."state" IN ('NH','CA'))
    GROUP BY 2
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "191f0b82-f322-40ed-8490-94f561f5990f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:50.685Z",
      "Database": "dev",
      "Duration": 44287504,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5",
      "RedshiftPid": 1073750136,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:50.777Z",
          "Duration": 44287504,
          "HasResultSet": false,
          "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:51.185Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:50.781Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3c7a2769-508c-40af-b945-69fe9d05e0c5:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\",\n   a_0.\"state\" as \"state\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN \"malloytest\".\"airports\" AS a_0\n  ON base.\"state\"=a_0.\"state\" AND (a_0.\"state\" IN ('NH','CA'))\nGROUP BY 2\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:51.185Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:51.252Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:163:8)

  ● join_one condition no primary key - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0755d6c0-8426-45dc-b67e-32c5dda61466",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:52.045Z",
      "Database": "dev",
      "Duration": 44241406,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3081749b-5373-47b1-b646-3b5b88ca8615",
      "RedshiftPid": 1073905775,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:52.125Z",
          "Duration": 44241406,
          "HasResultSet": false,
          "Id": "3081749b-5373-47b1-b646-3b5b88ca8615:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:52.596Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:52.128Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3081749b-5373-47b1-b646-3b5b88ca8615:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\"\nFROM \"malloytest\".\"airports\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON base.\"state\"=a_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:52.596Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:52.652Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c"
    FROM "malloytest"."airports" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON base."state"=a_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0755d6c0-8426-45dc-b67e-32c5dda61466",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:52.045Z",
      "Database": "dev",
      "Duration": 44241406,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3081749b-5373-47b1-b646-3b5b88ca8615",
      "RedshiftPid": 1073905775,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:52.125Z",
          "Duration": 44241406,
          "HasResultSet": false,
          "Id": "3081749b-5373-47b1-b646-3b5b88ca8615:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:52.596Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:52.128Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3081749b-5373-47b1-b646-3b5b88ca8615:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\"\nFROM \"malloytest\".\"airports\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON base.\"state\"=a_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:52.596Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:52.652Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:179:8)

  ● join_one filter multiple values - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7ddb5b81-91d4-4093-af90-eb1528162cd3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:53.377Z",
      "Database": "dev",
      "Duration": 53717804,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6",
      "RedshiftPid": 1073946726,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:53.462Z",
          "Duration": 53717804,
          "HasResultSet": false,
          "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:53.898Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:53.465Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\",\n   a_0.\"state\" as \"state\"\nFROM \"malloytest\".\"airports\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON base.\"state\"=a_0.\"state\" AND (a_0.\"state\" IN ('TX','LA'))\nGROUP BY 2\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:53.898Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:53.964Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "c",
       a_0."state" as "state"
    FROM "malloytest"."airports" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON base."state"=a_0."state" AND (a_0."state" IN ('TX','LA'))
    GROUP BY 2
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7ddb5b81-91d4-4093-af90-eb1528162cd3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:53.377Z",
      "Database": "dev",
      "Duration": 53717804,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6",
      "RedshiftPid": 1073946726,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:53.462Z",
          "Duration": 53717804,
          "HasResultSet": false,
          "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:53.898Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:53.465Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "049b8f49-5b82-43a0-943f-24fd10878fb6:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"c\",\n   a_0.\"state\" as \"state\"\nFROM \"malloytest\".\"airports\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON base.\"state\"=a_0.\"state\" AND (a_0.\"state\" IN ('TX','LA'))\nGROUP BY 2\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:53.898Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:53.964Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:194:8)

  ● join_many cross from  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2b544658-2126-4ca4-bcbf-87f99be115e7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:54.747Z",
      "Database": "dev",
      "Duration": 43340719,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528",
      "RedshiftPid": 1073954940,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:54.853Z",
          "Duration": 43340719,
          "HasResultSet": false,
          "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:55.307Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:54.856Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528:2",
          "QueryString": "SELECT \n   count(distinct CONCAT(base.\"state\",a_0.\"state\")) as \"row_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"left_count\",\n   COUNT(DISTINCT a_0.\"__distinct_key\") as \"right_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\",\n   ROUND((COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE((base.\"airport_count\"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as \"left_small_sum\",\n   ROUND((COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE((base.\"airport_count\"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as \"right_small_sum\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:55.307Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:55.372Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       count(distinct CONCAT(base."state",a_0."state")) as "row_count",
       COUNT(DISTINCT base."__distinct_key") as "left_count",
       COUNT(DISTINCT a_0."__distinct_key") as "right_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum",
       ROUND((COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE((base."airport_count"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as "left_small_sum",
       ROUND((COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE((base."airport_count"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as "right_small_sum"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON 1=1

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2b544658-2126-4ca4-bcbf-87f99be115e7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:54.747Z",
      "Database": "dev",
      "Duration": 43340719,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528",
      "RedshiftPid": 1073954940,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:54.853Z",
          "Duration": 43340719,
          "HasResultSet": false,
          "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:55.307Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:54.856Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "20e1bd9d-dbd7-4c16-abd6-ded2369f6528:2",
          "QueryString": "SELECT \n   count(distinct CONCAT(base.\"state\",a_0.\"state\")) as \"row_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"left_count\",\n   COUNT(DISTINCT a_0.\"__distinct_key\") as \"right_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\",\n   ROUND((COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE((base.\"airport_count\"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as \"left_small_sum\",\n   ROUND((COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE((base.\"airport_count\"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::NUMERIC) as \"right_small_sum\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:55.307Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:55.372Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:222:8)

  ● join_one only  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5d089838-d8d1-4630-b81f-cef8873a4b2a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:56.132Z",
      "Database": "dev",
      "Duration": 53417368,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8",
      "RedshiftPid": 1073823861,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:56.237Z",
          "Duration": 53417368,
          "HasResultSet": false,
          "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:56.681Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:56.240Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     COALESCE(SUM(base.\"airport_count\"),0) as \"r\"\n  FROM \"malloytest\".\"state_facts\" as base\n)\nSELECT \n   count(distinct CONCAT(base.\"state\",CAST(a_0.\"r\" AS varchar))) as \"row_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"r\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\",\n   COALESCE(SUM(base.\"airport_count\"+a_0.\"r\"),0) as \"sum_sum\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage0 as x) AS a_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:56.681Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:56.744Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         COALESCE(SUM(base."airport_count"),0) as "r"
      FROM "malloytest"."state_facts" as base
    )
    SELECT 
       count(distinct CONCAT(base."state",CAST(a_0."r" AS varchar))) as "row_count",
       COALESCE(SUM(base."airport_count"),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."r",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum",
       COALESCE(SUM(base."airport_count"+a_0."r"),0) as "sum_sum"
    FROM "malloytest"."state_facts" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage0 as x) AS a_0
      ON 1=1

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5d089838-d8d1-4630-b81f-cef8873a4b2a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:56.132Z",
      "Database": "dev",
      "Duration": 53417368,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8",
      "RedshiftPid": 1073823861,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:56.237Z",
          "Duration": 53417368,
          "HasResultSet": false,
          "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:56.681Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:56.240Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "af83e69c-2833-49c9-966d-c4b37f68d8c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     COALESCE(SUM(base.\"airport_count\"),0) as \"r\"\n  FROM \"malloytest\".\"state_facts\" as base\n)\nSELECT \n   count(distinct CONCAT(base.\"state\",CAST(a_0.\"r\" AS varchar))) as \"row_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"r\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\",\n   COALESCE(SUM(base.\"airport_count\"+a_0.\"r\"),0) as \"sum_sum\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage0 as x) AS a_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:56.681Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:56.744Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:249:8)

  ● join_many cross ON  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3c9682cc-f6d2-4a3f-aa42-b4016aff8159",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:57.500Z",
      "Database": "dev",
      "Duration": 45432062,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "d1c413cf-6d8f-427e-a9e2-943169206022",
      "RedshiftPid": 1073913981,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:57.591Z",
          "Duration": 45432062,
          "HasResultSet": false,
          "Id": "d1c413cf-6d8f-427e-a9e2-943169206022:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:58.059Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:57.594Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "d1c413cf-6d8f-427e-a9e2-943169206022:2",
          "QueryString": "SELECT \n   count(distinct CONCAT(base.\"state\",a_0.\"state\")) as \"row_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON a_0.\"state\" IN ('CA','NY')\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:58.059Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:58.125Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       count(distinct CONCAT(base."state",a_0."state")) as "row_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "left_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(a_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
      ON a_0."state" IN ('CA','NY')

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3c9682cc-f6d2-4a3f-aa42-b4016aff8159",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:32:57.500Z",
      "Database": "dev",
      "Duration": 45432062,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "d1c413cf-6d8f-427e-a9e2-943169206022",
      "RedshiftPid": 1073913981,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:32:57.591Z",
          "Duration": 45432062,
          "HasResultSet": false,
          "Id": "d1c413cf-6d8f-427e-a9e2-943169206022:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:32:58.059Z"
        },
        {
          "CreatedAt": "2025-02-28T02:32:57.594Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "d1c413cf-6d8f-427e-a9e2-943169206022:2",
          "QueryString": "SELECT \n   count(distinct CONCAT(base.\"state\",a_0.\"state\")) as \"row_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"left_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(a_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(a_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(a_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"right_sum\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS a_0\n  ON a_0.\"state\" IN ('CA','NY')\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:32:58.059Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:32:58.125Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:272:8)

  ● join inner- redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f30875e4-5f0c-4ced-9f23-3681517215c8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:00.407Z",
      "Database": "dev",
      "Duration": 44566629,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d",
      "RedshiftPid": 1073922167,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:00.507Z",
          "Duration": 44566629,
          "HasResultSet": false,
          "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:00.952Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:00.511Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(1) as \"ac_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM __stage2 as base\n INNER JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:00.952Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:01.028Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(1) as "ac_count",
       COALESCE(SUM(base."airport_count"),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM __stage2 as base
     INNER JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f30875e4-5f0c-4ced-9f23-3681517215c8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:00.407Z",
      "Database": "dev",
      "Duration": 44566629,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d",
      "RedshiftPid": 1073922167,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:00.507Z",
          "Duration": 44566629,
          "HasResultSet": false,
          "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:00.952Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:00.511Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "3823baa6-69ad-4b26-97ff-ce52b36b224d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(1) as \"ac_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM __stage2 as base\n INNER JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:00.952Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:01.028Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:345:10)

  ● join left - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a6b0a3ea-7143-4015-a9d1-aa4d13868b8c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:01.938Z",
      "Database": "dev",
      "Duration": 51436577,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920",
      "RedshiftPid": 1073774710,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:02.057Z",
          "Duration": 51436577,
          "HasResultSet": false,
          "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:02.519Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:02.061Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(1) as \"ac_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM __stage2 as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:02.519Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:02.584Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(1) as "ac_count",
       COALESCE(SUM(base."airport_count"),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM __stage2 as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a6b0a3ea-7143-4015-a9d1-aa4d13868b8c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:01.938Z",
      "Database": "dev",
      "Duration": 51436577,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920",
      "RedshiftPid": 1073774710,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:02.057Z",
          "Duration": 51436577,
          "HasResultSet": false,
          "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:02.519Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:02.061Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "5ba423a4-eead-482d-a8a6-66f6d3423920:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(1) as \"ac_count\",\n   COALESCE(SUM(base.\"airport_count\"),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM __stage2 as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:02.519Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:02.584Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:371:10)

  ● join right - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f11e4258-bff9-436e-996b-f45a36df2a9b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:03.403Z",
      "Database": "dev",
      "Duration": 52623343,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3",
      "RedshiftPid": 1073995902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:03.490Z",
          "Duration": 52623343,
          "HasResultSet": false,
          "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:03.964Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:03.493Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT base.\"__distinct_key\") as \"ac_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage2 as x) as base\n RIGHT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:03.964Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:04.029Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT base."__distinct_key") as "ac_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage2 as x) as base
     RIGHT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f11e4258-bff9-436e-996b-f45a36df2a9b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:03.403Z",
      "Database": "dev",
      "Duration": 52623343,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3",
      "RedshiftPid": 1073995902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:03.490Z",
          "Duration": 52623343,
          "HasResultSet": false,
          "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:03.964Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:03.493Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "02f057d0-f744-4c8a-938c-cdf76f0288e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT base.\"__distinct_key\") as \"ac_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage2 as x) as base\n RIGHT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:03.964Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:04.029Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:397:10)

  ● join full - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e33f6244-06b8-4bf4-aed6-b24f49e02dd6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:04.779Z",
      "Database": "dev",
      "Duration": 44222407,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106",
      "RedshiftPid": 1073782907,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:04.865Z",
          "Duration": 44222407,
          "HasResultSet": false,
          "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:05.298Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:04.868Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT base.\"__distinct_key\") as \"ac_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage2 as x) as base\n FULL JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:05.298Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:05.365Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage1 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|C)'
    )
    , __stage2 AS (
      SELECT 
         b_0."state" as "state",
         b_0."airport_count" as "airport_count"
      FROM __stage0 as base
       LEFT JOIN __stage1 AS b_0
        ON 1=1
    )
    , __stage3 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT base."__distinct_key") as "ac_count",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "ac_sum",
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(am_states_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(am_states_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "am_sum",
       COUNT(DISTINCT am_states_0."__distinct_key") as "am_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage2 as x) as base
     FULL JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage3 as x) AS am_states_0
      ON base."state"=am_states_0."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e33f6244-06b8-4bf4-aed6-b24f49e02dd6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:04.779Z",
      "Database": "dev",
      "Duration": 44222407,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106",
      "RedshiftPid": 1073782907,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:04.865Z",
          "Duration": 44222407,
          "HasResultSet": false,
          "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:05.298Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:04.868Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "e52506ea-0ad7-4a8d-9e77-aa10d18ce106:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage1 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|C)'\n)\n, __stage2 AS (\n  SELECT \n     b_0.\"state\" as \"state\",\n     b_0.\"airport_count\" as \"airport_count\"\n  FROM __stage0 as base\n   LEFT JOIN __stage1 AS b_0\n    ON 1=1\n)\n, __stage3 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT base.\"__distinct_key\") as \"ac_count\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"ac_sum\",\n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(am_states_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(am_states_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(am_states_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"am_sum\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"am_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage2 as x) as base\n FULL JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage3 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:05.298Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:05.365Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:425:10)

  ● leafy count - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "aa59bcca-65e0-4013-a365-a8df659d4a1f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:06.143Z",
      "Database": "dev",
      "Duration": 44067354,
      "Error": "Query #2 failed with ERROR: function gen_random_uuid() does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c",
      "RedshiftPid": 1073864807,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:06.240Z",
          "Duration": 44067354,
          "HasResultSet": false,
          "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:06.644Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:06.244Z",
          "Duration": -1,
          "Error": "ERROR: function gen_random_uuid() does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage0 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nWHERE base.\"state\"='CA'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:06.644Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:06.710Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         base."aircraft_count" as "aircraft_count",
         base."airport_count" as "airport_count",
         base."births" as "births",
         base."popular_name" as "popular_name",
         base."state" as "state"
      FROM "malloytest"."state_facts" as base
      WHERE base."state" ~ '^(A|M)'
    )
    SELECT 
       COUNT(DISTINCT am_states_0."__distinct_key") as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage0 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    WHERE base."state"='CA'

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "aa59bcca-65e0-4013-a365-a8df659d4a1f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:06.143Z",
      "Database": "dev",
      "Duration": 44067354,
      "Error": "Query #2 failed with ERROR: function gen_random_uuid() does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c",
      "RedshiftPid": 1073864807,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:06.240Z",
          "Duration": 44067354,
          "HasResultSet": false,
          "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:06.644Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:06.244Z",
          "Duration": -1,
          "Error": "ERROR: function gen_random_uuid() does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "b4aa95f7-a90c-4567-8d0b-53bbe0ab0b0c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"aircraft_count\" as \"aircraft_count\",\n     base.\"airport_count\" as \"airport_count\",\n     base.\"births\" as \"births\",\n     base.\"popular_name\" as \"popular_name\",\n     base.\"state\" as \"state\"\n  FROM \"malloytest\".\"state_facts\" as base\n  WHERE base.\"state\" ~ '^(A|M)'\n)\nSELECT \n   COUNT(DISTINCT am_states_0.\"__distinct_key\") as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage0 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nWHERE base.\"state\"='CA'\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:06.644Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:06.710Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:454:10)

  ● nest/unnest -basic - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9692b0c0-a262-4cc7-9210-ab83f7ecb022",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:07.507Z",
      "Database": "dev",
      "Duration": 44383454,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 21, column 24\n  Position: 541",
      "HasResultSet": false,
      "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088",
      "RedshiftPid": 1073832038,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:07.603Z",
          "Duration": 44383454,
          "HasResultSet": false,
          "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:08.028Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:07.607Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 21, column 24\n  Position: 541",
          "HasResultSet": false,
          "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"d__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"d__1\"::DOUBLE PRECISION as \"d\"\n      ) as __x)  ORDER BY  \"d__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"p\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   base.\"state\" as \"state\",\n   base.\"c\" as \"c\",\n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as \"d\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"p\") as p_0 ON true\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:08.028Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:08.093Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "d__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "d__1"::DOUBLE PRECISION as "d"
          ) as __x)  ORDER BY  "d__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "p"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       base."state" as "state",
       base."c" as "c",
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as "d"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."p") as p_0 ON true
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9692b0c0-a262-4cc7-9210-ab83f7ecb022",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:07.507Z",
      "Database": "dev",
      "Duration": 44383454,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 21, column 24\n  Position: 541",
      "HasResultSet": false,
      "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088",
      "RedshiftPid": 1073832038,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:07.603Z",
          "Duration": 44383454,
          "HasResultSet": false,
          "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:08.028Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:07.607Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 21, column 24\n  Position: 541",
          "HasResultSet": false,
          "Id": "5bd7b72b-14c3-476d-988e-37b256a3f088:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"d__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"d__1\"::DOUBLE PRECISION as \"d\"\n      ) as __x)  ORDER BY  \"d__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"p\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   base.\"state\" as \"state\",\n   base.\"c\" as \"c\",\n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as \"d\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"p\") as p_0 ON true\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:08.028Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:08.093Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:476:10)

  ● leafy nested count - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "92e4595b-3a22-4614-98e3-ac457ffb48cc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:10.331Z",
      "Database": "dev",
      "Duration": 44270034,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
      "HasResultSet": false,
      "Id": "f32b951c-d768-4491-b875-dec78cb1d587",
      "RedshiftPid": 1073741949,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:10.460Z",
          "Duration": 44270034,
          "HasResultSet": false,
          "Id": "f32b951c-d768-4491-b875-dec78cb1d587:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:10.877Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:10.464Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
          "HasResultSet": false,
          "Id": "f32b951c-d768-4491-b875-dec78cb1d587:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" ~ '^(A|M)'\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    \"popular_name__0\" as \"popular_name\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"popular_name__1\" as \"popular_name\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"nested_state\"\n  FROM __stage0\n  GROUP BY 1,2\n)\nSELECT \n   base.\"state\" as \"state\",\n   am_states_0.\"state\" as \"am_state\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\" || 'x' || (nested_state_0->>'__row_id')) as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage1 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0.\"nested_state\") __xx ))) as nested_state_0 ON true\nWHERE base.\"state\"='CA'\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:10.877Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:10.942Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" ~ '^(A|M)'
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        "popular_name__0" as "popular_name",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "popular_name__1" as "popular_name"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "nested_state"
      FROM __stage0
      GROUP BY 1,2
    )
    SELECT 
       base."state" as "state",
       am_states_0."state" as "am_state",
       COUNT(DISTINCT am_states_0."__distinct_key" || 'x' || (nested_state_0->>'__row_id')) as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM __stage1 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0."nested_state") __xx ))) as nested_state_0 ON true
    WHERE base."state"='CA'
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "92e4595b-3a22-4614-98e3-ac457ffb48cc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:10.331Z",
      "Database": "dev",
      "Duration": 44270034,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
      "HasResultSet": false,
      "Id": "f32b951c-d768-4491-b875-dec78cb1d587",
      "RedshiftPid": 1073741949,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:10.460Z",
          "Duration": 44270034,
          "HasResultSet": false,
          "Id": "f32b951c-d768-4491-b875-dec78cb1d587:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:10.877Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:10.464Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
          "HasResultSet": false,
          "Id": "f32b951c-d768-4491-b875-dec78cb1d587:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" ~ '^(A|M)'\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    \"popular_name__0\" as \"popular_name\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"popular_name__1\" as \"popular_name\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"nested_state\"\n  FROM __stage0\n  GROUP BY 1,2\n)\nSELECT \n   base.\"state\" as \"state\",\n   am_states_0.\"state\" as \"am_state\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\" || 'x' || (nested_state_0->>'__row_id')) as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM __stage1 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0.\"nested_state\") __xx ))) as nested_state_0 ON true\nWHERE base.\"state\"='CA'\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:10.877Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:10.942Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:523:10)

  ● basic index - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "963c703c-926c-4d6e-b8e2-8de9be1ce1e1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:13.132Z",
      "Database": "dev",
      "Duration": 44904915,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:13.230Z",
          "Duration": 44904915,
          "HasResultSet": false,
          "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:13.669Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:13.233Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n      WHEN 1 THEN 'sql native'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'sql native'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'number'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'number'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'number'\n      WHEN 15 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 2 THEN base.\"cancelled\"\n      WHEN 3 THEN base.\"carrier\"\n      WHEN 6 THEN base.\"destination\"\n      WHEN 8 THEN base.\"diverted\"\n      WHEN 9 THEN base.\"flight_num\"\n      WHEN 12 THEN base.\"origin\"\n      WHEN 13 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base.\"arr_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"arr_delay\") as VARCHAR)\n      WHEN 4 THEN MIN(CAST(base.\"dep_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"dep_delay\") as VARCHAR)\n      WHEN 7 THEN MIN(CAST(base.\"distance\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"distance\") as VARCHAR)\n      WHEN 10 THEN MIN(CAST(base.\"flight_time\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"flight_time\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"id2\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id2\") as VARCHAR)\n      WHEN 14 THEN MIN(CAST(base.\"taxi_in\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_in\") as VARCHAR)\n      WHEN 15 THEN MIN(CAST(base.\"taxi_out\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_out\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"flights\" as base\n  CROSS JOIN GENERATE_SERIES(0,16,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"fieldPath\" as \"fieldPath\",\n   base.\"fieldType\" as \"fieldType\",\n   base.\"fieldValue\" as \"fieldValue\",\n   base.\"weight\" as \"weight\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='carrier'\nORDER BY 4 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:13.669Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:13.735Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
          WHEN 1 THEN 'sql native'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'sql native'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'number'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'number'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'number'
          WHEN 15 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 2 THEN base."cancelled"
          WHEN 3 THEN base."carrier"
          WHEN 6 THEN base."destination"
          WHEN 8 THEN base."diverted"
          WHEN 9 THEN base."flight_num"
          WHEN 12 THEN base."origin"
          WHEN 13 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base."arr_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."arr_delay") as VARCHAR)
          WHEN 4 THEN MIN(CAST(base."dep_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."dep_delay") as VARCHAR)
          WHEN 7 THEN MIN(CAST(base."distance" as VARCHAR)) || ' to ' || CAST(MAX(base."distance") as VARCHAR)
          WHEN 10 THEN MIN(CAST(base."flight_time" as VARCHAR)) || ' to ' || CAST(MAX(base."flight_time") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."id2" as VARCHAR)) || ' to ' || CAST(MAX(base."id2") as VARCHAR)
          WHEN 14 THEN MIN(CAST(base."taxi_in" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_in") as VARCHAR)
          WHEN 15 THEN MIN(CAST(base."taxi_out" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_out") as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."flights" as base
      CROSS JOIN GENERATE_SERIES(0,16,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."fieldPath" as "fieldPath",
       base."fieldType" as "fieldType",
       base."fieldValue" as "fieldValue",
       base."weight" as "weight"
    FROM __stage1 as base
    WHERE base."fieldName"='carrier'
    ORDER BY 4 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "963c703c-926c-4d6e-b8e2-8de9be1ce1e1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:13.132Z",
      "Database": "dev",
      "Duration": 44904915,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:13.230Z",
          "Duration": 44904915,
          "HasResultSet": false,
          "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:13.669Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:13.233Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "567b632d-cc48-48f1-9c89-8e8a17d5f7b6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n      WHEN 1 THEN 'sql native'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'sql native'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'number'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'number'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'number'\n      WHEN 15 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 2 THEN base.\"cancelled\"\n      WHEN 3 THEN base.\"carrier\"\n      WHEN 6 THEN base.\"destination\"\n      WHEN 8 THEN base.\"diverted\"\n      WHEN 9 THEN base.\"flight_num\"\n      WHEN 12 THEN base.\"origin\"\n      WHEN 13 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base.\"arr_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"arr_delay\") as VARCHAR)\n      WHEN 4 THEN MIN(CAST(base.\"dep_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"dep_delay\") as VARCHAR)\n      WHEN 7 THEN MIN(CAST(base.\"distance\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"distance\") as VARCHAR)\n      WHEN 10 THEN MIN(CAST(base.\"flight_time\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"flight_time\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"id2\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id2\") as VARCHAR)\n      WHEN 14 THEN MIN(CAST(base.\"taxi_in\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_in\") as VARCHAR)\n      WHEN 15 THEN MIN(CAST(base.\"taxi_out\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_out\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"flights\" as base\n  CROSS JOIN GENERATE_SERIES(0,16,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"fieldPath\" as \"fieldPath\",\n   base.\"fieldType\" as \"fieldType\",\n   base.\"fieldValue\" as \"fieldValue\",\n   base.\"weight\" as \"weight\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='carrier'\nORDER BY 4 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:13.669Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:13.735Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:543:10)

  ● number as null 2 - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5276ae18-ae77-408b-9142-1c3206e50954",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:14.522Z",
      "Database": "dev",
      "Duration": 44106109,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f",
      "RedshiftPid": 1073864801,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:14.618Z",
          "Duration": 44106109,
          "HasResultSet": false,
          "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:15.042Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:14.621Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:15.042Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:15.107Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5276ae18-ae77-408b-9142-1c3206e50954",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:14.522Z",
      "Database": "dev",
      "Duration": 44106109,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f",
      "RedshiftPid": 1073864801,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:14.618Z",
          "Duration": 44106109,
          "HasResultSet": false,
          "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:15.042Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:14.621Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "44eab6d0-322b-414f-bfe1-f7d400aa930f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:15.042Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:15.107Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:562:10)

  ● avg ignore null- redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e756c5c8-2caa-4a8e-85a2-b71cb148cd04",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:20.245Z",
      "Database": "dev",
      "Duration": 51977403,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5",
      "RedshiftPid": 1073995902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:20.333Z",
          "Duration": 51977403,
          "HasResultSet": false,
          "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:20.777Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:20.336Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5:2",
          "QueryString": "SELECT \n   (CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"a\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base.\"a\" IS NOT NULL THEN base.\"__distinct_key\" END),0) as \"avg_a\",\n   (CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(x1_0.\"a\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(x1_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(x1_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN x1_0.\"a\" IS NOT NULL THEN x1_0.\"__distinct_key\" END),0) as \"avg_b\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM (\n        SELECT 2 as \"a\"\n        UNION ALL SELECT 4\n        UNION ALL SELECT null\n      ) as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM (\n        SELECT 2 as \"a\"\n        UNION ALL SELECT 4\n        UNION ALL SELECT null\n      ) as x) AS x1_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:20.777Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:20.853Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(base."a",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base."a" IS NOT NULL THEN base."__distinct_key" END),0) as "avg_a",
       (CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(x1_0."a",0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(x1_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(x1_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN x1_0."a" IS NOT NULL THEN x1_0."__distinct_key" END),0) as "avg_b"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM (
            SELECT 2 as "a"
            UNION ALL SELECT 4
            UNION ALL SELECT null
          ) as x) as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM (
            SELECT 2 as "a"
            UNION ALL SELECT 4
            UNION ALL SELECT null
          ) as x) AS x1_0
      ON 1=1

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e756c5c8-2caa-4a8e-85a2-b71cb148cd04",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:20.245Z",
      "Database": "dev",
      "Duration": 51977403,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5",
      "RedshiftPid": 1073995902,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:20.333Z",
          "Duration": 51977403,
          "HasResultSet": false,
          "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:20.777Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:20.336Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "d923ee28-cbcd-4e2b-b712-47c0d60512d5:2",
          "QueryString": "SELECT \n   (CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(base.\"a\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN base.\"a\" IS NOT NULL THEN base.\"__distinct_key\" END),0) as \"avg_a\",\n   (CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(x1_0.\"a\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(x1_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(x1_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(x1_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION))/NULLIF(COUNT(DISTINCT CASE WHEN x1_0.\"a\" IS NOT NULL THEN x1_0.\"__distinct_key\" END),0) as \"avg_b\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM (\n        SELECT 2 as \"a\"\n        UNION ALL SELECT 4\n        UNION ALL SELECT null\n      ) as x) as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM (\n        SELECT 2 as \"a\"\n        UNION ALL SELECT 4\n        UNION ALL SELECT null\n      ) as x) AS x1_0\n  ON 1=1\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:20.777Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:20.853Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:589:11)

  ● ungrouped top level - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "66faac9c-b8db-4630-9fd9-1faddbdb2bb6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:23.104Z",
      "Database": "dev",
      "Duration": 44103400,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 18, column 36\n  Position: 507",
      "HasResultSet": false,
      "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6",
      "RedshiftPid": 1073971327,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:23.192Z",
          "Duration": 44103400,
          "HasResultSet": false,
          "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:23.619Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:23.195Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 18, column 36\n  Position: 507",
          "HasResultSet": false,
          "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"births_per_100k__1\") FILTER (WHERE group_set=1 AND \"births_per_100k__1\" IS NOT NULL))[1] as \"births_per_100k\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:23.619Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:23.684Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("births_per_100k__1") FILTER (WHERE group_set=1 AND "births_per_100k__1" IS NOT NULL))[1] as "births_per_100k"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "66faac9c-b8db-4630-9fd9-1faddbdb2bb6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:23.104Z",
      "Database": "dev",
      "Duration": 44103400,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 18, column 36\n  Position: 507",
      "HasResultSet": false,
      "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6",
      "RedshiftPid": 1073971327,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:23.192Z",
          "Duration": 44103400,
          "HasResultSet": false,
          "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:23.619Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:23.195Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 18, column 36\n  Position: 507",
          "HasResultSet": false,
          "Id": "62e902be-5393-4908-a2c4-8fdfc7467dc6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"births_per_100k__1\") FILTER (WHERE group_set=1 AND \"births_per_100k__1\" IS NOT NULL))[1] as \"births_per_100k\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:23.619Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:23.684Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:615:11)

  ● ungrouped top level with nested  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bdbcc91a-0496-4fa7-8762-2cba0faab3a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:24.452Z",
      "Database": "dev",
      "Duration": 44957502,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 24, column 36\n  Position: 705",
      "HasResultSet": false,
      "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a",
      "RedshiftPid": 1073946734,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:24.558Z",
          "Duration": 44957502,
          "HasResultSet": false,
          "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:24.966Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:24.562Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 24, column 36\n  Position: 705",
          "HasResultSet": false,
          "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"births_per_100k__1\") FILTER (WHERE group_set=1 AND \"births_per_100k__1\" IS NOT NULL))[1] as \"births_per_100k\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 1000\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:24.966Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:25.032Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1",
        CASE WHEN group_set=2 THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("births_per_100k__1") FILTER (WHERE group_set=1 AND "births_per_100k__1" IS NOT NULL))[1] as "births_per_100k",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "total_births__2"::DOUBLE PRECISION as "total_births"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_name"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 1000

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bdbcc91a-0496-4fa7-8762-2cba0faab3a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:24.452Z",
      "Database": "dev",
      "Duration": 44957502,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 24, column 36\n  Position: 705",
      "HasResultSet": false,
      "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a",
      "RedshiftPid": 1073946734,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:24.558Z",
          "Duration": 44957502,
          "HasResultSet": false,
          "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:24.966Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:24.562Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"births_per_100k__1\") FILTER\", at line 24, column 36\n  Position: 705",
          "HasResultSet": false,
          "Id": "44446aeb-0c0f-4865-a380-41bd03fa848a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"births_per_100k__1\") FILTER (WHERE group_set=1 AND \"births_per_100k__1\" IS NOT NULL))[1] as \"births_per_100k\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 1000\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:24.966Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:25.032Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:633:11)

  ● ungrouped - eliminate rows  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bea86484-ed36-4410-a014-3788364f45d7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:25.838Z",
      "Database": "dev",
      "Duration": 44388411,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"m__1\") FILTER\", at line 17, column 22\n  Position: 417",
      "HasResultSet": false,
      "Id": "a120a671-b428-4b08-aae4-6422ada5572e",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:25.937Z",
          "Duration": 44388411,
          "HasResultSet": false,
          "Id": "a120a671-b428-4b08-aae4-6422ada5572e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:26.376Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:25.940Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"m__1\") FILTER\", at line 17, column 22\n  Position: 417",
          "HasResultSet": false,
          "Id": "a120a671-b428-4b08-aae4-6422ada5572e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX(CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END) OVER () as \"m__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" IN ('CA','NY')\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"m__1\") FILTER (WHERE group_set=1 AND \"m__1\" IS NOT NULL))[1] as \"m\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:26.376Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:26.441Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX(CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END) OVER () as "m__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" IN ('CA','NY')
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("m__1") FILTER (WHERE group_set=1 AND "m__1" IS NOT NULL))[1] as "m"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bea86484-ed36-4410-a014-3788364f45d7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:25.838Z",
      "Database": "dev",
      "Duration": 44388411,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"m__1\") FILTER\", at line 17, column 22\n  Position: 417",
      "HasResultSet": false,
      "Id": "a120a671-b428-4b08-aae4-6422ada5572e",
      "RedshiftPid": 1073782882,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:25.937Z",
          "Duration": 44388411,
          "HasResultSet": false,
          "Id": "a120a671-b428-4b08-aae4-6422ada5572e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:26.376Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:25.940Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"m__1\") FILTER\", at line 17, column 22\n  Position: 417",
          "HasResultSet": false,
          "Id": "a120a671-b428-4b08-aae4-6422ada5572e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX(CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END) OVER () as \"m__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" IN ('CA','NY')\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"m__1\") FILTER (WHERE group_set=1 AND \"m__1\" IS NOT NULL))[1] as \"m\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:26.376Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:26.441Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:646:11)

  ● ungrouped nested with no grouping above - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "29dc459c-46ab-4019-ba3b-6f3df9dbd22c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:27.204Z",
      "Database": "dev",
      "Duration": 53577638,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 20, column 33\n  Position: 593",
      "HasResultSet": false,
      "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c",
      "RedshiftPid": 1073815653,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:27.277Z",
          "Duration": 53577638,
          "HasResultSet": false,
          "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:27.717Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:27.280Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 20, column 33\n  Position: 593",
          "HasResultSet": false,
          "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"total_births__0\") FILTER (WHERE group_set=0 AND \"total_births__0\" IS NOT NULL))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:27.717Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:27.782Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("total_births__0") FILTER (WHERE group_set=0 AND "total_births__0" IS NOT NULL))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_name"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "29dc459c-46ab-4019-ba3b-6f3df9dbd22c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:27.204Z",
      "Database": "dev",
      "Duration": 53577638,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 20, column 33\n  Position: 593",
      "HasResultSet": false,
      "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c",
      "RedshiftPid": 1073815653,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:27.277Z",
          "Duration": 53577638,
          "HasResultSet": false,
          "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:27.717Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:27.280Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 20, column 33\n  Position: 593",
          "HasResultSet": false,
          "Id": "bf10df91-8c3d-45b0-b29a-d2c35839556c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"total_births__0\") FILTER (WHERE group_set=0 AND \"total_births__0\" IS NOT NULL))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:27.717Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:27.782Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:666:13)

  ● ungrouped - partial grouping - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "51eeedf3-fe8e-45c3-9172-61a64472e4a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:28.559Z",
      "Database": "dev",
      "Duration": 52458839,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 55, column 22\n  Position: 1628",
      "HasResultSet": false,
      "Id": "8926adde-616b-4119-ac5a-d82edbe779a3",
      "RedshiftPid": 1073750137,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:28.658Z",
          "Duration": 52458839,
          "HasResultSet": false,
          "Id": "8926adde-616b-4119-ac5a-d82edbe779a3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:29.111Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:28.661Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 55, column 22\n  Position: 1628",
          "HasResultSet": false,
          "Id": "8926adde-616b-4119-ac5a-d82edbe779a3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END as \"faa_region__1\",\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END as \"fac_type__5\",\n    CASE WHEN group_set=5 THEN\n      COUNT(1)\n      END as \"c__5\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all___5\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all_state_region__5\",\n    MAX((CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END) as \"all_of_this_type__5\",\n    MAX((CASE WHEN group_set=4 THEN\n      COUNT(1)\n      END)) OVER () as \"all_top__5\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,5,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"faa_region__1\" as \"faa_region\",\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"c__1\") FILTER (WHERE group_set=1 AND \"c__1\" IS NOT NULL))[1] as \"c\",\n  (ARRAY_AGG(\"all___1\") FILTER (WHERE group_set=1 AND \"all___1\" IS NOT NULL))[1] as \"all_\",\n  (ARRAY_AGG(\"airport_count__1\") FILTER (WHERE group_set=1 AND \"airport_count__1\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__5\" as \"fac_type\", \n    \"c__5\"::DOUBLE PRECISION as \"c\", \n    \"all___5\"::DOUBLE PRECISION as \"all_\", \n    \"all_state_region__5\"::DOUBLE PRECISION as \"all_state_region\", \n    \"all_of_this_type__5\"::DOUBLE PRECISION as \"all_of_this_type\", \n    \"all_top__5\"::DOUBLE PRECISION as \"all_top\"\n    ) as __x)  ORDER BY  \"c__5\" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2,3,4)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:29.111Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:29.176Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END as "faa_region__1",
        CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END as "fac_type__5",
        CASE WHEN group_set=5 THEN
          COUNT(1)
          END as "c__5",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all___5",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all_state_region__5",
        MAX((CASE WHEN group_set=3 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END) as "all_of_this_type__5",
        MAX((CASE WHEN group_set=4 THEN
          COUNT(1)
          END)) OVER () as "all_top__5"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,5,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,3,7
    )
    SELECT
      "faa_region__1" as "faa_region",
      "state__1" as "state",
      (ARRAY_AGG("c__1") FILTER (WHERE group_set=1 AND "c__1" IS NOT NULL))[1] as "c",
      (ARRAY_AGG("all___1") FILTER (WHERE group_set=1 AND "all___1" IS NOT NULL))[1] as "all_",
      (ARRAY_AGG("airport_count__1") FILTER (WHERE group_set=1 AND "airport_count__1" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__5" as "fac_type", 
        "c__5"::DOUBLE PRECISION as "c", 
        "all___5"::DOUBLE PRECISION as "all_", 
        "all_state_region__5"::DOUBLE PRECISION as "all_state_region", 
        "all_of_this_type__5"::DOUBLE PRECISION as "all_of_this_type", 
        "all_top__5"::DOUBLE PRECISION as "all_top"
        ) as __x)  ORDER BY  "c__5" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2,3,4)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "51eeedf3-fe8e-45c3-9172-61a64472e4a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:28.559Z",
      "Database": "dev",
      "Duration": 52458839,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 55, column 22\n  Position: 1628",
      "HasResultSet": false,
      "Id": "8926adde-616b-4119-ac5a-d82edbe779a3",
      "RedshiftPid": 1073750137,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:28.658Z",
          "Duration": 52458839,
          "HasResultSet": false,
          "Id": "8926adde-616b-4119-ac5a-d82edbe779a3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:29.111Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:28.661Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 55, column 22\n  Position: 1628",
          "HasResultSet": false,
          "Id": "8926adde-616b-4119-ac5a-d82edbe779a3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END as \"faa_region__1\",\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END as \"fac_type__5\",\n    CASE WHEN group_set=5 THEN\n      COUNT(1)\n      END as \"c__5\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all___5\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all_state_region__5\",\n    MAX((CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END) as \"all_of_this_type__5\",\n    MAX((CASE WHEN group_set=4 THEN\n      COUNT(1)\n      END)) OVER () as \"all_top__5\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,5,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"faa_region__1\" as \"faa_region\",\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"c__1\") FILTER (WHERE group_set=1 AND \"c__1\" IS NOT NULL))[1] as \"c\",\n  (ARRAY_AGG(\"all___1\") FILTER (WHERE group_set=1 AND \"all___1\" IS NOT NULL))[1] as \"all_\",\n  (ARRAY_AGG(\"airport_count__1\") FILTER (WHERE group_set=1 AND \"airport_count__1\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__5\" as \"fac_type\", \n    \"c__5\"::DOUBLE PRECISION as \"c\", \n    \"all___5\"::DOUBLE PRECISION as \"all_\", \n    \"all_state_region__5\"::DOUBLE PRECISION as \"all_state_region\", \n    \"all_of_this_type__5\"::DOUBLE PRECISION as \"all_of_this_type\", \n    \"all_top__5\"::DOUBLE PRECISION as \"all_top\"\n    ) as __x)  ORDER BY  \"c__5\" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2,3,4)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:29.111Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:29.176Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:695:10)

  ● ungrouped - all nested - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "73dea6f7-1b37-4160-8928-4b4c2e0b6945",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:29.945Z",
      "Database": "dev",
      "Duration": 52121041,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 44, column 22\n  Position: 1226",
      "HasResultSet": false,
      "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1",
      "RedshiftPid": 1073766514,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:30.033Z",
          "Duration": 52121041,
          "HasResultSet": false,
          "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:30.473Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:30.036Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 44, column 22\n  Position: 1226",
          "HasResultSet": false,
          "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set=3 THEN\n      base.\"fac_type\"\n      END as \"fac_type__3\",\n    CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END as \"major__3\",\n    CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END as \"c__3\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all___3\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END, CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all_major__3\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,6,7\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"c__1\") FILTER (WHERE group_set=1 AND \"c__1\" IS NOT NULL))[1] as \"c\",\n  (ARRAY_AGG(\"all___1\") FILTER (WHERE group_set=1 AND \"all___1\" IS NOT NULL))[1] as \"all_\",\n  (ARRAY_AGG(\"airport_count__1\") FILTER (WHERE group_set=1 AND \"airport_count__1\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__3\" as \"fac_type\", \n    \"major__3\" as \"major\", \n    \"c__3\"::DOUBLE PRECISION as \"c\", \n    \"all___3\"::DOUBLE PRECISION as \"all_\", \n    \"all_major__3\"::DOUBLE PRECISION as \"all_major\"\n    ) as __x)  ORDER BY  \"c__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:30.473Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:30.537Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set=3 THEN
          base."fac_type"
          END as "fac_type__3",
        CASE WHEN group_set IN (3,2) THEN
          base."major"
          END as "major__3",
        CASE WHEN group_set=3 THEN
          COUNT(1)
          END as "c__3",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all___3",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN
          base."major"
          END, CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all_major__3"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,6,7
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG("c__1") FILTER (WHERE group_set=1 AND "c__1" IS NOT NULL))[1] as "c",
      (ARRAY_AGG("all___1") FILTER (WHERE group_set=1 AND "all___1" IS NOT NULL))[1] as "all_",
      (ARRAY_AGG("airport_count__1") FILTER (WHERE group_set=1 AND "airport_count__1" IS NOT NULL))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__3" as "fac_type", 
        "major__3" as "major", 
        "c__3"::DOUBLE PRECISION as "c", 
        "all___3"::DOUBLE PRECISION as "all_", 
        "all_major__3"::DOUBLE PRECISION as "all_major"
        ) as __x)  ORDER BY  "c__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "73dea6f7-1b37-4160-8928-4b4c2e0b6945",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:29.945Z",
      "Database": "dev",
      "Duration": 52121041,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 44, column 22\n  Position: 1226",
      "HasResultSet": false,
      "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1",
      "RedshiftPid": 1073766514,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:30.033Z",
          "Duration": 52121041,
          "HasResultSet": false,
          "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:30.473Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:30.036Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__1\") FILTER\", at line 44, column 22\n  Position: 1226",
          "HasResultSet": false,
          "Id": "24e8becf-5b8f-4f04-a963-29d2a6733ec1:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set=3 THEN\n      base.\"fac_type\"\n      END as \"fac_type__3\",\n    CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END as \"major__3\",\n    CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END as \"c__3\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all___3\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END, CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all_major__3\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,6,7\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(\"c__1\") FILTER (WHERE group_set=1 AND \"c__1\" IS NOT NULL))[1] as \"c\",\n  (ARRAY_AGG(\"all___1\") FILTER (WHERE group_set=1 AND \"all___1\" IS NOT NULL))[1] as \"all_\",\n  (ARRAY_AGG(\"airport_count__1\") FILTER (WHERE group_set=1 AND \"airport_count__1\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__3\" as \"fac_type\", \n    \"major__3\" as \"major\", \n    \"c__3\"::DOUBLE PRECISION as \"c\", \n    \"all___3\"::DOUBLE PRECISION as \"all_\", \n    \"all_major__3\"::DOUBLE PRECISION as \"all_major\"\n    ) as __x)  ORDER BY  \"c__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:30.473Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:30.537Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:726:10)

  ● ungrouped nested  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "798d1a27-266b-482a-a4cb-8cb55df3f39e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:31.287Z",
      "Database": "dev",
      "Duration": 43987937,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 740",
      "HasResultSet": false,
      "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e",
      "RedshiftPid": 1073930358,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:31.367Z",
          "Duration": 43987937,
          "HasResultSet": false,
          "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:31.796Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:31.370Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 740",
          "HasResultSet": false,
          "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY base.\"popular_name\"))*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:31.796Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:31.862Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY base."popular_name"))*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__0" as "popular_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "798d1a27-266b-482a-a4cb-8cb55df3f39e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:31.287Z",
      "Database": "dev",
      "Duration": 43987937,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 740",
      "HasResultSet": false,
      "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e",
      "RedshiftPid": 1073930358,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:31.367Z",
          "Duration": 43987937,
          "HasResultSet": false,
          "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:31.796Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:31.370Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 740",
          "HasResultSet": false,
          "Id": "ec7b0c1e-3b46-43d9-a8d5-42276ca9f65e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY base.\"popular_name\"))*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:31.796Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:31.862Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:747:10)

  ● ungrouped nested expression  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "78817f5e-dcfd-402e-849d-22227c20bb8b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:32.633Z",
      "Database": "dev",
      "Duration": 44912885,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
      "HasResultSet": false,
      "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3",
      "RedshiftPid": 1073840233,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:32.739Z",
          "Duration": 44912885,
          "HasResultSet": false,
          "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:33.206Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:32.743Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
          "HasResultSet": false,
          "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    UPPER(base.\"popular_name\") as \"upper_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY UPPER(base.\"popular_name\")))*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"upper_name__0\" as \"upper_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:33.206Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:33.272Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        UPPER(base."popular_name") as "upper_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY UPPER(base."popular_name")))*100000) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "upper_name__0" as "upper_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "78817f5e-dcfd-402e-849d-22227c20bb8b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:32.633Z",
      "Database": "dev",
      "Duration": 44912885,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
      "HasResultSet": false,
      "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3",
      "RedshiftPid": 1073840233,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:32.739Z",
          "Duration": 44912885,
          "HasResultSet": false,
          "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:33.206Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:32.743Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
          "HasResultSet": false,
          "Id": "df96ef2d-83f8-4b3a-8ae5-5e850b19ebc3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    UPPER(base.\"popular_name\") as \"upper_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY UPPER(base.\"popular_name\")))*100000) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"upper_name__0\" as \"upper_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:33.206Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:33.272Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:765:10)

  ● ungrouped nested group by float  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "563a801b-348d-4b0a-91b1-f9ef68430b5d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:34.003Z",
      "Database": "dev",
      "Duration": 44090952,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 608",
      "HasResultSet": false,
      "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a",
      "RedshiftPid": 1073938532,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:34.085Z",
          "Duration": 44090952,
          "HasResultSet": false,
          "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:34.502Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:34.089Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 608",
          "HasResultSet": false,
          "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300.0) as \"f__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300.0)) as \"ug__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"f__0\" as \"f\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"ug__1\"::DOUBLE PRECISION as \"ug\"\n    ) as __x)  ORDER BY  \"ug__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:34.502Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:34.569Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300.0) as "f__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300.0)) as "ug__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "f__0" as "f",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "ug__1"::DOUBLE PRECISION as "ug"
        ) as __x)  ORDER BY  "ug__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "563a801b-348d-4b0a-91b1-f9ef68430b5d",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:34.003Z",
      "Database": "dev",
      "Duration": 44090952,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 608",
      "HasResultSet": false,
      "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a",
      "RedshiftPid": 1073938532,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:34.085Z",
          "Duration": 44090952,
          "HasResultSet": false,
          "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:34.502Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:34.089Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 608",
          "HasResultSet": false,
          "Id": "fbdd375d-cdd6-4dcc-815c-d57a3949e48a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300.0) as \"f__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300.0)) as \"ug__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"f__0\" as \"f\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"ug__1\"::DOUBLE PRECISION as \"ug\"\n    ) as __x)  ORDER BY  \"ug__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:34.502Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:34.569Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:783:10)

  ● all with parameters - basic  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0909e82b-b9d1-4b21-ad14-36dd8b4e3634",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:42.917Z",
      "Database": "dev",
      "Duration": 43630838,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__2\") FILTER\", at line 28, column 33\n  Position: 833",
      "HasResultSet": false,
      "Id": "9831caa6-8945-430d-a163-2c794a283806",
      "RedshiftPid": 1073881212,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:43.044Z",
          "Duration": 43630838,
          "HasResultSet": false,
          "Id": "9831caa6-8945-430d-a163-2c794a283806:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:43.515Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:43.047Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__2\") FILTER\", at line 28, column 33\n  Position: 833",
          "HasResultSet": false,
          "Id": "9831caa6-8945-430d-a163-2c794a283806:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER () as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__2\" as \"popular_name\",\n  \"state__2\" as \"state\",\n  (ARRAY_AGG(\"total_births__2\") FILTER (WHERE group_set=2 AND \"total_births__2\" IS NOT NULL))[1] as \"total_births\",\n  (ARRAY_AGG(\"all_births__2\") FILTER (WHERE group_set=2 AND \"all_births__2\" IS NOT NULL))[1] as \"all_births\",\n  (ARRAY_AGG(\"all_name__2\") FILTER (WHERE group_set=2 AND \"all_name__2\" IS NOT NULL))[1] as \"all_name\"\nFROM __stage0\nWHERE group_set NOT IN (0,1)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:43.515Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:43.580Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER () as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__2" as "popular_name",
      "state__2" as "state",
      (ARRAY_AGG("total_births__2") FILTER (WHERE group_set=2 AND "total_births__2" IS NOT NULL))[1] as "total_births",
      (ARRAY_AGG("all_births__2") FILTER (WHERE group_set=2 AND "all_births__2" IS NOT NULL))[1] as "all_births",
      (ARRAY_AGG("all_name__2") FILTER (WHERE group_set=2 AND "all_name__2" IS NOT NULL))[1] as "all_name"
    FROM __stage0
    WHERE group_set NOT IN (0,1)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0909e82b-b9d1-4b21-ad14-36dd8b4e3634",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:42.917Z",
      "Database": "dev",
      "Duration": 43630838,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__2\") FILTER\", at line 28, column 33\n  Position: 833",
      "HasResultSet": false,
      "Id": "9831caa6-8945-430d-a163-2c794a283806",
      "RedshiftPid": 1073881212,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:43.044Z",
          "Duration": 43630838,
          "HasResultSet": false,
          "Id": "9831caa6-8945-430d-a163-2c794a283806:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:43.515Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:43.047Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__2\") FILTER\", at line 28, column 33\n  Position: 833",
          "HasResultSet": false,
          "Id": "9831caa6-8945-430d-a163-2c794a283806:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER () as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__2\" as \"popular_name\",\n  \"state__2\" as \"state\",\n  (ARRAY_AGG(\"total_births__2\") FILTER (WHERE group_set=2 AND \"total_births__2\" IS NOT NULL))[1] as \"total_births\",\n  (ARRAY_AGG(\"all_births__2\") FILTER (WHERE group_set=2 AND \"all_births__2\" IS NOT NULL))[1] as \"all_births\",\n  (ARRAY_AGG(\"all_name__2\") FILTER (WHERE group_set=2 AND \"all_name__2\" IS NOT NULL))[1] as \"all_name\"\nFROM __stage0\nWHERE group_set NOT IN (0,1)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:43.515Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:43.580Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:845:8)

  ● all with parameters - nest  - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d04bddd7-2226-4539-9261-47776b881e6f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:44.334Z",
      "Database": "dev",
      "Duration": 44627545,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 31, column 33\n  Position: 1030",
      "HasResultSet": false,
      "Id": "6a427d82-faa8-4416-a689-fb0d5643affb",
      "RedshiftPid": 1073823853,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:44.426Z",
          "Duration": 44627545,
          "HasResultSet": false,
          "Id": "6a427d82-faa8-4416-a689-fb0d5643affb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:44.848Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:44.429Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 31, column 33\n  Position: 1030",
          "HasResultSet": false,
          "Id": "6a427d82-faa8-4416-a689-fb0d5643affb:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300) as \"abc__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300)) as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END, FLOOR(base.\"airport_count\"*1.0/300)) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,5\n)\nSELECT\n  \"abc__0\" as \"abc\",\n  (ARRAY_AGG(\"total_births__0\") FILTER (WHERE group_set=0 AND \"total_births__0\" IS NOT NULL))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"state__2\" as \"state\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\", \n    \"all_births__2\"::DOUBLE PRECISION as \"all_births\", \n    \"all_name__2\"::DOUBLE PRECISION as \"all_name\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_stuff\"\nFROM __stage0\nWHERE group_set NOT IN (1)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:44.848Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:44.913Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300) as "abc__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300)) as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END, FLOOR(base."airport_count"*1.0/300)) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,5
    )
    SELECT
      "abc__0" as "abc",
      (ARRAY_AGG("total_births__0") FILTER (WHERE group_set=0 AND "total_births__0" IS NOT NULL))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "state__2" as "state", 
        "total_births__2"::DOUBLE PRECISION as "total_births", 
        "all_births__2"::DOUBLE PRECISION as "all_births", 
        "all_name__2"::DOUBLE PRECISION as "all_name"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_stuff"
    FROM __stage0
    WHERE group_set NOT IN (1)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d04bddd7-2226-4539-9261-47776b881e6f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:44.334Z",
      "Database": "dev",
      "Duration": 44627545,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 31, column 33\n  Position: 1030",
      "HasResultSet": false,
      "Id": "6a427d82-faa8-4416-a689-fb0d5643affb",
      "RedshiftPid": 1073823853,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:44.426Z",
          "Duration": 44627545,
          "HasResultSet": false,
          "Id": "6a427d82-faa8-4416-a689-fb0d5643affb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:44.848Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:44.429Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"total_births__0\") FILTER\", at line 31, column 33\n  Position: 1030",
          "HasResultSet": false,
          "Id": "6a427d82-faa8-4416-a689-fb0d5643affb:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300) as \"abc__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300)) as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END, FLOOR(base.\"airport_count\"*1.0/300)) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,5\n)\nSELECT\n  \"abc__0\" as \"abc\",\n  (ARRAY_AGG(\"total_births__0\") FILTER (WHERE group_set=0 AND \"total_births__0\" IS NOT NULL))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"state__2\" as \"state\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\", \n    \"all_births__2\"::DOUBLE PRECISION as \"all_births\", \n    \"all_name__2\"::DOUBLE PRECISION as \"all_name\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_stuff\"\nFROM __stage0\nWHERE group_set NOT IN (1)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:44.848Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:44.913Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:869:10)

  ● single value to udf - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "48f00d39-bbe2-4a3b-92e3-e35b6a97a0f3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:45.740Z",
      "Database": "dev",
      "Duration": 43424745,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
      "HasResultSet": false,
      "Id": "b752bee8-0395-4634-9904-31f7820f465f",
      "RedshiftPid": 1073741937,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:45.851Z",
          "Duration": 43424745,
          "HasResultSet": false,
          "Id": "b752bee8-0395-4634-9904-31f7820f465f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:46.285Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:45.854Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
          "HasResultSet": false,
          "Id": "b752bee8-0395-4634-9904-31f7820f465f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"t__1\"::DOUBLE PRECISION as \"t\") as __x)) FILTER (WHERE group_set=1))[1])))) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:46.285Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:46.349Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "t__1"::DOUBLE PRECISION as "t") as __x)) FILTER (WHERE group_set=1))[1])))) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "48f00d39-bbe2-4a3b-92e3-e35b6a97a0f3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:45.740Z",
      "Database": "dev",
      "Duration": 43424745,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
      "HasResultSet": false,
      "Id": "b752bee8-0395-4634-9904-31f7820f465f",
      "RedshiftPid": 1073741937,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:45.851Z",
          "Duration": 43424745,
          "HasResultSet": false,
          "Id": "b752bee8-0395-4634-9904-31f7820f465f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:46.285Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:45.854Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
          "HasResultSet": false,
          "Id": "b752bee8-0395-4634-9904-31f7820f465f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"t__1\"::DOUBLE PRECISION as \"t\") as __x)) FILTER (WHERE group_set=1))[1])))) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:46.285Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:46.349Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:885:10)

  ● Multi value to udf - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6738b7bc-712c-47a4-9366-506ff53dbc95",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:47.132Z",
      "Database": "dev",
      "Duration": 43488804,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
      "HasResultSet": false,
      "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a",
      "RedshiftPid": 1073897586,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:47.221Z",
          "Duration": 43488804,
          "HasResultSet": false,
          "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:47.641Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:47.224Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
          "HasResultSet": false,
          "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    2 as \"two__0\",\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"two__0\" as \"two\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:47.641Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:47.705Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        2 as "two__0",
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "two__0" as "two",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6738b7bc-712c-47a4-9366-506ff53dbc95",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:47.132Z",
      "Database": "dev",
      "Duration": 43488804,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
      "HasResultSet": false,
      "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a",
      "RedshiftPid": 1073897586,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:47.221Z",
          "Duration": 43488804,
          "HasResultSet": false,
          "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:47.641Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:47.224Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
          "HasResultSet": false,
          "Id": "cee2efde-5377-4b06-89a5-de4516e1c17a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    2 as \"two__0\",\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"two__0\" as \"two\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:47.641Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:47.705Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:904:10)

  ● Multi value to udf group by - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "eefe8283-15c9-412b-95d8-bd4a506f0fa4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:48.492Z",
      "Database": "dev",
      "Duration": 44084587,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
      "HasResultSet": false,
      "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10",
      "RedshiftPid": 1073750137,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:48.566Z",
          "Duration": 44084587,
          "HasResultSet": false,
          "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:48.981Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:48.569Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
          "HasResultSet": false,
          "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 1 asc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:48.981Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:49.045Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 1 asc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "eefe8283-15c9-412b-95d8-bd4a506f0fa4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:33:48.492Z",
      "Database": "dev",
      "Duration": 44084587,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
      "HasResultSet": false,
      "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10",
      "RedshiftPid": 1073750137,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:33:48.566Z",
          "Duration": 44084587,
          "HasResultSet": false,
          "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:33:48.981Z"
        },
        {
          "CreatedAt": "2025-02-28T02:33:48.569Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
          "HasResultSet": false,
          "Id": "618b0e9e-84de-4e3f-8bd9-c8a5d3c13b10:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 1 asc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:33:48.981Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:33:49.045Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:920:10)

  ● array unnest - redshift

    TypeError: splitFN is not a function

      1035 |         SELECT
      1036 |           ${q`city`},
    > 1037 |           ${splitFN!(q`city`, ' ')} as ${q`words`}
           |             ^
      1038 |         FROM ${rootDbPath(databaseName)}malloytest.aircraft
      1039 |       """) -> {
      1040 |         where: words.value is not null

      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1037:13)

  ● array unnest x 2 - redshift

    TypeError: splitFN is not a function

      1055 |         SELECT
      1056 |           ${q`city`},
    > 1057 |           ${splitFN!(q`city`, ' ')} as ${q`words`},
           |             ^
      1058 |           ${splitFN!(q`city`, 'A')} as ${q`abreak`}
      1059 |         FROM ${rootDbPath(databaseName)}malloytest.aircraft
      1060 |         WHERE ${q`city`} IS NOT null

      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1057:13)

  ● nest null - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e699307f-4b51-4c2b-af6e-8f187c703c08",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:14.116Z",
      "Database": "dev",
      "Duration": 42839084,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 29, column 34\n  Position: 856",
      "HasResultSet": false,
      "Id": "41d01b63-28ad-4ca4-a115-18c6872c587a",
      "RedshiftPid": 1073799285,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:14.204Z",
          "Duration": 42839084,
          "HasResultSet": false,
          "Id": "41d01b63-28ad-4ca4-a115-18c6872c587a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:14.627Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:14.208Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"airport_count__0\") FILTER\", at line 29, column 34\n  Position: 856",
          "HasResultSet": false,
          "Id": "41d01b63-28ad-4ca4-a115-18c6872c587a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"faa_region\" as \"faa_region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"airport_count__2\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  WHERE (base.\"faa_region\" IS NULL)\n  AND ((group_set NOT IN (1) OR (group_set IN (1) AND base.\"state\" IS NOT NULL)))\n  AND ((group_set NOT IN (2) OR (group_set IN (2) AND base.\"state\" IS NOT NULL)))\n  GROUP BY 1,2,4,6\n)\nSELECT\n  \"faa_region__0\" as \"faa_region\",\n  (ARRAY_AGG(\"airport_count__0\") FILTER (WHERE group_set=0 AND \"airport_count__0\" IS NOT NULL))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__2\" as \"state\", \n    \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:1]),'[]'::JSONB) as \"by_state1\"\nFROM __stage0\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:14.627Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:14.691Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● Nested pipelines sort properly - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a796f796-c4b0-4d20-91dc-83ee6bb50a8b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:15.490Z",
      "Database": "dev",
      "Duration": 44220425,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1203",
      "HasResultSet": false,
      "Id": "55952c9e-8592-4091-880f-221452ee35a0",
      "RedshiftPid": 1073913969,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:15.586Z",
          "Duration": 44220425,
          "HasResultSet": false,
          "Id": "55952c9e-8592-4091-880f-221452ee35a0:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:16.012Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:15.590Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1203",
          "HasResultSet": false,
          "Id": "55952c9e-8592-4091-880f-221452ee35a0:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airports__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"aircraft_count\"),0)\n      END as \"aircrafts__2\",\n    CASE WHEN group_set=3 THEN\n      base.\"state\"\n      END as \"state__3\",\n    CASE WHEN group_set=3 THEN\n      COALESCE(SUM(base.\"aircraft_count\"),0)\n      END as \"aircrafts__3\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"popular_name\" ~ 'I'\n  GROUP BY 1,2,3,5,7\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'airports')::double precision),0) as \"airports\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"airports__1\"::DOUBLE PRECISION as \"airports\"\n      ) as __x)  ORDER BY  \"airports__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 ASC NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as \"aircrafts\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"aircrafts__2\"::DOUBLE PRECISION as \"aircrafts\"\n      ) as __x)  ORDER BY  \"aircrafts__2\" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 ASC NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view2\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as \"aircrafts\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__3\" as \"state\", \n      \"aircrafts__3\"::DOUBLE PRECISION as \"aircrafts\"\n      ) as __x)  ORDER BY  \"aircrafts__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 desc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view3\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:16.012Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:16.077Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● number as null- redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "72b84ea4-6f1b-41e9-92b7-e3e0fe8e5786",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:16.869Z",
      "Database": "dev",
      "Duration": 44812843,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "31a8a09f-5dbb-4014-8b0f-96d7fa49fd66",
      "RedshiftPid": 1073979490,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:16.966Z",
          "Duration": 44812843,
          "HasResultSet": false,
          "Id": "31a8a09f-5dbb-4014-8b0f-96d7fa49fd66:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:17.388Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:16.969Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "31a8a09f-5dbb-4014-8b0f-96d7fa49fd66:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:17.388Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:17.454Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● removes surpuflous order_by - joined_query - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c213529e-a1f9-4517-98c5-ca72057fe88f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:24.357Z",
      "Database": "dev",
      "Duration": 53317485,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "b085bb0f-4cb7-4d57-bb18-7e9140cda7a6",
      "RedshiftPid": 1073856632,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:24.442Z",
          "Duration": 53317485,
          "HasResultSet": false,
          "Id": "b085bb0f-4cb7-4d57-bb18-7e9140cda7a6:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:24.897Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:24.446Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "b085bb0f-4cb7-4d57-bb18-7e9140cda7a6:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"state\" as \"state\",\n     COALESCE(SUM(base.\"airport_count\"),0) as \"airport_count\"\n  FROM \"malloytest\".\"state_facts\" as base\n  GROUP BY 1\n)\nSELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(foo_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(foo_0.\"state\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0.\"state\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(foo_0.\"state\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0.\"state\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"x\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN __stage0 AS foo_0\n  ON base.\"state\"=foo_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:24.897Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:24.963Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● removes surpuflous order_by - joined_query pipeline - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5318c24c-fd91-42c3-b34a-e39683b4f120",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:25.695Z",
      "Database": "dev",
      "Duration": 43041210,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "c73899c2-0b9d-4653-bba3-200261e53fe3",
      "RedshiftPid": 1073741928,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:25.789Z",
          "Duration": 43041210,
          "HasResultSet": false,
          "Id": "c73899c2-0b9d-4653-bba3-200261e53fe3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:26.219Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:25.792Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "c73899c2-0b9d-4653-bba3-200261e53fe3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     base.\"state\" as \"state\",\n     COALESCE(SUM(base.\"airport_count\"),0) as \"airport_count\"\n  FROM \"malloytest\".\"state_facts\" as base\n  GROUP BY 1\n)\n, __stage1 AS (\n  SELECT \n     base.\"state\" as \"state\",\n     COALESCE(SUM(base.\"airport_count\"),0) as \"airport_count\"\n  FROM __stage0 as base\n  GROUP BY 1\n)\nSELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(foo_0.\"airport_count\",0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(foo_0.\"state\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0.\"state\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(foo_0.\"state\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(foo_0.\"state\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"x\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN __stage1 AS foo_0\n  ON base.\"state\"=foo_0.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:26.219Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:26.284Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● quoting and strings › backslash backslash

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "53244df8-e692-4f8c-8591-816e5a445556",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:29.903Z",
      "Database": "dev",
      "Duration": 42389112,
      "Error": "Query #2 failed with Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
      "HasResultSet": false,
      "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f",
      "RedshiftPid": 1073848428,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:30.000Z",
          "Duration": 42389112,
          "HasResultSet": false,
          "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:30.429Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:30.003Z",
          "Duration": -1,
          "Error": "Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
          "HasResultSet": false,
          "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f:2",
          "QueryString": "SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:30.429Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:30.447Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       '\' as "back"
    FROM (SELECT 1 as one) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "53244df8-e692-4f8c-8591-816e5a445556",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:29.903Z",
      "Database": "dev",
      "Duration": 42389112,
      "Error": "Query #2 failed with Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
      "HasResultSet": false,
      "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f",
      "RedshiftPid": 1073848428,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:30.000Z",
          "Duration": 42389112,
          "HasResultSet": false,
          "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:30.429Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:30.003Z",
          "Duration": -1,
          "Error": "Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
          "HasResultSet": false,
          "Id": "5a3e4535-9354-4680-831b-2bc0d1c5e08f:2",
          "QueryString": "SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:30.429Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:30.447Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1350:10)

  ● quoting and strings › spaces in names

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "730a0b2b-7069-4893-b808-39bd4f8c3d17",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:32.843Z",
      "Database": "dev",
      "Duration": 44908902,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c o u n t__0\") FILTER\", at line 30, column 30\n  Position: 1017",
      "HasResultSet": false,
      "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2",
      "RedshiftPid": 1073881200,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:32.957Z",
          "Duration": 44908902,
          "HasResultSet": false,
          "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:33.404Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:32.961Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c o u n t__0\") FILTER\", at line 30, column 30\n  Position: 1017",
          "HasResultSet": false,
          "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"P O P__0\",\n    j_o_space_0.\"popular_name\" as \"J P O P__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c o u n t__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"R O W__0\",\n    CASE WHEN group_set=0 THEN LAG((base.\"popular_name\"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"l a g__0\",\n    CASE WHEN group_set=1 THEN\n      j_o_space_0.\"state\"\n      END as \"J S__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c o u n t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n   LEFT JOIN \"malloytest\".\"state_facts\" AS j_o_space_0\n    ON j_o_space_0.\"state\"=base.\"state\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"P O P__0\" as \"P O P\",\n  \"J P O P__0\" as \"J P O P\",\n  (ARRAY_AGG(\"c o u n t__0\") FILTER (WHERE group_set=0 AND \"c o u n t__0\" IS NOT NULL))[1] as \"c o u n t\",\n  (ARRAY_AGG(\"R O W__0\") FILTER (WHERE group_set=0 AND \"R O W__0\" IS NOT NULL))[1] as \"R O W\",\n  (ARRAY_AGG(\"l a g__0\") FILTER (WHERE group_set=0 AND \"l a g__0\" IS NOT NULL))[1] as \"l a g\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"J S__1\" as \"J S\", \n    \"c o u n t__1\"::DOUBLE PRECISION as \"c o u n t\"\n    ) as __x)  ORDER BY  \"c o u n t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by state\"\nFROM __stage0\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:33.404Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:33.470Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "P O P__0",
        j_o_space_0."popular_name" as "J P O P__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c o u n t__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "R O W__0",
        CASE WHEN group_set=0 THEN LAG((base."popular_name"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "l a g__0",
        CASE WHEN group_set=1 THEN
          j_o_space_0."state"
          END as "J S__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c o u n t__1"
      FROM "malloytest"."state_facts" as base
       LEFT JOIN "malloytest"."state_facts" AS j_o_space_0
        ON j_o_space_0."state"=base."state"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,7
    )
    SELECT
      "P O P__0" as "P O P",
      "J P O P__0" as "J P O P",
      (ARRAY_AGG("c o u n t__0") FILTER (WHERE group_set=0 AND "c o u n t__0" IS NOT NULL))[1] as "c o u n t",
      (ARRAY_AGG("R O W__0") FILTER (WHERE group_set=0 AND "R O W__0" IS NOT NULL))[1] as "R O W",
      (ARRAY_AGG("l a g__0") FILTER (WHERE group_set=0 AND "l a g__0" IS NOT NULL))[1] as "l a g",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "J S__1" as "J S", 
        "c o u n t__1"::DOUBLE PRECISION as "c o u n t"
        ) as __x)  ORDER BY  "c o u n t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by state"
    FROM __stage0
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "730a0b2b-7069-4893-b808-39bd4f8c3d17",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:32.843Z",
      "Database": "dev",
      "Duration": 44908902,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c o u n t__0\") FILTER\", at line 30, column 30\n  Position: 1017",
      "HasResultSet": false,
      "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2",
      "RedshiftPid": 1073881200,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:32.957Z",
          "Duration": 44908902,
          "HasResultSet": false,
          "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:33.404Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:32.961Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c o u n t__0\") FILTER\", at line 30, column 30\n  Position: 1017",
          "HasResultSet": false,
          "Id": "77276b90-22b0-44e6-97fd-6dd9c428c8f2:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"P O P__0\",\n    j_o_space_0.\"popular_name\" as \"J P O P__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c o u n t__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"R O W__0\",\n    CASE WHEN group_set=0 THEN LAG((base.\"popular_name\"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"l a g__0\",\n    CASE WHEN group_set=1 THEN\n      j_o_space_0.\"state\"\n      END as \"J S__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c o u n t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n   LEFT JOIN \"malloytest\".\"state_facts\" AS j_o_space_0\n    ON j_o_space_0.\"state\"=base.\"state\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"P O P__0\" as \"P O P\",\n  \"J P O P__0\" as \"J P O P\",\n  (ARRAY_AGG(\"c o u n t__0\") FILTER (WHERE group_set=0 AND \"c o u n t__0\" IS NOT NULL))[1] as \"c o u n t\",\n  (ARRAY_AGG(\"R O W__0\") FILTER (WHERE group_set=0 AND \"R O W__0\" IS NOT NULL))[1] as \"R O W\",\n  (ARRAY_AGG(\"l a g__0\") FILTER (WHERE group_set=0 AND \"l a g__0\" IS NOT NULL))[1] as \"l a g\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"J S__1\" as \"J S\", \n    \"c o u n t__1\"::DOUBLE PRECISION as \"c o u n t\"\n    ) as __x)  ORDER BY  \"c o u n t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by state\"\nFROM __stage0\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:33.404Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:33.470Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1381:10)

FAIL test/src/databases/all/time.spec.ts (80.176 s)
  ● redshift date and time › interval measurement › forwards is positive

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e1fcff05-f8dc-4c02-b691-cfeb66092b3a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:47.103Z",
      "Database": "dev",
      "Duration": 45200174,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "884cbed4-214a-4809-8da3-c13d6a7e43e5",
      "RedshiftPid": 1073930364,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:47.218Z",
          "Duration": 45200174,
          "HasResultSet": false,
          "Id": "884cbed4-214a-4809-8da3-c13d6a7e43e5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:47.664Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:47.222Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "884cbed4-214a-4809-8da3-c13d6a7e43e5:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     1 as \"expect\",\n     FLOOR((EXTRACT(EPOCH FROM DATE '2000-01-02')-EXTRACT(EPOCH FROM DATE '2000-01-01'))/86400.0) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(@2000-01-01 to @2000-01-02) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:47.664Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:47.730Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › reverse is negative

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5d0cec52-df29-4423-a3b1-ee26f2314e23",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:48.550Z",
      "Database": "dev",
      "Duration": 53562141,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "50ca7529-a545-49f5-a2fc-0d2f93ae9843",
      "RedshiftPid": 1073774691,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:48.643Z",
          "Duration": 53562141,
          "HasResultSet": false,
          "Id": "50ca7529-a545-49f5-a2fc-0d2f93ae9843:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:49.136Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:48.646Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "50ca7529-a545-49f5-a2fc-0d2f93ae9843:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     -1 as \"expect\",\n     FLOOR((EXTRACT(EPOCH FROM DATE '2000-01-01')-EXTRACT(EPOCH FROM DATE '2000-01-02'))/86400.0) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(@2000-01-02 to @2000-01-01) == -1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:49.136Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:49.201Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › seconds

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d5eea55f-9b7b-4f56-811f-474b359119a9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:50.037Z",
      "Database": "dev",
      "Duration": 42752038,
      "Error": "Query #2 failed with ERROR: column \"secs\" does not exist in base",
      "HasResultSet": false,
      "Id": "cada801a-8cc0-44d8-a975-06a802bc21ab",
      "RedshiftPid": 1073905789,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:50.122Z",
          "Duration": 42752038,
          "HasResultSet": false,
          "Id": "cada801a-8cc0-44d8-a975-06a802bc21ab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:50.542Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:50.126Z",
          "Duration": -1,
          "Error": "ERROR: column \"secs\" does not exist in base",
          "HasResultSet": false,
          "Id": "cada801a-8cc0-44d8-a975-06a802bc21ab:2",
          "QueryString": "SELECT \n   CASE WHEN ((1)=(FLOOR(EXTRACT(EPOCH FROM ((LOCALTIMESTAMP)+make_interval(secs=>1)))-EXTRACT(EPOCH FROM LOCALTIMESTAMP)))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: seconds(now to now + 1 second) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR(EXTRACT(EPOCH FROM ((LOCALTIMESTAMP)+make_interval(secs=>1)))-EXTRACT(EPOCH FROM LOCALTIMESTAMP))) AS varchar))) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:50.542Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:50.607Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › minutes

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9fccf4be-14b1-4b82-b681-e2e2bbe1775b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:51.481Z",
      "Database": "dev",
      "Duration": 53386446,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "15c5d5ef-7025-4283-a98f-a5291babe29d",
      "RedshiftPid": 1073766503,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:51.591Z",
          "Duration": 53386446,
          "HasResultSet": false,
          "Id": "15c5d5ef-7025-4283-a98f-a5291babe29d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:52.050Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:51.595Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "15c5d5ef-7025-4283-a98f-a5291babe29d:2",
          "QueryString": "SELECT \n   CASE WHEN ((0)=(FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:24:07')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:08'))/60.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: minutes(@2022-10-03 10:23:08 to @2022-10-03 10:24:07) == 0',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:24:07')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:08'))/60.0)) AS varchar))) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:52.050Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:52.115Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › hours

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5591977c-32cc-4e2f-b591-84c84a319647",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:52.874Z",
      "Database": "dev",
      "Duration": 43899921,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "3db46605-a3b1-4b57-9df6-7e172ea87eb4",
      "RedshiftPid": 1073832058,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:52.972Z",
          "Duration": 43899921,
          "HasResultSet": false,
          "Id": "3db46605-a3b1-4b57-9df6-7e172ea87eb4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:53.406Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:52.975Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "3db46605-a3b1-4b57-9df6-7e172ea87eb4:2",
          "QueryString": "SELECT \n   CASE WHEN ((0)=(FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 11:22:00')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:00'))/3600.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: hours(@2022-10-03 10:23:00 to @2022-10-03 11:22:00) == 0',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 11:22:00')-EXTRACT(EPOCH FROM TIMESTAMP '2022-10-03 10:23:00'))/3600.0)) AS varchar))) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:53.406Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:53.471Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › days

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "31ba58c7-5bf4-4b14-b1af-b38f126a3e6b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:54.296Z",
      "Database": "dev",
      "Duration": 44917223,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "2aa01db3-69b2-4b77-934a-abedc900f5ab",
      "RedshiftPid": 1073758329,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:54.401Z",
          "Duration": 44917223,
          "HasResultSet": false,
          "Id": "2aa01db3-69b2-4b77-934a-abedc900f5ab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:54.822Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:54.405Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "2aa01db3-69b2-4b77-934a-abedc900f5ab:2",
          "QueryString": "SELECT \n   CASE WHEN ((1)=(FLOOR((EXTRACT(EPOCH FROM ((DATE_TRUNC('day', LOCALTIMESTAMP))+make_interval(days=>1)))-EXTRACT(EPOCH FROM DATE_TRUNC('day', LOCALTIMESTAMP)))/86400.0))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: days(now.day to now.day + 1 day) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((FLOOR((EXTRACT(EPOCH FROM ((DATE_TRUNC('day', LOCALTIMESTAMP))+make_interval(days=>1)))-EXTRACT(EPOCH FROM DATE_TRUNC('day', LOCALTIMESTAMP)))/86400.0)) AS varchar))) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:54.822Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:54.888Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › interval measurement › timeDiff passed to a function preserves rhs

    SQL Generated:
      SELECT 
         FLOOR(FLOOR((EXTRACT(EPOCH FROM DATE '2002-01-01')-EXTRACT(EPOCH FROM DATE '2001-01-01'))/86400.0)) as "yd"
      FROM (SELECT 1) as base
      
    Expected {yd: 365} Got: Non Numeric '"365"'

      100 |         run: ${dbName}.sql("SELECT 1")
      101 |         -> { select: yd is floor(days(@2001 to @2002)) }
    > 102 |       `).malloyResultMatches(runtime, {yd: 365});
          |          ^
      103 |       }
      104 |     );
      105 |

      at Object.<anonymous> (test/src/databases/all/time.spec.ts:102:10)

  ● redshift date and time › timestamp truncation › trunc second

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.second
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.second == @2021-02-24 03:05:06', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.second == @2021-02-24 03:05:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc minute

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.minute
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.minute == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.minute == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                                                                                                ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc hour

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.hour
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.hour == @2021-02-24 03:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.hour == @2021-02-24 03:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc day

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.day
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.day == @2021-02-24 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.day == @2021-02-24 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                             ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc week

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.week
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.week == @2021-02-21 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.week == @2021-02-21 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc month

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.month
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.month == @2021-02-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.month == @2021-02-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                               ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc quarter

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.quarter
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.quarter == @2021-01-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.quarter == @2021-01-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                                 ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp truncation › trunc year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is t_timestamp.year
      |                            ^
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.year == @2021-01-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp.year == @2021-01-01 00:00:00', CHR(10), '    Received: ', got::string)
      |                                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract second

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: second() requires time type, not 'sql native'
      |             select: got is second(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: second(t_timestamp) == 6', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: second(t_timestamp) == 6', CHR(10), '    Received: ', got::string)
      |                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract minute

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: minute() requires time type, not 'sql native'
      |             select: got is minute(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: minute(t_timestamp) == 5', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: minute(t_timestamp) == 5', CHR(10), '    Received: ', got::string)
      |                                                                                              ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract hour

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: hour() requires time type, not 'sql native'
      |             select: got is hour(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: hour(t_timestamp) == 3', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: hour(t_timestamp) == 3', CHR(10), '    Received: ', got::string)
      |                                                                                            ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract day

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: day() requires time type, not 'sql native'
      |             select: got is day(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day(t_timestamp) == 24', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day(t_timestamp) == 24', CHR(10), '    Received: ', got::string)
      |                                                                                            ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract day_of_week

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: day_of_week() requires time type, not 'sql native'
      |             select: got is day_of_week(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_week(t_timestamp) == 4', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_week(t_timestamp) == 4', CHR(10), '    Received: ', got::string)
      |                                                                                                   ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › first week day is one 

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Cannot do time truncation on type 'sql native'
      |             select: got is day_of_week(t_timestamp.week)
      |                                        ^
    line 7: day_of_week() requires time type, not 'sql native'
      |             select: got is day_of_week(t_timestamp.week)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_week(t_timestamp.week) == 1', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_week(t_timestamp.week) == 1', CHR(10), '    Received: ', got::string)
      |                                                                                                        ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract day_of_year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: day_of_year() requires time type, not 'sql native'
      |             select: got is day_of_year(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_year(t_timestamp) == 55', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: day_of_year(t_timestamp) == 55', CHR(10), '    Received: ', got::string)
      |                                                                                                    ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract week

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: week() requires time type, not 'sql native'
      |             select: got is week(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: week(t_timestamp) == 8', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: week(t_timestamp) == 8', CHR(10), '    Received: ', got::string)
      |                                                                                            ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract month

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: month() requires time type, not 'sql native'
      |             select: got is month(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: month(t_timestamp) == 2', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: month(t_timestamp) == 2', CHR(10), '    Received: ', got::string)
      |                                                                                             ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract quarter

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: quarter() requires time type, not 'sql native'
      |             select: got is quarter(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: quarter(t_timestamp) == 1', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: quarter(t_timestamp) == 1', CHR(10), '    Received: ', got::string)
      |                                                                                               ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp extraction › extract year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: year() requires time type, not 'sql native'
      |             select: got is year(t_timestamp)
      |                            ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: year(t_timestamp) == 2021', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: year(t_timestamp) == 2021', CHR(10), '    Received: ', got::string)
      |                                                                                               ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc day

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5cf705d5-fe83-43e4-8dda-887831c72347",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:34:58.890Z",
      "Database": "dev",
      "Duration": 53429163,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "eef23620-6b55-406b-86f1-136e70ae1a83",
      "RedshiftPid": 1073823847,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:34:58.981Z",
          "Duration": 53429163,
          "HasResultSet": false,
          "Id": "eef23620-6b55-406b-86f1-136e70ae1a83:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:34:59.433Z"
        },
        {
          "CreatedAt": "2025-02-28T02:34:58.985Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "eef23620-6b55-406b-86f1-136e70ae1a83:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-24')) as \"expect\",\n     DATE_TRUNC('day', (DATE_TRUNC('day', base.\"t_date\"))) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=DATE_TRUNC('day', (base.\"got\"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.day == @2021-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('day', (base.\"got\")) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:34:59.433Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:34:59.508Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc week

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "88fcb1c9-faa3-4f28-a64a-5b16ab831830",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:00.262Z",
      "Database": "dev",
      "Duration": 44983480,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f33affc1-9a46-420d-a287-0c22c16b7a97",
      "RedshiftPid": 1073954936,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:00.346Z",
          "Duration": 44983480,
          "HasResultSet": false,
          "Id": "f33affc1-9a46-420d-a287-0c22c16b7a97:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:00.756Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:00.350Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f33affc1-9a46-420d-a287-0c22c16b7a97:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-21')) as \"expect\",\n     (DATE_TRUNC('week', ((DATE_TRUNC('week', base.\"t_date\" + INTERVAL '1' DAY) - INTERVAL '1' DAY)) + INTERVAL '1' DAY) - INTERVAL '1' DAY) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=(DATE_TRUNC('week', (base.\"got\") + INTERVAL '1' DAY) - INTERVAL '1' DAY)) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.week == @2021-02-21',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST((DATE_TRUNC('week', (base.\"got\") + INTERVAL '1' DAY) - INTERVAL '1' DAY) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:00.756Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:00.822Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc month

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d6f6e185-1628-4636-924a-168a993159b4",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:01.641Z",
      "Database": "dev",
      "Duration": 51787586,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "989f85e0-890c-47e0-a406-9ef93200c79f",
      "RedshiftPid": 1073823842,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:01.731Z",
          "Duration": 51787586,
          "HasResultSet": false,
          "Id": "989f85e0-890c-47e0-a406-9ef93200c79f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:02.164Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:01.736Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "989f85e0-890c-47e0-a406-9ef93200c79f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-01')) as \"expect\",\n     DATE_TRUNC('month', (DATE_TRUNC('month', base.\"t_date\"))) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=DATE_TRUNC('month', (base.\"got\"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.month == @2021-02-01',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('month', (base.\"got\")) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:02.164Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:02.230Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc quarter

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6a47950e-e69b-4e11-ae26-69526efa1e06",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:03.090Z",
      "Database": "dev",
      "Duration": 44948342,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "d4a11d91-b6f5-4809-9a89-01a56500e06b",
      "RedshiftPid": 1073799265,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:03.212Z",
          "Duration": 44948342,
          "HasResultSet": false,
          "Id": "d4a11d91-b6f5-4809-9a89-01a56500e06b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:03.657Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:03.216Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "d4a11d91-b6f5-4809-9a89-01a56500e06b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-01-01')) as \"expect\",\n     DATE_TRUNC('quarter', (DATE_TRUNC('quarter', base.\"t_date\"))) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=DATE_TRUNC('quarter', (base.\"got\"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.quarter == @2021-01-01',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('quarter', (base.\"got\")) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:03.657Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:03.723Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date truncation › date trunc year

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1e368ddb-4a6f-4526-b6d3-30af13542428",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:04.497Z",
      "Database": "dev",
      "Duration": 45043977,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "d5b01eab-469d-4a53-a867-4d47db27df5f",
      "RedshiftPid": 1073774715,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:04.599Z",
          "Duration": 45043977,
          "HasResultSet": false,
          "Id": "d5b01eab-469d-4a53-a867-4d47db27df5f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:05.010Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:04.602Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "d5b01eab-469d-4a53-a867-4d47db27df5f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('year', (DATE '2021-01-01')) as \"expect\",\n     DATE_TRUNC('year', (DATE_TRUNC('year', base.\"t_date\"))) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('year', (base.\"expect\"))=DATE_TRUNC('year', (base.\"got\"))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date.year == @2021',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(DATE_TRUNC('year', (base.\"got\")) AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:05.010Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:05.075Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract day

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1e593782-e66f-4db8-b4d8-42129c5c3d88",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:05.918Z",
      "Database": "dev",
      "Duration": 42507012,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f99c5ab3-9cf7-4edb-b56c-6376afb02be3",
      "RedshiftPid": 1073913973,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:06.014Z",
          "Duration": 42507012,
          "HasResultSet": false,
          "Id": "f99c5ab3-9cf7-4edb-b56c-6376afb02be3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:06.477Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:06.017Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f99c5ab3-9cf7-4edb-b56c-6376afb02be3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     24 as \"expect\",\n     EXTRACT(day FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day(t_date) == 24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:06.477Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:06.541Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract day_of_week

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "32fc92e6-99f8-41ec-8f12-4e8be13af0c2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:07.328Z",
      "Database": "dev",
      "Duration": 44685894,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "9db99bbb-e13f-4a95-b3d7-392409498576",
      "RedshiftPid": 1073979502,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:07.429Z",
          "Duration": 44685894,
          "HasResultSet": false,
          "Id": "9db99bbb-e13f-4a95-b3d7-392409498576:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:07.866Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:07.433Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "9db99bbb-e13f-4a95-b3d7-392409498576:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     4 as \"expect\",\n     mod(EXTRACT(dow FROM base.\"t_date\")+1,7) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day_of_week(t_date) == 4',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:07.866Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:07.932Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract day_of_year

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d21eab4b-353a-40d1-810c-16fd84e471b0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:08.701Z",
      "Database": "dev",
      "Duration": 43514312,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "c05bfbab-2973-4bbb-9e95-f5ca85daa19a",
      "RedshiftPid": 1073905768,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:08.791Z",
          "Duration": 43514312,
          "HasResultSet": false,
          "Id": "c05bfbab-2973-4bbb-9e95-f5ca85daa19a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:09.214Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:08.795Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "c05bfbab-2973-4bbb-9e95-f5ca85daa19a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     55 as \"expect\",\n     EXTRACT(doy FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: day_of_year(t_date) == 55',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:09.214Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:09.278Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract week

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "ca0f13e3-3387-4e87-9b2e-91916185e3e9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:10.084Z",
      "Database": "dev",
      "Duration": 44617046,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "74f6061d-d554-4654-b360-189d7268589a",
      "RedshiftPid": 1073954943,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:10.181Z",
          "Duration": 44617046,
          "HasResultSet": false,
          "Id": "74f6061d-d554-4654-b360-189d7268589a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:10.606Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:10.184Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "74f6061d-d554-4654-b360-189d7268589a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     8 as \"expect\",\n     EXTRACT(week FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: week(t_date) == 8',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:10.606Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:10.671Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract month

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f14ae8ba-3b87-48a8-a94a-8c8b0c2b999f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:11.464Z",
      "Database": "dev",
      "Duration": 63476324,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "cfc8a7ae-a706-4977-83c4-b42da0b0838b",
      "RedshiftPid": 1073913975,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:11.561Z",
          "Duration": 63476324,
          "HasResultSet": false,
          "Id": "cfc8a7ae-a706-4977-83c4-b42da0b0838b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:12.008Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:11.565Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "cfc8a7ae-a706-4977-83c4-b42da0b0838b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     2 as \"expect\",\n     EXTRACT(month FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: month(t_date) == 2',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:12.008Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:12.073Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract quarter

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5dd8450e-538d-4fb2-b946-d49e57acb7fa",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:12.817Z",
      "Database": "dev",
      "Duration": 43710571,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "ba929998-b7ae-4394-9310-cd014b8f1921",
      "RedshiftPid": 1073807460,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:12.919Z",
          "Duration": 43710571,
          "HasResultSet": false,
          "Id": "ba929998-b7ae-4394-9310-cd014b8f1921:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:13.355Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:12.922Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "ba929998-b7ae-4394-9310-cd014b8f1921:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     1 as \"expect\",\n     EXTRACT(quarter FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: quarter(t_date) == 1',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:13.355Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:13.420Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date extraction › date extract year

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "04bfc27b-2a5b-496d-a5f2-ad1c837521a8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:14.259Z",
      "Database": "dev",
      "Duration": 44277225,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "ba2b52f4-6e17-4b72-b1d3-257a452fb0af",
      "RedshiftPid": 1073766499,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:14.386Z",
          "Duration": 44277225,
          "HasResultSet": false,
          "Id": "ba2b52f4-6e17-4b72-b1d3-257a452fb0af:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:14.840Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:14.389Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "ba2b52f4-6e17-4b72-b1d3-257a452fb0af:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     2021 as \"expect\",\n     EXTRACT(year FROM base.\"t_date\") as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: year(t_date) == 2021',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:14.840Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:14.905Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta second

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 seconds
      |                                          ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 seconds
      |                            ^
    line 7: Cannot define 'got', unexpected type: duration
      |             select: got is t_timestamp + 10 seconds
      |                     ^
    line 10: 'got' is not defined
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 seconds == @2021-02-24 03:05:16', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 seconds == @2021-02-24 03:05:16', CHR(10), '    Received: ', got::string)
      |                                                                                                                      ^
    line 11: 'got' is not defined
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 seconds == @2021-02-24 03:05:16', CHR(10), '    Received: ', got::string)
      |                                                                                                                                                 ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta negative second

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp - 6 seconds
      |                                          ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp - 6 seconds
      |                            ^
    line 7: Cannot define 'got', unexpected type: duration
      |             select: got is t_timestamp - 6 seconds
      |                     ^
    line 10: 'got' is not defined
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp - 6 seconds == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp - 6 seconds == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                                                                                                     ^
    line 11: 'got' is not defined
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp - 6 seconds == @2021-02-24 03:05:00', CHR(10), '    Received: ', got::string)
      |                                                                                                                                                ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta minute

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 minutes
      |                                          ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 minutes
      |                            ^
    line 7: Cannot define 'got', unexpected type: duration
      |             select: got is t_timestamp + 10 minutes
      |                     ^
    line 10: 'got' is not defined
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 minutes == @2021-02-24 03:15:06', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 minutes == @2021-02-24 03:15:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                      ^
    line 11: 'got' is not defined
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 minutes == @2021-02-24 03:15:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                                                 ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta hours

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 hours
      |                                          ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is t_timestamp + 10 hours
      |                            ^
    line 7: Cannot define 'got', unexpected type: duration
      |             select: got is t_timestamp + 10 hours
      |                     ^
    line 10: 'got' is not defined
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 hours == @2021-02-24 13:05:06', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 hours == @2021-02-24 13:05:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                    ^
    line 11: 'got' is not defined
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp + 10 hours == @2021-02-24 13:05:06', CHR(10), '    Received: ', got::string)
      |                                                                                                                                               ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta week

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp - 2 weeks)::date
      |                                           ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp - 2 weeks)::date
      |                             ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp - 2 weeks)::date == @2021-02-10', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp - 2 weeks)::date == @2021-02-10', CHR(10), '    Received: ', got::string)
      |                                                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta month

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 9 months)::date
      |                                           ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 9 months)::date
      |                             ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 9 months)::date == @2021-11-24', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 9 months)::date == @2021-11-24', CHR(10), '    Received: ', got::string)
      |                                                                                                                   ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta quarter

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 2 quarters)::date
      |                                           ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 2 quarters)::date
      |                             ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 2 quarters)::date == @2021-08-24', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 2 quarters)::date == @2021-08-24', CHR(10), '    Received: ', got::string)
      |                                                                                                                     ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › timestamp delta year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 10 years)::date
      |                                           ^
    line 7: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             select: got is (t_timestamp + 10 years)::date
      |                             ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 10 years)::date == @2031-02-24', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: (t_timestamp + 10 years)::date == @2031-02-24', CHR(10), '    Received: ', got::string)
      |                                                                                                                   ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › date delta week

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0c1ef65c-3aba-4375-a3eb-194054cff78c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:15.849Z",
      "Database": "dev",
      "Duration": 52992058,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "ad6fef00-0496-438e-bc9a-b2ae735e0ca9",
      "RedshiftPid": 1073995884,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:15.954Z",
          "Duration": 52992058,
          "HasResultSet": false,
          "Id": "ad6fef00-0496-438e-bc9a-b2ae735e0ca9:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:16.388Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:15.958Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "ad6fef00-0496-438e-bc9a-b2ae735e0ca9:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-10')) as \"expect\",\n     (base.\"t_date\")-make_interval(days=>2*7) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date - 2 weeks == @2021-02-10',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:16.388Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:16.451Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › date delta month

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7b64d9a0-b7a0-4dbe-9db1-d9de9ae6ee93",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:17.225Z",
      "Database": "dev",
      "Duration": 45534317,
      "Error": "Query #2 failed with ERROR: column \"months\" does not exist in base",
      "HasResultSet": false,
      "Id": "b1267ce7-fd87-484c-a62d-241c0604ebab",
      "RedshiftPid": 1073987708,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:17.315Z",
          "Duration": 45534317,
          "HasResultSet": false,
          "Id": "b1267ce7-fd87-484c-a62d-241c0604ebab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:17.741Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:17.318Z",
          "Duration": -1,
          "Error": "ERROR: column \"months\" does not exist in base",
          "HasResultSet": false,
          "Id": "b1267ce7-fd87-484c-a62d-241c0604ebab:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-11-24')) as \"expect\",\n     (base.\"t_date\")+make_interval(months=>9) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 9 months == @2021-11-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:17.741Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:17.804Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › date delta quarter

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "073763ca-06a0-4e0f-bd65-addfe48e763c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:18.611Z",
      "Database": "dev",
      "Duration": 55793721,
      "Error": "Query #2 failed with ERROR: column \"months\" does not exist in base",
      "HasResultSet": false,
      "Id": "efd219a4-8c56-4a1d-8812-c469f08f0e43",
      "RedshiftPid": 1073832048,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:18.715Z",
          "Duration": 55793721,
          "HasResultSet": false,
          "Id": "efd219a4-8c56-4a1d-8812-c469f08f0e43:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:19.187Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:18.718Z",
          "Duration": -1,
          "Error": "ERROR: column \"months\" does not exist in base",
          "HasResultSet": false,
          "Id": "efd219a4-8c56-4a1d-8812-c469f08f0e43:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-08-24')) as \"expect\",\n     (base.\"t_date\")+make_interval(months=>2*3) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 2 quarters == @2021-08-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:19.187Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:19.252Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › delta computations › date delta year

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0dfdf60c-c171-4231-a224-df0a3b06a028",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:19.995Z",
      "Database": "dev",
      "Duration": 44174591,
      "Error": "Query #2 failed with ERROR: column \"years\" does not exist in base",
      "HasResultSet": false,
      "Id": "0de97872-df4f-4ac9-9150-2057369a6432",
      "RedshiftPid": 1073742034,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:20.097Z",
          "Duration": 44174591,
          "HasResultSet": false,
          "Id": "0de97872-df4f-4ac9-9150-2057369a6432:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:20.528Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:20.100Z",
          "Duration": -1,
          "Error": "ERROR: column \"years\" does not exist in base",
          "HasResultSet": false,
          "Id": "0de97872-df4f-4ac9-9150-2057369a6432:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2031-02-24')) as \"expect\",\n     (base.\"t_date\")+make_interval(years=>10) as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date + 10 years == @2031-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:20.528Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:20.593Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › date › before for-range is outside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6744312e-ddae-423c-a75c-43d5b650911f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:21.371Z",
      "Database": "dev",
      "Duration": 46182416,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "78e5ba36-7951-4364-988d-320a53c208bd",
      "RedshiftPid": 1073995875,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:21.459Z",
          "Duration": 46182416,
          "HasResultSet": false,
          "Id": "78e5ba36-7951-4364-988d-320a53c208bd:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:21.907Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:21.463Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "78e5ba36-7951-4364-988d-320a53c208bd:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-25') and (base.\"t_date\"<((DATE '2021-02-25')+make_interval(days=>1)))) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-25 for 1 day to be false')) ELSE '=' END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:21.907Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:21.973Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › date › first for-range is inside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "90f4be8c-3331-4cb5-93bb-c01b5ee95dfa",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:22.707Z",
      "Database": "dev",
      "Duration": 44815578,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "4c1b64e2-51ab-4f36-9fce-6b00aa6fc186",
      "RedshiftPid": 1073889396,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:22.805Z",
          "Duration": 44815578,
          "HasResultSet": false,
          "Id": "4c1b64e2-51ab-4f36-9fce-6b00aa6fc186:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:23.219Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:22.808Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "4c1b64e2-51ab-4f36-9fce-6b00aa6fc186:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-24') and (base.\"t_date\"<((DATE '2021-02-24')+make_interval(days=>1)))) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-24 for 1 day to be true')) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:23.219Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:23.285Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › date › last for-range is outside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "44f2b931-5011-44a3-8931-435b5982bef0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:24.034Z",
      "Database": "dev",
      "Duration": 42777866,
      "Error": "Query #2 failed with ERROR: column \"days\" does not exist in base",
      "HasResultSet": false,
      "Id": "9e02b7de-51d3-4f45-ae2e-cb952d16d85c",
      "RedshiftPid": 1073766511,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:24.126Z",
          "Duration": 42777866,
          "HasResultSet": false,
          "Id": "9e02b7de-51d3-4f45-ae2e-cb952d16d85c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:24.600Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:24.130Z",
          "Duration": -1,
          "Error": "ERROR: column \"days\" does not exist in base",
          "HasResultSet": false,
          "Id": "9e02b7de-51d3-4f45-ae2e-cb952d16d85c:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-23') and (base.\"t_date\"<((DATE '2021-02-23')+make_interval(days=>1)))) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-23 for 1 day to be false')) ELSE '=' END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:24.600Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:24.664Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › timestamp › before for-range is outside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectFalse is t_timestamp ? @2021-02-25 00:00:00 for 1 day}
      |                                                ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-25 00:00:00 for 1 day to be false') when expectFalse else '='
      |                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › timestamp › first for-range is inside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02-24 03:04:05 for 1 day}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 03:04:05 for 1 day to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › for range edge tests › timestamp › last for-range is outside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectFalse is t_timestamp ? @2021-02-23 03:05:06 for 1 day}
      |                                                ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-23 03:05:06 for 1 day to be false') when expectFalse else '='
      |                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › date › before to is outside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "025b5d3c-d8bf-4364-93b5-5824807ec36a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:25.405Z",
      "Database": "dev",
      "Duration": 50072414,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "891c6611-0053-4899-b2bc-2e97fb96b070",
      "RedshiftPid": 1073905763,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:25.510Z",
          "Duration": 50072414,
          "HasResultSet": false,
          "Id": "891c6611-0053-4899-b2bc-2e97fb96b070:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:25.962Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:25.513Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "891c6611-0053-4899-b2bc-2e97fb96b070:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-25') and (base.\"t_date\"<DATE '2021-03-01')) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-25 to @2021-03-01 to be false')) ELSE '=' END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:25.962Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:26.026Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › date › first to is inside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "acfcbfdb-7bf1-4792-bfe6-d37a3648bc41",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:26.876Z",
      "Database": "dev",
      "Duration": 46217601,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f6137108-59b7-42b1-a694-1c042c1bcdd9",
      "RedshiftPid": 1073741928,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:26.977Z",
          "Duration": 46217601,
          "HasResultSet": false,
          "Id": "f6137108-59b7-42b1-a694-1c042c1bcdd9:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:27.396Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:26.981Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f6137108-59b7-42b1-a694-1c042c1bcdd9:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-24') and (base.\"t_date\"<DATE '2021-03-01')) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-24 to @2021-03-01 to be true')) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:27.396Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:27.462Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › date › last to is outside

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6bec196f-a587-4287-81c8-3c4d59ace85c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:28.306Z",
      "Database": "dev",
      "Duration": 44182603,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "20f42702-569d-4f2b-908e-294b42225d86",
      "RedshiftPid": 1073750132,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:28.415Z",
          "Duration": 44182603,
          "HasResultSet": false,
          "Id": "20f42702-569d-4f2b-908e-294b42225d86:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:28.890Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:28.419Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "20f42702-569d-4f2b-908e-294b42225d86:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-01') and (base.\"t_date\"<DATE '2021-02-24')) THEN (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02-01 to @2021-02-24 to be false')) ELSE '=' END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:28.890Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:28.955Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › timestamp › before to is outside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectFalse is t_timestamp ? @2021-02-25 00:00:00 to @2021-02-26 00:00:00}
      |                                                ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-25 00:00:00 to @2021-02-26 00:00:00 to be false') when expectFalse else '='
      |                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › timestamp › first to is inside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02-24 03:04:05 to @2021-02-26 00:00:00}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 03:04:05 to @2021-02-26 00:00:00 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › to range edge tests › timestamp › last to is outside

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectFalse is t_timestamp ? @2021-02-24 00:00:00 to @2021-02-24 03:05:06}
      |                                                ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 00:00:00 to @2021-02-24 03:05:06 to be false') when expectFalse else '='
      |                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › date in sql_block no explore

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "753cbd7d-facf-4e9e-991d-893be9f23d39",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:29.821Z",
      "Database": "dev",
      "Duration": 43806828,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "168250e9-4eb5-4855-9a3c-ce330857d923",
      "RedshiftPid": 1073881187,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:29.952Z",
          "Duration": 43806828,
          "HasResultSet": false,
          "Id": "168250e9-4eb5-4855-9a3c-ce330857d923:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:30.414Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:29.955Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "168250e9-4eb5-4855-9a3c-ce330857d923:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     DATE_TRUNC('day', (DATE '2021-02-24')) as \"expect\",\n     base.\"t_date\" as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (DATE_TRUNC('day', (base.\"expect\"))=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date == @2021-02-24',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:30.414Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:30.479Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › timestamp in sql_block no explore

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 10: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |               pick '=' when expect = got
      |                                      ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp == @2021-02-24 03:05:06', CHR(10), '    Received: ', got::string)
      |                                           ^
    line 11: Case insensitivity for function names is deprecated, use 'chr' instead
      |               else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp == @2021-02-24 03:05:06', CHR(10), '    Received: ', got::string)
      |                                                                                                         ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › valid timestamp without seconds

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "50d180b3-877e-4829-af7f-3f9d006314b9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:31.265Z",
      "Database": "dev",
      "Duration": 52356504,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "235fb72b-ba74-4f18-8516-e23cf3852c44",
      "RedshiftPid": 1073979498,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:31.370Z",
          "Duration": 52356504,
          "HasResultSet": false,
          "Id": "235fb72b-ba74-4f18-8516-e23cf3852c44:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:31.805Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:31.374Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\", text, \"unknown\", character varying) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "235fb72b-ba74-4f18-8516-e23cf3852c44:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     2000 as \"expect\",\n     EXTRACT(year FROM TIMESTAMP '2000-01-01 00:00:00') as \"got\"\n  FROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n)\nSELECT \n   CASE WHEN (base.\"expect\"=base.\"got\") THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: year(@2000-01-01 00:00) == 2000',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Received: ',CAST(base.\"got\" AS varchar))) END as \"calc\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:31.805Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:31.870Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › minute implied truncated range

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Cannot do time truncation on type 'sql native'
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.minute}
      |                                                                      ^
    line 6: Cannot compare a timestamp to a date
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.minute}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: @2021-02-24 03:05:06 ? t_timestamp.minute to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › day implied truncated range

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Cannot do time truncation on type 'sql native'
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.day}
      |                                                                      ^
    line 6: Cannot compare a timestamp to a date
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.day}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: @2021-02-24 03:05:06 ? t_timestamp.day to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › year implied truncated range

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Cannot do time truncation on type 'sql native'
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.year}
      |                                                                      ^
    line 6: Cannot compare a timestamp to a date
      |             extend: {dimension: expectTrue is @2021-02-24 03:05:06 ? t_timestamp.year}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: @2021-02-24 03:05:06 ? t_timestamp.year to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › timestamp in literal minute

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02-24 03:05}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 03:05 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › timestamp in literal day

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02-24}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02-24 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › date in literal month

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a1ac5407-fd76-453c-8fde-3236df31504e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:32.669Z",
      "Database": "dev",
      "Duration": 53611369,
      "Error": "Query #2 failed with ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "2c17b787-74a6-40ae-8204-502739c07979",
      "RedshiftPid": 1073987708,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:32.760Z",
          "Duration": 53611369,
          "HasResultSet": false,
          "Id": "2c17b787-74a6-40ae-8204-502739c07979:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:33.237Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:32.763Z",
          "Duration": -1,
          "Error": "ERROR: function concat(\"unknown\", text, \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "2c17b787-74a6-40ae-8204-502739c07979:2",
          "QueryString": "SELECT \n   CASE WHEN ((base.\"t_date\">=DATE '2021-02-01') and (base.\"t_date\"<DATE '2021-03-01')) THEN '=' ELSE (CONCAT('sqlEq failed',CASE WHEN 10 = 0 THEN '' ELSE CHR(10) END,'    Expected: t_date ? @2021-02 to be true')) END as \"calc\"\nFROM (SELECT DATE '2021-02-24' as \"t_date\", TIMESTAMP '2021-02-24 03:05:06' as \"t_timestamp\" ) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:33.237Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:33.302Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › timestamp in literal month

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021-02}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021-02 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › granular time range checks › timestamp in literal year

    Error(s) compiling model:
    FILE: internal://internal.malloy
    line 6: Unsupported SQL native type 'timestamp without time zone' not allowed in expression
      |             extend: {dimension: expectTrue is t_timestamp ? @2021}
      |                                               ^
    line 7: Case insensitivity for function names is deprecated, use 'chr' instead
      |             select: calc is pick '=' when expectTrue else concat('sqlEq failed', CHR(10), '    Expected: t_timestamp ? @2021 to be true')
      |                                                                                  ^

      530 |   ) {
      531 |     const ret = await connection.fetchSchemaForTables(toFetch, opts);
    > 532 |     for (const req of Object.keys(toFetch)) {
          |                ^
      533 |       if (ret.schemas[req] === undefined && ret.errors[req] === undefined) {
      534 |         throw new Error(
      535 |           `Schema fetch error for ${connection.name}, no response for ${req} from ${connection.dialectName}`

      at _callee$ (packages/malloy/src/malloy.ts:532:16)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● redshift date and time › dependant join dialect fragments

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 5: Cannot do time truncation on type 'sql native'
      |         group_by: t_month is joined.t_timestamp.month
      |                              ^

      482 |         group_by: t_month is joined.t_timestamp.month
      483 |       }
    > 484 |     `).malloyResultMatches(runtime, {t_month: new Date('2021-02-01')});
          |        ^
      485 |   });
      486 |
      487 |   describe('timezone set correctly', () => {

      at Object.<anonymous> (test/src/databases/all/time.spec.ts:484:8)

  ● redshift date and time › timezone set correctly › timezone set in view inside source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4026d63a-5fb4-4d53-bc24-6eb569d3e7fb",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:37.112Z",
      "Database": "dev",
      "Duration": 44442082,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 272",
      "HasResultSet": false,
      "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558",
      "RedshiftPid": 1073897584,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:37.222Z",
          "Duration": 44442082,
          "HasResultSet": false,
          "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:37.689Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:37.225Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 272",
          "HasResultSet": false,
          "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMP '2021-02-24 03:05:06' as \"default_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"la_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"la_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"default_time__0\" as \"default_time\",\n  (ARRAY_AGG(\"la_query__0\") FILTER (WHERE group_set=0 AND \"la_query__0\" IS NOT NULL))[1] as \"la_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:37.689Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:37.754Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMP '2021-02-24 03:05:06' as "default_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "la_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "la_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "default_time__0" as "default_time",
      (ARRAY_AGG("la_query__0") FILTER (WHERE group_set=0 AND "la_query__0" IS NOT NULL))[1] as "la_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4026d63a-5fb4-4d53-bc24-6eb569d3e7fb",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:37.112Z",
      "Database": "dev",
      "Duration": 44442082,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 272",
      "HasResultSet": false,
      "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558",
      "RedshiftPid": 1073897584,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:37.222Z",
          "Duration": 44442082,
          "HasResultSet": false,
          "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:37.689Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:37.225Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 272",
          "HasResultSet": false,
          "Id": "c15ee872-5247-4350-be9a-0ce5e5b4b558:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMP '2021-02-24 03:05:06' as \"default_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"la_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"la_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"default_time__0\" as \"default_time\",\n  (ARRAY_AGG(\"la_query__0\") FILTER (WHERE group_set=0 AND \"la_query__0\" IS NOT NULL))[1] as \"la_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:37.689Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:37.754Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at runQuery (test/src/util/index.ts:192:11)
      at async Object.<anonymous> (test/src/databases/all/time.spec.ts:510:13)

  ● redshift date and time › timezone set correctly › timezone set in query using source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2dc38943-6128-4994-9716-598eaeff7041",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:38.553Z",
      "Database": "dev",
      "Duration": 44415366,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 275",
      "HasResultSet": false,
      "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f",
      "RedshiftPid": 1073922161,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:38.640Z",
          "Duration": 44415366,
          "HasResultSet": false,
          "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:39.076Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:38.643Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 275",
          "HasResultSet": false,
          "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"default_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMP '2021-02-24 03:05:06' as \"undef_time\"\n      ) as __x)  ORDER BY  TIMESTAMP '2021-02-24 03:05:06' desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"undef_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"default_time__0\" as \"default_time\",\n  (ARRAY_AGG(\"undef_query__0\") FILTER (WHERE group_set=0 AND \"undef_query__0\" IS NOT NULL))[1] as \"undef_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:39.076Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:39.142Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "default_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMP '2021-02-24 03:05:06' as "undef_time"
          ) as __x)  ORDER BY  TIMESTAMP '2021-02-24 03:05:06' desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "undef_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "default_time__0" as "default_time",
      (ARRAY_AGG("undef_query__0") FILTER (WHERE group_set=0 AND "undef_query__0" IS NOT NULL))[1] as "undef_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2dc38943-6128-4994-9716-598eaeff7041",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:38.553Z",
      "Database": "dev",
      "Duration": 44415366,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 275",
      "HasResultSet": false,
      "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f",
      "RedshiftPid": 1073922161,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:38.640Z",
          "Duration": 44415366,
          "HasResultSet": false,
          "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:39.076Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:38.643Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 275",
          "HasResultSet": false,
          "Id": "e62555bd-d40c-4294-8f1e-e80e061fe00f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"default_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMP '2021-02-24 03:05:06' as \"undef_time\"\n      ) as __x)  ORDER BY  TIMESTAMP '2021-02-24 03:05:06' desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"undef_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"default_time__0\" as \"default_time\",\n  (ARRAY_AGG(\"undef_query__0\") FILTER (WHERE group_set=0 AND \"undef_query__0\" IS NOT NULL))[1] as \"undef_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:39.076Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:39.142Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at runQuery (test/src/util/index.ts:192:11)
      at async Object.<anonymous> (test/src/databases/all/time.spec.ts:539:13)

  ● redshift date and time › timezone set correctly › multiple timezones

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c8a7810d-f9d6-4f0a-91f8-e52276bddd34",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:40.000Z",
      "Database": "dev",
      "Duration": 53567596,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 297",
      "HasResultSet": false,
      "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a",
      "RedshiftPid": 1073832054,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:40.108Z",
          "Duration": 53567596,
          "HasResultSet": false,
          "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:40.573Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:40.111Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 297",
          "HasResultSet": false,
          "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMPTZ '2021-02-24 03:05:06 America/New_York'::TIMESTAMP as \"ny_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"la_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"la_query__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP as \"mex_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"mex_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"ny_time__0\" as \"ny_time\",\n  (ARRAY_AGG(\"la_query__0\") FILTER (WHERE group_set=0 AND \"la_query__0\" IS NOT NULL))[1] as \"la_query\",\n  (ARRAY_AGG(\"mex_query__0\") FILTER (WHERE group_set=0 AND \"mex_query__0\" IS NOT NULL))[1] as \"mex_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:40.573Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:40.639Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        TIMESTAMPTZ '2021-02-24 03:05:06 America/New_York'::TIMESTAMP as "ny_time__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as "la_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "la_query__0",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP as "mex_time"
          ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "mex_query__0"
      FROM (SELECT 1 as one) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "ny_time__0" as "ny_time",
      (ARRAY_AGG("la_query__0") FILTER (WHERE group_set=0 AND "la_query__0" IS NOT NULL))[1] as "la_query",
      (ARRAY_AGG("mex_query__0") FILTER (WHERE group_set=0 AND "mex_query__0" IS NOT NULL))[1] as "mex_query"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c8a7810d-f9d6-4f0a-91f8-e52276bddd34",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:35:40.000Z",
      "Database": "dev",
      "Duration": 53567596,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 297",
      "HasResultSet": false,
      "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a",
      "RedshiftPid": 1073832054,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:35:40.108Z",
          "Duration": 53567596,
          "HasResultSet": false,
          "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:35:40.573Z"
        },
        {
          "CreatedAt": "2025-02-28T02:35:40.111Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 297",
          "HasResultSet": false,
          "Id": "da90badd-a6e6-457b-a160-ca4d0d38359a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    TIMESTAMPTZ '2021-02-24 03:05:06 America/New_York'::TIMESTAMP as \"ny_time__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP as \"la_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Los_Angeles'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"la_query__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP as \"mex_time\"\n      ) as __x)  ORDER BY  TIMESTAMPTZ '2021-02-24 03:05:06 America/Mexico_City'::TIMESTAMP desc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"mex_query__0\"\n  FROM (SELECT 1 as one) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"ny_time__0\" as \"ny_time\",\n  (ARRAY_AGG(\"la_query__0\") FILTER (WHERE group_set=0 AND \"la_query__0\" IS NOT NULL))[1] as \"la_query\",\n  (ARRAY_AGG(\"mex_query__0\") FILTER (WHERE group_set=0 AND \"mex_query__0\" IS NOT NULL))[1] as \"mex_query\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:35:40.573Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:35:40.639Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at runQuery (test/src/util/index.ts:192:11)
      at async Object.<anonymous> (test/src/databases/all/time.spec.ts:558:24)

FAIL test/src/databases/all/compound-atomic.spec.ts (67.385 s)
  ● compound atomic datatypes redshift › simple arrays › array literal dialect function

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 2: Invalid SQL, Error fetching SELECT schema for 
         DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;
        CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS 
              SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS "evens"
            ;
        SELECT "column" as "column_name", type as "data_type", null as "comment"
              FROM pg_table_def
              WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';
              : 
         Error: Batch error: 
        {
          "$metadata": {
            "httpStatusCode": 200,
            "requestId": "f5e4552d-ec16-4b0b-9f49-c32615a86ce1",
            "attempts": 1,
            "totalRetryDelay": 0
          },
          "CreatedAt": "2025-02-28T02:36:05.396Z",
          "Database": "dev",
          "Duration": 88746591,
          "Error": "Query #3 failed with ERROR: function jsonb_build_array(integer, integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "b5414b39-cf18-49ff-a7b6-34a023382270",
          "RedshiftPid": 1073840353,
          "RedshiftQueryId": 0,
          "ResultFormat": "json",
          "ResultRows": -1,
          "ResultSize": -1,
          "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
          "Status": "FAILED",
          "SubStatements": [
            {
              "CreatedAt": "2025-02-28T02:36:05.491Z",
              "Duration": 42661369,
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:1",
              "QueryString": "SET search_path TO malloytest;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.494Z",
              "Duration": 46085222,
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:2",
              "QueryString": "DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.497Z",
              "Duration": -1,
              "Error": "ERROR: function jsonb_build_array(integer, integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:3",
              "QueryString": "CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS \n      SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS \"evens\"\n    ;",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "FAILED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.500Z",
              "Duration": -1,
              "Error": "Connection or an prior query failed.",
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:4",
              "QueryString": "SELECT \"column\" as \"column_name\", type as \"data_type\", null as \"comment\"\n      FROM pg_table_def\n      WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';\n      ",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "ABORTED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            }
          ],
          "UpdatedAt": "2025-02-28T02:36:06.146Z",
          "WorkgroupName": "default-workgroup"
        }
      |           run: redshift.sql("""
      |                             ^

       98 |       test('array literal dialect function', async () => {
       99 |         await expect(`
    > 100 |           run: ${evens}`).malloyResultMatches(runtime, {
          |                           ^
      101 |           evens: evensObj,
      102 |         });
      103 |       });

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:100:27)

  ● compound atomic datatypes redshift › simple arrays › select array

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 3: Invalid SQL, Error fetching SELECT schema for 
         DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;
        CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS 
              SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS "evens"
            ;
        SELECT "column" as "column_name", type as "data_type", null as "comment"
              FROM pg_table_def
              WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';
              : 
         Error: Batch error: 
        {
          "$metadata": {
            "httpStatusCode": 200,
            "requestId": "f5e4552d-ec16-4b0b-9f49-c32615a86ce1",
            "attempts": 1,
            "totalRetryDelay": 0
          },
          "CreatedAt": "2025-02-28T02:36:05.396Z",
          "Database": "dev",
          "Duration": 88746591,
          "Error": "Query #3 failed with ERROR: function jsonb_build_array(integer, integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "b5414b39-cf18-49ff-a7b6-34a023382270",
          "RedshiftPid": 1073840353,
          "RedshiftQueryId": 0,
          "ResultFormat": "json",
          "ResultRows": -1,
          "ResultSize": -1,
          "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
          "Status": "FAILED",
          "SubStatements": [
            {
              "CreatedAt": "2025-02-28T02:36:05.491Z",
              "Duration": 42661369,
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:1",
              "QueryString": "SET search_path TO malloytest;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.494Z",
              "Duration": 46085222,
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:2",
              "QueryString": "DROP TABLE IF EXISTS tmpd924235fc7004826911f0e4412c23969;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.497Z",
              "Duration": -1,
              "Error": "ERROR: function jsonb_build_array(integer, integer, integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:3",
              "QueryString": "CREATE TEMP TABLE tmpd924235fc7004826911f0e4412c23969 AS \n      SELECT JSONB_BUILD_ARRAY(2,4,6,8) AS \"evens\"\n    ;",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "FAILED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:05.500Z",
              "Duration": -1,
              "Error": "Connection or an prior query failed.",
              "HasResultSet": false,
              "Id": "b5414b39-cf18-49ff-a7b6-34a023382270:4",
              "QueryString": "SELECT \"column\" as \"column_name\", type as \"data_type\", null as \"comment\"\n      FROM pg_table_def\n      WHERE tablename = 'tmpd924235fc7004826911f0e4412c23969';\n      ",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "ABORTED",
              "UpdatedAt": "2025-02-28T02:36:06.071Z"
            }
          ],
          "UpdatedAt": "2025-02-28T02:36:06.146Z",
          "WorkgroupName": "default-workgroup"
        }
      |           run: redshift.sql("""
      |                             ^
    line 5: 'evens' is not defined
      |     """)->{select: nn is evens}
      |                          ^

      106 |           # test.verbose
      107 |           run: ${evens}->{select: nn is evens}
    > 108 |           `).malloyResultMatches(runtime, {nn: evensObj});
          |              ^
      109 |       });
      110 |       test.when(canReadCompoundSchema)(
      111 |         'schema read allows array-un-nest on each',

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:108:14)

  ● compound atomic datatypes redshift › simple arrays › array can be passed to !function

    expect(received).not.toEqual(expected) // deep equality

    Expected: not "Dialect 'redshift' missing array length function in nameOfArrayLenFunction"

      134 |         const missing = `Dialect '${dialect}' missing array length function in nameOfArrayLenFunction`;
      135 |         const fn = nameOfArrayLenFunction[dialect] ?? missing;
    > 136 |         expect(fn).not.toEqual(missing);
          |                        ^
      137 |         await expect(
      138 |           `run: ${evens}->{ select: nby2 is ${fn}!number(evens); } `
      139 |         ).malloyResultMatches(runtime, {nby2: evensObj.length});

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:136:24)

  ● compound atomic datatypes redshift › simple arrays › array.each in source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bd92f1df-27fb-4663-8b24-9513f7ca8681",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:08.553Z",
      "Database": "dev",
      "Duration": 51608316,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
      "HasResultSet": false,
      "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c",
      "RedshiftPid": 1073881334,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:08.656Z",
          "Duration": 51608316,
          "HasResultSet": false,
          "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:09.118Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:08.659Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
          "HasResultSet": false,
          "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as \"die_roll\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:09.118Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:09.182Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as "die_roll"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "bd92f1df-27fb-4663-8b24-9513f7ca8681",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:08.553Z",
      "Database": "dev",
      "Duration": 51608316,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
      "HasResultSet": false,
      "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c",
      "RedshiftPid": 1073881334,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:08.656Z",
          "Duration": 51608316,
          "HasResultSet": false,
          "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:09.118Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:08.659Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
          "HasResultSet": false,
          "Id": "8d20290a-90aa-4b8c-b40b-add548b8273c:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as \"die_roll\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:09.118Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:09.182Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:146:12)

  ● compound atomic datatypes redshift › simple arrays › array.each in extend block

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1e6dd171-e3c7-403a-bb56-1c25c8d4fc9f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:10.021Z",
      "Database": "dev",
      "Duration": 43811797,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
      "HasResultSet": false,
      "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646",
      "RedshiftPid": 1073873121,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:10.127Z",
          "Duration": 43811797,
          "HasResultSet": false,
          "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:10.560Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:10.130Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
          "HasResultSet": false,
          "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as \"die_roll\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:10.560Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:10.625Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as "die_roll"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1e6dd171-e3c7-403a-bb56-1c25c8d4fc9f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:10.021Z",
      "Database": "dev",
      "Duration": 43811797,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
      "HasResultSet": false,
      "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646",
      "RedshiftPid": 1073873121,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:10.127Z",
          "Duration": 43811797,
          "HasResultSet": false,
          "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:10.560Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:10.130Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 135",
          "HasResultSet": false,
          "Id": "02c2745b-57ee-4efc-b59f-3f5e26ed6646:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(d4_0,'value')::double precision) as \"die_roll\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3,4))) as v))) as d4_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:10.560Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:10.625Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:159:12)

  ● compound atomic datatypes redshift › simple arrays › array stored field with special chars in name

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9547dd6f-56ce-4985-86bf-7779086e3a8f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:11.440Z",
      "Database": "dev",
      "Duration": 45098951,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 223",
      "HasResultSet": false,
      "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab",
      "RedshiftPid": 1073791217,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:11.539Z",
          "Duration": 45098951,
          "HasResultSet": false,
          "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:11.967Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:11.542Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 223",
          "HasResultSet": false,
          "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY(1) as \"_'_\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   (JSONB_EXTRACT_PATH_TEXT(__o___0,'value')::double precision) as \"num\"\nFROM __stage0 as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(base.\"_'_\")) as v))) as __o___0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:11.967Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:12.032Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY(1) as "_'_"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       (JSONB_EXTRACT_PATH_TEXT(__o___0,'value')::double precision) as "num"
    FROM __stage0 as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(base."_'_")) as v))) as __o___0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9547dd6f-56ce-4985-86bf-7779086e3a8f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:11.440Z",
      "Database": "dev",
      "Duration": 45098951,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 223",
      "HasResultSet": false,
      "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab",
      "RedshiftPid": 1073791217,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:11.539Z",
          "Duration": 45098951,
          "HasResultSet": false,
          "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:11.967Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:11.542Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 223",
          "HasResultSet": false,
          "Id": "0e278e3e-c2d5-4c29-a2fc-62adfedbadab:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY(1) as \"_'_\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   (JSONB_EXTRACT_PATH_TEXT(__o___0,'value')::double precision) as \"num\"\nFROM __stage0 as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(base.\"_'_\")) as v))) as __o___0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:11.967Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:12.032Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:196:37)

  ● compound atomic datatypes redshift › simple arrays › bare array of array

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8d09bd51-852f-4267-9e34-97e3784f1fb6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:12.865Z",
      "Database": "dev",
      "Duration": 42944848,
      "Error": "Query #2 failed with ERROR: function jsonb_build_array(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b",
      "RedshiftPid": 1073881319,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:12.948Z",
          "Duration": 42944848,
          "HasResultSet": false,
          "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:13.364Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:12.952Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_array(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b:2",
          "QueryString": "SELECT \n   JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))) as \"aoa\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:13.364Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:13.440Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))) as "aoa"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8d09bd51-852f-4267-9e34-97e3784f1fb6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:12.865Z",
      "Database": "dev",
      "Duration": 42944848,
      "Error": "Query #2 failed with ERROR: function jsonb_build_array(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b",
      "RedshiftPid": 1073881319,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:12.948Z",
          "Duration": 42944848,
          "HasResultSet": false,
          "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:13.364Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:12.952Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_array(integer, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "20934714-b8a5-4f6c-b3b8-b5e94842914b:2",
          "QueryString": "SELECT \n   JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))) as \"aoa\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:13.364Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:13.440Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:247:12)

  ● compound atomic datatypes redshift › simple arrays › each.each array of array

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d308c772-3c5a-4329-9d2f-8dd8dd3eebfc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:14.248Z",
      "Database": "dev",
      "Duration": 52733904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 131",
      "HasResultSet": false,
      "Id": "be43daba-860f-4296-b98b-4aac03607f14",
      "RedshiftPid": 1073832175,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:14.332Z",
          "Duration": 52733904,
          "HasResultSet": false,
          "Id": "be43daba-860f-4296-b98b-4aac03607f14:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:14.783Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:14.335Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 131",
          "HasResultSet": false,
          "Id": "be43daba-860f-4296-b98b-4aac03607f14:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(each_0,'value')::double precision as \"each\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))))) as v))) as aoa_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(aoa_0,'value'))) as v))) as each_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:14.783Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:14.848Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(each_0,'value')::double precision as "each"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))))) as v))) as aoa_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(aoa_0,'value'))) as v))) as each_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d308c772-3c5a-4329-9d2f-8dd8dd3eebfc",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:14.248Z",
      "Database": "dev",
      "Duration": 52733904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 131",
      "HasResultSet": false,
      "Id": "be43daba-860f-4296-b98b-4aac03607f14",
      "RedshiftPid": 1073832175,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:14.332Z",
          "Duration": 52733904,
          "HasResultSet": false,
          "Id": "be43daba-860f-4296-b98b-4aac03607f14:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:14.783Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:14.335Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 131",
          "HasResultSet": false,
          "Id": "be43daba-860f-4296-b98b-4aac03607f14:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(each_0,'value')::double precision as \"each\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY((JSONB_BUILD_ARRAY(1,2))))) as v))) as aoa_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(aoa_0,'value'))) as v))) as each_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:14.783Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:14.848Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:252:12)

  ● compound atomic datatypes redshift › record › record literal object

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "31b9e547-1eac-4ecb-84d3-4af0d8d24214",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:17.076Z",
      "Database": "dev",
      "Duration": 44120130,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766",
      "RedshiftPid": 1073807609,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:17.171Z",
          "Duration": 44120130,
          "HasResultSet": false,
          "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:17.615Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:17.174Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766:2",
          "QueryString": "SELECT \n   JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\nFROM (select 0 as o) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:17.615Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:17.680Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
    FROM (select 0 as o) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "31b9e547-1eac-4ecb-84d3-4af0d8d24214",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:17.076Z",
      "Database": "dev",
      "Duration": 44120130,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766",
      "RedshiftPid": 1073807609,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:17.171Z",
          "Duration": 44120130,
          "HasResultSet": false,
          "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:17.615Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:17.174Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "8c6d5006-e484-40be-b0e2-80bfbd241766:2",
          "QueryString": "SELECT \n   JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\nFROM (select 0 as o) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:17.615Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:17.680Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:269:12)

  ● compound atomic datatypes redshift › record › record stored in field with special chars in name

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "0503001e-f2b5-4a13-8513-70d21fa66de7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:24.220Z",
      "Database": "dev",
      "Duration": 44098501,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5428c2ba-5ffc-4ec8-b5ee-d4e164456f80",
      "RedshiftPid": 1073783023,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:24.305Z",
          "Duration": 44098501,
          "HasResultSet": false,
          "Id": "5428c2ba-5ffc-4ec8-b5ee-d4e164456f80:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:24.737Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:24.308Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5428c2ba-5ffc-4ec8-b5ee-d4e164456f80:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('rnum',1) as \"_'_\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"_'_\",'rnum')::double precision as \"num\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:24.737Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:24.803Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● compound atomic datatypes redshift › record › simple record.property access

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "87a42fa7-5228-421a-86f2-33b53cb1b8a7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:27.187Z",
      "Database": "dev",
      "Duration": 53806049,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b",
      "RedshiftPid": 1073955053,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:27.283Z",
          "Duration": 53806049,
          "HasResultSet": false,
          "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:27.722Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:27.286Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"sizes\",'s')::double precision as \"small\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:27.722Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:27.786Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."sizes",'s')::double precision as "small"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "87a42fa7-5228-421a-86f2-33b53cb1b8a7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:27.187Z",
      "Database": "dev",
      "Duration": 53806049,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b",
      "RedshiftPid": 1073955053,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:27.283Z",
          "Duration": 53806049,
          "HasResultSet": false,
          "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:27.722Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:27.286Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "ad7dd206-c9e9-4874-990b-163e4b12701b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"sizes\",'s')::double precision as \"small\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:27.722Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:27.786Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:319:59)

  ● compound atomic datatypes redshift › record › nested data looks like a record

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5c26257c-f5e9-42fe-a682-2c1bff1d4770",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:30.179Z",
      "Database": "dev",
      "Duration": 53240564,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 28, column 51\n  Position: 780",
      "HasResultSet": false,
      "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693",
      "RedshiftPid": 1073766625,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:30.283Z",
          "Duration": 53240564,
          "HasResultSet": false,
          "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:30.768Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:30.287Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 28, column 51\n  Position: 780",
          "HasResultSet": false,
          "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    'one_row' as \"row__0\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END-1 as \"s__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END as \"m__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END+1 as \"x__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END+2 as \"xl__1\"\n  FROM (SELECT 1 as \"o\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\n, __stage1 AS (\n  SELECT\n    \"row__0\" as \"row\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"s__1\"::DOUBLE PRECISION as \"s\", \n      \"m__1\"::DOUBLE PRECISION as \"m\", \n      \"x__1\"::DOUBLE PRECISION as \"x\", \n      \"xl__1\"::DOUBLE PRECISION as \"xl\") as __x)) FILTER (WHERE group_set=1))[1]) as \"sizes\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"sizes\",'s')::double precision as \"small\"\nFROM __stage1 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:30.768Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:30.833Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        'one_row' as "row__0",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END-1 as "s__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END as "m__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END+1 as "x__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."o"),0)
          END+2 as "xl__1"
      FROM (SELECT 1 as "o") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    , __stage1 AS (
      SELECT
        "row__0" as "row",
        TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "s__1"::DOUBLE PRECISION as "s", 
          "m__1"::DOUBLE PRECISION as "m", 
          "x__1"::DOUBLE PRECISION as "x", 
          "xl__1"::DOUBLE PRECISION as "xl") as __x)) FILTER (WHERE group_set=1))[1]) as "sizes"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."sizes",'s')::double precision as "small"
    FROM __stage1 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5c26257c-f5e9-42fe-a682-2c1bff1d4770",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:30.179Z",
      "Database": "dev",
      "Duration": 53240564,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 28, column 51\n  Position: 780",
      "HasResultSet": false,
      "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693",
      "RedshiftPid": 1073766625,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:30.283Z",
          "Duration": 53240564,
          "HasResultSet": false,
          "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:30.768Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:30.287Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"__x)) FILTER\", at line 28, column 51\n  Position: 780",
          "HasResultSet": false,
          "Id": "94cf0d7f-096f-4b10-9378-eaec3e63b693:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    'one_row' as \"row__0\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END-1 as \"s__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END as \"m__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END+1 as \"x__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"o\"),0)\n      END+2 as \"xl__1\"\n  FROM (SELECT 1 as \"o\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\n, __stage1 AS (\n  SELECT\n    \"row__0\" as \"row\",\n    TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"s__1\"::DOUBLE PRECISION as \"s\", \n      \"m__1\"::DOUBLE PRECISION as \"m\", \n      \"x__1\"::DOUBLE PRECISION as \"x\", \n      \"xl__1\"::DOUBLE PRECISION as \"xl\") as __x)) FILTER (WHERE group_set=1))[1]) as \"sizes\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"sizes\",'s')::double precision as \"small\"\nFROM __stage1 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:30.768Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:30.833Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:335:47)

  ● compound atomic datatypes redshift › record › record can be selected

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4b3399b0-125d-43eb-9f55-643a74910181",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:31.579Z",
      "Database": "dev",
      "Duration": 44861126,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f545deb9-c2fc-4726-b028-895223e4374e",
      "RedshiftPid": 1073774838,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:31.672Z",
          "Duration": 44861126,
          "HasResultSet": false,
          "Id": "f545deb9-c2fc-4726-b028-895223e4374e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:32.103Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:31.676Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f545deb9-c2fc-4726-b028-895223e4374e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   base.\"sizes\" as \"sizes\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:32.103Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:32.169Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       base."sizes" as "sizes"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4b3399b0-125d-43eb-9f55-643a74910181",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:31.579Z",
      "Database": "dev",
      "Duration": 44861126,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f545deb9-c2fc-4726-b028-895223e4374e",
      "RedshiftPid": 1073774838,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:31.672Z",
          "Duration": 44861126,
          "HasResultSet": false,
          "Id": "f545deb9-c2fc-4726-b028-895223e4374e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:32.103Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:31.676Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f545deb9-c2fc-4726-b028-895223e4374e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   base.\"sizes\" as \"sizes\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:32.103Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:32.169Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:343:11)

  ● compound atomic datatypes redshift › record › record literal can be selected

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d1fa4903-cda8-4ca3-8dd0-af61763c57b7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:32.936Z",
      "Database": "dev",
      "Duration": 52093569,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f",
      "RedshiftPid": 1073955043,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:33.021Z",
          "Duration": 52093569,
          "HasResultSet": false,
          "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:33.447Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:33.024Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   base.\"sizes\" as \"record\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:33.447Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:33.510Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
      FROM (SELECT 0 AS O) as base
    )
    SELECT 
       base."sizes" as "record"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "d1fa4903-cda8-4ca3-8dd0-af61763c57b7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:32.936Z",
      "Database": "dev",
      "Duration": 52093569,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f",
      "RedshiftPid": 1073955043,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:33.021Z",
          "Duration": 52093569,
          "HasResultSet": false,
          "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:33.447Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:33.024Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "887b59f7-0d88-4046-91bc-99d7b946e79f:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\n  FROM (SELECT 0 AS O) as base\n)\nSELECT \n   base.\"sizes\" as \"record\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:33.447Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:33.510Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:348:12)

  ● compound atomic datatypes redshift › record › select record literal from a source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6e7b81c1-273a-4e2a-ba30-749af9d505a6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:34.309Z",
      "Database": "dev",
      "Duration": 42873221,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "297f21ad-4543-491e-b232-d24e935206f7",
      "RedshiftPid": 1073758443,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:34.401Z",
          "Duration": 42873221,
          "HasResultSet": false,
          "Id": "297f21ad-4543-491e-b232-d24e935206f7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:34.809Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:34.405Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "297f21ad-4543-491e-b232-d24e935206f7:2",
          "QueryString": "SELECT \n   JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:34.809Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:34.873Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as "sizes"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6e7b81c1-273a-4e2a-ba30-749af9d505a6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:34.309Z",
      "Database": "dev",
      "Duration": 42873221,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "297f21ad-4543-491e-b232-d24e935206f7",
      "RedshiftPid": 1073758443,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:34.401Z",
          "Duration": 42873221,
          "HasResultSet": false,
          "Id": "297f21ad-4543-491e-b232-d24e935206f7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:34.809Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:34.405Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "297f21ad-4543-491e-b232-d24e935206f7:2",
          "QueryString": "SELECT \n   JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3) as \"sizes\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:34.809Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:34.873Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:356:12)

  ● compound atomic datatypes redshift › record › computed record.property from a source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3d04577b-52a5-45aa-a072-f4e3031dbfb2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:35.652Z",
      "Database": "dev",
      "Duration": 43525490,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4",
      "RedshiftPid": 1073758439,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:35.748Z",
          "Duration": 43525490,
          "HasResultSet": false,
          "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:36.166Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:35.751Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as \"small\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:36.166Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:36.230Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as "small"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3d04577b-52a5-45aa-a072-f4e3031dbfb2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:35.652Z",
      "Database": "dev",
      "Duration": 43525490,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4",
      "RedshiftPid": 1073758439,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:35.748Z",
          "Duration": 43525490,
          "HasResultSet": false,
          "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:36.166Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:35.751Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "02df464d-e67d-4ab9-904b-7dafb50b83e4:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as \"small\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:36.166Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:36.230Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:363:12)

  ● compound atomic datatypes redshift › record › record.property from an extend block

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "38078beb-d78c-477b-a275-b4f185e0975f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:37.034Z",
      "Database": "dev",
      "Duration": 44649202,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f",
      "RedshiftPid": 1073799403,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:37.133Z",
          "Duration": 44649202,
          "HasResultSet": false,
          "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:37.571Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:37.137Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as \"small\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:37.571Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:37.637Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as "small"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "38078beb-d78c-477b-a275-b4f185e0975f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:37.034Z",
      "Database": "dev",
      "Duration": 44649202,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f",
      "RedshiftPid": 1073799403,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:37.133Z",
          "Duration": 44649202,
          "HasResultSet": false,
          "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:37.571Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:37.137Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer, \"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "30ae37a6-5478-4ffa-89a7-c5b0fb9a2a7f:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('s',0, 'm',1, 'l',2, 'xl',3),'s')::double precision as \"small\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:37.571Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:37.637Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:371:12)

  ● compound atomic datatypes redshift › record › simple each on array property inside record

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "42417dc3-6e1e-4a16-bd5f-9d1634e58c9a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:38.381Z",
      "Database": "dev",
      "Duration": 53514188,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 286",
      "HasResultSet": false,
      "Id": "5103683f-6b11-48c1-9795-17a51346148d",
      "RedshiftPid": 1073832164,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:38.471Z",
          "Duration": 53514188,
          "HasResultSet": false,
          "Id": "5103683f-6b11-48c1-9795-17a51346148d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:38.900Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:38.475Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 286",
          "HasResultSet": false,
          "Id": "5103683f-6b11-48c1-9795-17a51346148d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))) as \"nums\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision as \"odd\"\nFROM __stage0 as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(base.\"nums\",'odds'))) as v))) as odds_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:38.900Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:38.966Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))) as "nums"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision as "odd"
    FROM __stage0 as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(base."nums",'odds'))) as v))) as odds_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "42417dc3-6e1e-4a16-bd5f-9d1634e58c9a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:38.381Z",
      "Database": "dev",
      "Duration": 53514188,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 286",
      "HasResultSet": false,
      "Id": "5103683f-6b11-48c1-9795-17a51346148d",
      "RedshiftPid": 1073832164,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:38.471Z",
          "Duration": 53514188,
          "HasResultSet": false,
          "Id": "5103683f-6b11-48c1-9795-17a51346148d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:38.900Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:38.475Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 9, column 23\n  Position: 286",
          "HasResultSet": false,
          "Id": "5103683f-6b11-48c1-9795-17a51346148d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))) as \"nums\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision as \"odd\"\nFROM __stage0 as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(base.\"nums\",'odds'))) as v))) as odds_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:38.900Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:38.966Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:377:12)

  ● compound atomic datatypes redshift › record › each on array property inside record from source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5dde5b7d-ebb1-4b17-9898-0c0a0d3b78db",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:39.714Z",
      "Database": "dev",
      "Duration": 44189522,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 132",
      "HasResultSet": false,
      "Id": "f3088615-3b50-444c-bff8-882d8d118edb",
      "RedshiftPid": 1073783033,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:39.796Z",
          "Duration": 44189522,
          "HasResultSet": false,
          "Id": "f3088615-3b50-444c-bff8-882d8d118edb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:40.229Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:39.800Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 132",
          "HasResultSet": false,
          "Id": "f3088615-3b50-444c-bff8-882d8d118edb:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision) as \"odd\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))),'odds'))) as v))) as odds_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:40.229Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:40.294Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision) as "odd"
    FROM (SELECT 0 as z) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))),'odds'))) as v))) as odds_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5dde5b7d-ebb1-4b17-9898-0c0a0d3b78db",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:39.714Z",
      "Database": "dev",
      "Duration": 44189522,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 132",
      "HasResultSet": false,
      "Id": "f3088615-3b50-444c-bff8-882d8d118edb",
      "RedshiftPid": 1073783033,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:39.796Z",
          "Duration": 44189522,
          "HasResultSet": false,
          "Id": "f3088615-3b50-444c-bff8-882d8d118edb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:40.229Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:39.800Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 4, column 23\n  Position: 132",
          "HasResultSet": false,
          "Id": "f3088615-3b50-444c-bff8-882d8d118edb:2",
          "QueryString": "SELECT \n   (JSONB_EXTRACT_PATH_TEXT(odds_0,'value')::double precision) as \"odd\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('odds',(JSONB_BUILD_ARRAY(1,3)), 'evens',(JSONB_BUILD_ARRAY(2,4))),'odds'))) as v))) as odds_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:40.229Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:40.294Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:383:12)

  ● compound atomic datatypes redshift › record › record with a record property

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f40e9ed1-0a7b-4a84-bd66-9dc6dfaa8ab8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:41.174Z",
      "Database": "dev",
      "Duration": 44043495,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3",
      "RedshiftPid": 1073955062,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:41.271Z",
          "Duration": 44043495,
          "HasResultSet": false,
          "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:41.703Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:41.275Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))) as \"rec\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"rec\",'a') as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base.\"rec\",'bc'),'b') as \"b\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base.\"rec\",'bc'),'c') as \"c\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:41.703Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:41.769Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))) as "rec"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(base."rec",'a') as "a",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base."rec",'bc'),'b') as "b",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base."rec",'bc'),'c') as "c"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f40e9ed1-0a7b-4a84-bd66-9dc6dfaa8ab8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:41.174Z",
      "Database": "dev",
      "Duration": 44043495,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3",
      "RedshiftPid": 1073955062,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:41.271Z",
          "Duration": 44043495,
          "HasResultSet": false,
          "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:41.703Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:41.275Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "8fc8be3a-430a-43d7-9f3e-7da1f3141be3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))) as \"rec\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(base.\"rec\",'a') as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base.\"rec\",'bc'),'b') as \"b\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(base.\"rec\",'bc'),'c') as \"c\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:41.703Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:41.769Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:390:12)

  ● compound atomic datatypes redshift › record › record in source with a record property

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e04647a0-a290-45d6-904e-5ec895538d4e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:42.527Z",
      "Database": "dev",
      "Duration": 44017458,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "778f937b-614f-40db-bbb6-534913d2281f",
      "RedshiftPid": 1073914104,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:42.627Z",
          "Duration": 44017458,
          "HasResultSet": false,
          "Id": "778f937b-614f-40db-bbb6-534913d2281f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:43.052Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:42.630Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "778f937b-614f-40db-bbb6-534913d2281f:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'a') as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') as \"b\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'c') as \"c\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:43.052Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:43.117Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'a') as "a",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') as "b",
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'c') as "c"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e04647a0-a290-45d6-904e-5ec895538d4e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:42.527Z",
      "Database": "dev",
      "Duration": 44017458,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "778f937b-614f-40db-bbb6-534913d2281f",
      "RedshiftPid": 1073914104,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:42.627Z",
          "Duration": 44017458,
          "HasResultSet": false,
          "Id": "778f937b-614f-40db-bbb6-534913d2281f:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:43.052Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:42.630Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "778f937b-614f-40db-bbb6-534913d2281f:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'a') as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') as \"b\",\n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'c') as \"c\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:43.052Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:43.117Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:396:12)

  ● compound atomic datatypes redshift › record › record dref in source with a record property

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8ffeffee-5db3-42ed-ba2f-3c6ba1711e74",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:43.897Z",
      "Database": "dev",
      "Duration": 43867400,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082",
      "RedshiftPid": 1073971430,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:43.982Z",
          "Duration": 43867400,
          "HasResultSet": false,
          "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:44.399Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:43.985Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082:2",
          "QueryString": "SELECT \n   CASE WHEN true THEN JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') ELSE 'b' END as \"b\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:44.399Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:44.464Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       CASE WHEN true THEN JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') ELSE 'b' END as "b"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "8ffeffee-5db3-42ed-ba2f-3c6ba1711e74",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:43.897Z",
      "Database": "dev",
      "Duration": 43867400,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082",
      "RedshiftPid": 1073971430,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:43.982Z",
          "Duration": 43867400,
          "HasResultSet": false,
          "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:44.399Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:43.985Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\", \"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "cbed341c-0455-4bbf-9a6c-607ce1749082:2",
          "QueryString": "SELECT \n   CASE WHEN true THEN JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(JSONB_BUILD_OBJECT('a','a', 'bc',(JSONB_BUILD_OBJECT('b','b', 'c','c'))),'bc'),'b') ELSE 'b' END as \"b\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:44.399Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:44.464Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:402:12)

  ● compound atomic datatypes redshift › repeated record › repeated record from nest

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "48fa65da-5cb7-4825-88ac-fe9bf1343cd0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:46.818Z",
      "Database": "dev",
      "Duration": 44429206,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 212",
      "HasResultSet": false,
      "Id": "650874f5-46e3-4707-b1ca-199800f4786d",
      "RedshiftPid": 1073889534,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:46.915Z",
          "Duration": 44429206,
          "HasResultSet": false,
          "Id": "650874f5-46e3-4707-b1ca-199800f4786d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:47.326Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:46.919Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 212",
          "HasResultSet": false,
          "Id": "650874f5-46e3-4707-b1ca-199800f4786d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      base.\"a\"::DOUBLE PRECISION as \"a\", \n      base.\"b\"::DOUBLE PRECISION as \"b\"\n      ) as __x)  ORDER BY  base.\"a\" asc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"ab__0\"\n  FROM (\n                SELECT\n                  10 as \"a\",\n                  11 as \"b\"\n                UNION ALL SELECT 20 , 21\n              ) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1\n)\n, __stage1 AS (\n  SELECT\n    (ARRAY_AGG(\"ab__0\") FILTER (WHERE group_set=0 AND \"ab__0\" IS NOT NULL))[1] as \"ab\"\n  FROM __stage0\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as \"b\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"ab\") as ab_0 ON true\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:47.326Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:47.392Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          base."a"::DOUBLE PRECISION as "a", 
          base."b"::DOUBLE PRECISION as "b"
          ) as __x)  ORDER BY  base."a" asc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as "ab__0"
      FROM (
                    SELECT
                      10 as "a",
                      11 as "b"
                    UNION ALL SELECT 20 , 21
                  ) as base
      CROSS JOIN GENERATE_SERIES(0,0,1) as group_set
      GROUP BY 1
    )
    , __stage1 AS (
      SELECT
        (ARRAY_AGG("ab__0") FILTER (WHERE group_set=0 AND "ab__0" IS NOT NULL))[1] as "ab"
      FROM __stage0
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as "b"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."ab") as ab_0 ON true
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "48fa65da-5cb7-4825-88ac-fe9bf1343cd0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:46.818Z",
      "Database": "dev",
      "Duration": 44429206,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 212",
      "HasResultSet": false,
      "Id": "650874f5-46e3-4707-b1ca-199800f4786d",
      "RedshiftPid": 1073889534,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:46.915Z",
          "Duration": 44429206,
          "HasResultSet": false,
          "Id": "650874f5-46e3-4707-b1ca-199800f4786d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:47.326Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:46.919Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 7, column 18\n  Position: 212",
          "HasResultSet": false,
          "Id": "650874f5-46e3-4707-b1ca-199800f4786d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      base.\"a\"::DOUBLE PRECISION as \"a\", \n      base.\"b\"::DOUBLE PRECISION as \"b\"\n      ) as __x)  ORDER BY  base.\"a\" asc NULLS LAST ) FILTER (WHERE group_set=0))),'[]'::JSONB) as \"ab__0\"\n  FROM (\n                SELECT\n                  10 as \"a\",\n                  11 as \"b\"\n                UNION ALL SELECT 20 , 21\n              ) as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  GROUP BY 1\n)\n, __stage1 AS (\n  SELECT\n    (ARRAY_AGG(\"ab__0\") FILTER (WHERE group_set=0 AND \"ab__0\" IS NOT NULL))[1] as \"ab\"\n  FROM __stage0\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as \"b\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"ab\") as ab_0 ON true\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:47.326Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:47.392Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:443:12)

  ● compound atomic datatypes redshift › repeated record › select repeated record from literal dialect functions

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 2: Invalid SQL, Error fetching SELECT schema for 
         DROP TABLE IF EXISTS tmp4f50b91e00e846c4918c85b25975a9e1;
        CREATE TEMP TABLE tmp4f50b91e00e846c4918c85b25975a9e1 AS  SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS "ab" ;
        SELECT "column" as "column_name", type as "data_type", null as "comment"
              FROM pg_table_def
              WHERE tablename = 'tmp4f50b91e00e846c4918c85b25975a9e1';
              : 
         Error: Batch error: 
        {
          "$metadata": {
            "httpStatusCode": 200,
            "requestId": "00b66cdb-1f1a-4e3c-a10c-7727815fe0bd",
            "attempts": 1,
            "totalRetryDelay": 0
          },
          "CreatedAt": "2025-02-28T02:36:48.151Z",
          "Database": "dev",
          "Duration": 97042444,
          "Error": "Query #3 failed with ERROR: function jsonb_build_object(character varying, integer, character varying, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939",
          "RedshiftPid": 1073815782,
          "RedshiftQueryId": 0,
          "ResultFormat": "json",
          "ResultRows": -1,
          "ResultSize": -1,
          "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
          "Status": "FAILED",
          "SubStatements": [
            {
              "CreatedAt": "2025-02-28T02:36:48.233Z",
              "Duration": 52232575,
              "HasResultSet": false,
              "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939:1",
              "QueryString": "SET search_path TO malloytest;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:48.813Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:48.236Z",
              "Duration": 44809869,
              "HasResultSet": false,
              "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939:2",
              "QueryString": "DROP TABLE IF EXISTS tmp4f50b91e00e846c4918c85b25975a9e1;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:48.813Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:48.240Z",
              "Duration": -1,
              "Error": "ERROR: function jsonb_build_object(character varying, integer, character varying, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
              "HasResultSet": false,
              "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939:3",
              "QueryString": "CREATE TEMP TABLE tmp4f50b91e00e846c4918c85b25975a9e1 AS  SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS \"ab\" ;",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "FAILED",
              "UpdatedAt": "2025-02-28T02:36:48.813Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:48.243Z",
              "Duration": -1,
              "Error": "Connection or an prior query failed.",
              "HasResultSet": false,
              "Id": "bb1901ea-f4b4-4b6a-9941-b6846eb30939:4",
              "QueryString": "SELECT \"column\" as \"column_name\", type as \"data_type\", null as \"comment\"\n      FROM pg_table_def\n      WHERE tablename = 'tmp4f50b91e00e846c4918c85b25975a9e1';\n      ",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "ABORTED",
              "UpdatedAt": "2025-02-28T02:36:48.813Z"
            }
          ],
          "UpdatedAt": "2025-02-28T02:36:48.888Z",
          "WorkgroupName": "default-workgroup"
        }
      |           run: redshift.sql(""" SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS "ab" """)
      |                             ^

      446 |         await expect(`
      447 |           run: ${conName}.sql(""" ${selectAB('ab')} """)
    > 448 |         `).malloyResultMatches(runtime, {ab: ab_eq});
          |            ^
      449 |       });
      450 |       test('repeat record from malloy literal', async () => {
      451 |         await expect(`

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:448:12)

  ● compound atomic datatypes redshift › repeated record › repeat record from malloy literal

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a1401c77-f8e3-4f9a-924b-6a84786f28d0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:49.495Z",
      "Database": "dev",
      "Duration": 45317061,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "76a27d48-cb50-4415-a31d-07d090c52b15",
      "RedshiftPid": 1073774970,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:49.582Z",
          "Duration": 45317061,
          "HasResultSet": false,
          "Id": "76a27d48-cb50-4415-a31d-07d090c52b15:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:49.986Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:49.585Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "76a27d48-cb50-4415-a31d-07d090c52b15:2",
          "QueryString": "SELECT \n   JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"ab\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:49.986Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:50.062Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "ab"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a1401c77-f8e3-4f9a-924b-6a84786f28d0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:49.495Z",
      "Database": "dev",
      "Duration": 45317061,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "76a27d48-cb50-4415-a31d-07d090c52b15",
      "RedshiftPid": 1073774970,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:49.582Z",
          "Duration": 45317061,
          "HasResultSet": false,
          "Id": "76a27d48-cb50-4415-a31d-07d090c52b15:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:49.986Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:49.585Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "76a27d48-cb50-4415-a31d-07d090c52b15:2",
          "QueryString": "SELECT \n   JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"ab\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:49.986Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:50.062Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:454:12)

  ● compound atomic datatypes redshift › repeated record › repeated record can be selected and renamed

    Could not prepare query to run: Error(s) compiling model:
    FILE: internal://internal.malloy
    line 2: Invalid SQL, Error fetching SELECT schema for 
         DROP TABLE IF EXISTS tmp19306ff2363f4429916ba73384f5ab70;
        CREATE TEMP TABLE tmp19306ff2363f4429916ba73384f5ab70 AS 
                    SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS "sqlAB"
                  ;
        SELECT "column" as "column_name", type as "data_type", null as "comment"
              FROM pg_table_def
              WHERE tablename = 'tmp19306ff2363f4429916ba73384f5ab70';
              : 
         Error: Batch error: 
        {
          "$metadata": {
            "httpStatusCode": 200,
            "requestId": "e94bdbce-11f3-4136-901f-ccd71baa5ac9",
            "attempts": 1,
            "totalRetryDelay": 0
          },
          "CreatedAt": "2025-02-28T02:36:50.834Z",
          "Database": "dev",
          "Duration": 87111090,
          "Error": "Query #3 failed with ERROR: function jsonb_build_object(character varying, integer, character varying, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb",
          "RedshiftPid": 1073889531,
          "RedshiftQueryId": 0,
          "ResultFormat": "json",
          "ResultRows": -1,
          "ResultSize": -1,
          "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
          "Status": "FAILED",
          "SubStatements": [
            {
              "CreatedAt": "2025-02-28T02:36:50.932Z",
              "Duration": 45533702,
              "HasResultSet": false,
              "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb:1",
              "QueryString": "SET search_path TO malloytest;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:51.475Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:50.935Z",
              "Duration": 41577388,
              "HasResultSet": false,
              "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb:2",
              "QueryString": "DROP TABLE IF EXISTS tmp19306ff2363f4429916ba73384f5ab70;",
              "RedshiftQueryId": 0,
              "ResultRows": 0,
              "ResultSize": 0,
              "Status": "FINISHED",
              "UpdatedAt": "2025-02-28T02:36:51.475Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:50.939Z",
              "Duration": -1,
              "Error": "ERROR: function jsonb_build_object(character varying, integer, character varying, integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
              "HasResultSet": false,
              "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb:3",
              "QueryString": "CREATE TEMP TABLE tmp19306ff2363f4429916ba73384f5ab70 AS \n            SELECT JSONB_BUILD_ARRAY(JSONB_BUILD_OBJECT('a',10, 'b',11),JSONB_BUILD_OBJECT('a',20, 'b',21)) AS \"sqlAB\"\n          ;",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "FAILED",
              "UpdatedAt": "2025-02-28T02:36:51.475Z"
            },
            {
              "CreatedAt": "2025-02-28T02:36:50.942Z",
              "Duration": -1,
              "Error": "Connection or an prior query failed.",
              "HasResultSet": false,
              "Id": "82d53b84-c81b-4dcb-8ec7-45c66ffc9bcb:4",
              "QueryString": "SELECT \"column\" as \"column_name\", type as \"data_type\", null as \"comment\"\n      FROM pg_table_def\n      WHERE tablename = 'tmp19306ff2363f4429916ba73384f5ab70';\n      ",
              "RedshiftQueryId": 0,
              "ResultRows": -1,
              "ResultSize": -1,
              "Status": "ABORTED",
              "UpdatedAt": "2025-02-28T02:36:51.475Z"
            }
          ],
          "UpdatedAt": "2025-02-28T02:36:51.540Z",
          "WorkgroupName": "default-workgroup"
        }
      |           run: redshift.sql("""
      |                             ^
    line 4: 'sqlAB' is not defined
      |           """) -> { select: ab is sqlAB }
      |                                   ^

      460 |           """) -> { select: ab is sqlAB }
      461 |       `;
    > 462 |         await expect(src).malloyResultMatches(runtime, {ab: ab_eq});
          |                           ^
      463 |       });
      464 |       test('select repeated record passed down pipeline', async () => {
      465 |         await expect(`

      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:462:27)

  ● compound atomic datatypes redshift › repeated record › select repeated record passed down pipeline

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "870b05cb-182b-4d2c-8cf2-1b6cee195e2b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:52.286Z",
      "Database": "dev",
      "Duration": 44108483,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb",
      "RedshiftPid": 1073889505,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:52.410Z",
          "Duration": 44108483,
          "HasResultSet": false,
          "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:52.858Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:52.413Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"pipeAb\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   base.\"pipeAb\" as \"ab\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:52.858Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:52.923Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "pipeAb"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       base."pipeAb" as "ab"
    FROM __stage0 as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "870b05cb-182b-4d2c-8cf2-1b6cee195e2b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:52.286Z",
      "Database": "dev",
      "Duration": 44108483,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb",
      "RedshiftPid": 1073889505,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:52.410Z",
          "Duration": 44108483,
          "HasResultSet": false,
          "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:52.858Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:52.413Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "9c993ef2-ab76-4f8e-98eb-b0bf4a776bbb:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"pipeAb\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   base.\"pipeAb\" as \"ab\"\nFROM __stage0 as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:52.858Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:52.923Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:469:12)

  ● compound atomic datatypes redshift › repeated record › deref repeat record passed down pipeline

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b73599cd-88f4-45e1-8860-853ba453329c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:53.693Z",
      "Database": "dev",
      "Duration": 44611374,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8",
      "RedshiftPid": 1073881337,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:53.797Z",
          "Duration": 44611374,
          "HasResultSet": false,
          "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:54.227Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:53.801Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"pipeAb\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'b')::double precision as \"b\"\nFROM __stage0 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"pipeAb\") as pipeAb_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:54.227Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:54.293Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as "pipeAb"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'b')::double precision as "b"
    FROM __stage0 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."pipeAb") as pipeAb_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b73599cd-88f4-45e1-8860-853ba453329c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:53.693Z",
      "Database": "dev",
      "Duration": 44611374,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8",
      "RedshiftPid": 1073881337,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:53.797Z",
          "Duration": 44611374,
          "HasResultSet": false,
          "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:54.227Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:53.801Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "6d596dd9-b96b-4cc1-9d81-9379fc66e9c8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21))) as \"pipeAb\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(pipeAb_0,'b')::double precision as \"b\"\nFROM __stage0 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"pipeAb\") as pipeAb_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:54.227Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:54.293Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:476:12)

  ● compound atomic datatypes redshift › repeated record › select array of records from source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "fcf8d9c2-9e43-40f1-9cad-9a91e242562f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:55.023Z",
      "Database": "dev",
      "Duration": 44687140,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "2f143cad-84ec-4102-bbed-17291cfc8543",
      "RedshiftPid": 1073914084,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:55.121Z",
          "Duration": 44687140,
          "HasResultSet": false,
          "Id": "2f143cad-84ec-4102-bbed-17291cfc8543:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:55.558Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:55.124Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "2f143cad-84ec-4102-bbed-17291cfc8543:2",
          "QueryString": "SELECT \n   (JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as \"ab\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:55.558Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:55.624Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       (JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as "ab"
    FROM (SELECT 0 as z) as base

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "fcf8d9c2-9e43-40f1-9cad-9a91e242562f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:55.023Z",
      "Database": "dev",
      "Duration": 44687140,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "2f143cad-84ec-4102-bbed-17291cfc8543",
      "RedshiftPid": 1073914084,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:55.121Z",
          "Duration": 44687140,
          "HasResultSet": false,
          "Id": "2f143cad-84ec-4102-bbed-17291cfc8543:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:55.558Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:55.124Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "2f143cad-84ec-4102-bbed-17291cfc8543:2",
          "QueryString": "SELECT \n   (JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as \"ab\"\nFROM (SELECT 0 as z) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:55.558Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:55.624Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:483:12)

  ● compound atomic datatypes redshift › repeated record › deref array of records from source

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7a027aed-ade5-4fab-a34a-b23f61a4c376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:56.389Z",
      "Database": "dev",
      "Duration": 53854656,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82",
      "RedshiftPid": 1073750248,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:56.476Z",
          "Duration": 53854656,
          "HasResultSet": false,
          "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:56.913Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:56.479Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as \"b\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as ab_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:56.913Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:56.978Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as "a",
       JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as "b"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as ab_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7a027aed-ade5-4fab-a34a-b23f61a4c376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:56.389Z",
      "Database": "dev",
      "Duration": 53854656,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82",
      "RedshiftPid": 1073750248,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:56.476Z",
          "Duration": 53854656,
          "HasResultSet": false,
          "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:56.913Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:56.479Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", integer, \"unknown\", integer) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5cd386ad-3ac8-4ddc-8eba-21f991570c82:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(ab_0,'a')::double precision as \"a\",\n   JSONB_EXTRACT_PATH_TEXT(ab_0,'b')::double precision as \"b\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('a',10, 'b',11)),(JSONB_BUILD_OBJECT('a',20, 'b',21)))) as ab_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:56.913Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:56.978Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:490:12)

  ● compound atomic datatypes redshift › repeated record › repeated record in source wth record property

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3abcd392-4bde-429f-b4dd-7a943a27af61",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:57.780Z",
      "Database": "dev",
      "Duration": 52116680,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec",
      "RedshiftPid": 1073799416,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:57.875Z",
          "Duration": 52116680,
          "HasResultSet": false,
          "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:58.318Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:57.878Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(rec_0,'bc'),'b') as \"b\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('bc',(JSONB_BUILD_OBJECT('b','b')))))) as rec_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:58.318Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:58.392Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(rec_0,'bc'),'b') as "b"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('bc',(JSONB_BUILD_OBJECT('b','b')))))) as rec_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3abcd392-4bde-429f-b4dd-7a943a27af61",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:57.780Z",
      "Database": "dev",
      "Duration": 52116680,
      "Error": "Query #2 failed with ERROR: function jsonb_build_object(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec",
      "RedshiftPid": 1073799416,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:57.875Z",
          "Duration": 52116680,
          "HasResultSet": false,
          "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:58.318Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:57.878Z",
          "Duration": -1,
          "Error": "ERROR: function jsonb_build_object(\"unknown\", \"unknown\") does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "a4e28d6b-71c6-430f-a126-cf4dd0acbdec:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(JSONB_EXTRACT_PATH(rec_0,'bc'),'b') as \"b\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('bc',(JSONB_BUILD_OBJECT('b','b')))))) as rec_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:58.318Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:58.392Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:496:12)

  ● compound atomic datatypes redshift › repeated record › piped repeated record containing an array

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "88612b5e-bee5-47f8-a6e2-2aa5e3ce3436",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:59.137Z",
      "Database": "dev",
      "Duration": 44404812,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 11, column 23\n  Position: 480",
      "HasResultSet": false,
      "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c",
      "RedshiftPid": 1073979634,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:59.234Z",
          "Duration": 44404812,
          "HasResultSet": false,
          "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:59.654Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:59.237Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 11, column 23\n  Position: 480",
          "HasResultSet": false,
          "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two'))))) as \"rrec\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as \"val\",\n   (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as \"name\"\nFROM __stage0 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"rrec\") as rrec_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true\nORDER BY 1 desc NULLS LAST,2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:59.654Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:59.720Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT 
         JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two'))))) as "rrec"
      FROM (SELECT 0 as z) as base
    )
    SELECT 
       JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as "val",
       (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as "name"
    FROM __stage0 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."rrec") as rrec_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true
    ORDER BY 1 desc NULLS LAST,2 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "88612b5e-bee5-47f8-a6e2-2aa5e3ce3436",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:36:59.137Z",
      "Database": "dev",
      "Duration": 44404812,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 11, column 23\n  Position: 480",
      "HasResultSet": false,
      "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c",
      "RedshiftPid": 1073979634,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:36:59.234Z",
          "Duration": 44404812,
          "HasResultSet": false,
          "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:36:59.654Z"
        },
        {
          "CreatedAt": "2025-02-28T02:36:59.237Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 11, column 23\n  Position: 480",
          "HasResultSet": false,
          "Id": "d0627631-5676-45f2-b532-ab801e6f7d4c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT \n     JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two'))))) as \"rrec\"\n  FROM (SELECT 0 as z) as base\n)\nSELECT \n   JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as \"val\",\n   (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as \"name\"\nFROM __stage0 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"rrec\") as rrec_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true\nORDER BY 1 desc NULLS LAST,2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:36:59.654Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:36:59.720Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:509:12)

  ● compound atomic datatypes redshift › repeated record › source repeated record containing an array

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "de997993-17d9-4d7d-8927-4b3e662bac76",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:37:00.485Z",
      "Database": "dev",
      "Duration": 42828718,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 6, column 23\n  Position: 398",
      "HasResultSet": false,
      "Id": "126068e3-5d2e-4de1-a369-36caf845773a",
      "RedshiftPid": 1073848557,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:37:00.578Z",
          "Duration": 42828718,
          "HasResultSet": false,
          "Id": "126068e3-5d2e-4de1-a369-36caf845773a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:37:01.021Z"
        },
        {
          "CreatedAt": "2025-02-28T02:37:00.582Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 6, column 23\n  Position: 398",
          "HasResultSet": false,
          "Id": "126068e3-5d2e-4de1-a369-36caf845773a:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as \"val\",\n   (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as \"name\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two')))))) as rrec_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true\nORDER BY 1 desc NULLS LAST,2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:37:01.021Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:37:01.086Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as "val",
       (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as "name"
    FROM (SELECT 0 as z) as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two')))))) as rrec_0 ON true
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true
    ORDER BY 1 desc NULLS LAST,2 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "de997993-17d9-4d7d-8927-4b3e662bac76",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:37:00.485Z",
      "Database": "dev",
      "Duration": 42828718,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 6, column 23\n  Position: 398",
      "HasResultSet": false,
      "Id": "126068e3-5d2e-4de1-a369-36caf845773a",
      "RedshiftPid": 1073848557,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:37:00.578Z",
          "Duration": 42828718,
          "HasResultSet": false,
          "Id": "126068e3-5d2e-4de1-a369-36caf845773a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:37:01.021Z"
        },
        {
          "CreatedAt": "2025-02-28T02:37:00.582Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 6, column 23\n  Position: 398",
          "HasResultSet": false,
          "Id": "126068e3-5d2e-4de1-a369-36caf845773a:2",
          "QueryString": "SELECT \n   JSONB_EXTRACT_PATH_TEXT(rrec_0,'val')::double precision as \"val\",\n   (JSONB_EXTRACT_PATH_TEXT(names_0,'value')) as \"name\"\nFROM (SELECT 0 as z) as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(JSONB_BUILD_ARRAY((JSONB_BUILD_OBJECT('val',1, 'names',(JSONB_BUILD_ARRAY('uno','one')))),(JSONB_BUILD_OBJECT('val',2, 'names',(JSONB_BUILD_ARRAY('due','two')))))) as rrec_0 ON true\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_EXTRACT_PATH(rrec_0,'names'))) as v))) as names_0 ON true\nORDER BY 1 desc NULLS LAST,2 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:37:01.021Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:37:01.086Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/compound-atomic.spec.ts:527:12)

FAIL test/src/databases/all/lenses.spec.ts (434.663 s)
  ● named view plus measure - redshift

    thrown: "Exceeded timeout of 100000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      47 |     `).malloyResultMatches(runtime, {n: 1, c: 1});
      48 |   });
    > 49 |   it(`named view plus measure - ${databaseName}`, async () => {
         |   ^
      50 |     await expect(`
      51 |       source: x is ${databaseName}.sql('SELECT 1 as ${q`n`}') extend {
      52 |         view: d is { group_by: n }

      at test/src/databases/all/lenses.spec.ts:49:3
          at Map.forEach (<anonymous>)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:38:21)

  ● dimension plus named view - redshift

    thrown: "Exceeded timeout of 100000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      56 |     `).malloyResultMatches(runtime, {n: 1, c: 1});
      57 |   });
    > 58 |   it(`dimension plus named view - ${databaseName}`, async () => {
         |   ^
      59 |     await expect(`
      60 |       source: x is ${databaseName}.sql('SELECT 1 as ${q`n`}') extend {
      61 |         view: m is { aggregate: c is count() }

      at test/src/databases/all/lenses.spec.ts:58:3
          at Map.forEach (<anonymous>)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:38:21)

  ● where headed - redshift

    thrown: "Exceeded timeout of 100000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      64 |     `).malloyResultMatches(runtime, {n: 1, c: 1});
      65 |   });
    > 66 |   it(`where headed - ${databaseName}`, async () => {
         |   ^
      67 |     await expect(`
      68 |       source: x is ${databaseName}.sql('SELECT 1 as ${q`n`}') extend {
      69 |         view: m is { aggregate: c is count() }

      at test/src/databases/all/lenses.spec.ts:66:3
          at Map.forEach (<anonymous>)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:38:21)

  ● nested no name - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c8a1ae6e-e262-4730-a309-43a4629de412",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:38.913Z",
      "Database": "dev",
      "Duration": 43397962,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91",
      "RedshiftPid": 1073848434,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:39.000Z",
          "Duration": 43397962,
          "HasResultSet": false,
          "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:39.459Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:39.003Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"d\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:39.459Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:39.524Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "d"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c8a1ae6e-e262-4730-a309-43a4629de412",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:38.913Z",
      "Database": "dev",
      "Duration": 43397962,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91",
      "RedshiftPid": 1073848434,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:39.000Z",
          "Duration": 43397962,
          "HasResultSet": false,
          "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:39.459Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:39.003Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "12d9d2ef-4faf-41dd-8eb5-0459e0938c91:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"d\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:39.459Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:39.524Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:177:8)

  ● nested with name - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "76a4eb63-af41-4edc-b28c-04c359b69ea2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:40.274Z",
      "Database": "dev",
      "Duration": 45260752,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422",
      "RedshiftPid": 1073897591,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:40.374Z",
          "Duration": 45260752,
          "HasResultSet": false,
          "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:40.808Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:40.378Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"y\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:40.808Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:40.874Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "y"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "76a4eb63-af41-4edc-b28c-04c359b69ea2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:40.274Z",
      "Database": "dev",
      "Duration": 45260752,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422",
      "RedshiftPid": 1073897591,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:40.374Z",
          "Duration": 45260752,
          "HasResultSet": false,
          "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:40.808Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:40.378Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "95bff5dc-2fd4-4510-bf22-1ed9cbb2c422:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"y\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:40.808Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:40.874Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:188:8)

  ● nested no name with dimension head - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9327fc3f-913a-4faf-9c9d-77a03648ccb3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:41.648Z",
      "Database": "dev",
      "Duration": 43593596,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d",
      "RedshiftPid": 1073881188,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:41.748Z",
          "Duration": 43593596,
          "HasResultSet": false,
          "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:42.213Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:41.751Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"c__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:42.213Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:42.279Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n", 
        "c__1"::DOUBLE PRECISION as "c"
        ) as __x)  ORDER BY  "c__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "9327fc3f-913a-4faf-9c9d-77a03648ccb3",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:41.648Z",
      "Database": "dev",
      "Duration": 43593596,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
      "HasResultSet": false,
      "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d",
      "RedshiftPid": 1073881188,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:41.748Z",
          "Duration": 43593596,
          "HasResultSet": false,
          "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:42.213Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:41.751Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 16\n  Position: 439",
          "HasResultSet": false,
          "Id": "8ad236fc-27ca-4c60-8d44-ea55e184e19d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\", \n    \"c__1\"::DOUBLE PRECISION as \"c\"\n    ) as __x)  ORDER BY  \"c__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:42.213Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:42.279Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:198:8)

  ● nest dimension only - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "557703c2-07f4-4bb6-9fe0-97350341af39",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:42.977Z",
      "Database": "dev",
      "Duration": 43564386,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 334",
      "HasResultSet": false,
      "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3",
      "RedshiftPid": 1073799267,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:43.092Z",
          "Duration": 43564386,
          "HasResultSet": false,
          "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:43.513Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:43.096Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 334",
          "HasResultSet": false,
          "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:43.513Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:43.579Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "557703c2-07f4-4bb6-9fe0-97350341af39",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:42.977Z",
      "Database": "dev",
      "Duration": 43564386,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 334",
      "HasResultSet": false,
      "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3",
      "RedshiftPid": 1073799267,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:43.092Z",
          "Duration": 43564386,
          "HasResultSet": false,
          "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:43.513Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:43.096Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 334",
          "HasResultSet": false,
          "Id": "91bd6686-8f76-4d3b-ad78-90faa8ad52d3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:43.513Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:43.579Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:208:8)

  ● nest joined dimension refined - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "327c0907-18d2-46db-aa62-16596d218376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:48.450Z",
      "Database": "dev",
      "Duration": 44223343,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
      "HasResultSet": false,
      "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed",
      "RedshiftPid": 1073938556,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:48.543Z",
          "Duration": 44223343,
          "HasResultSet": false,
          "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:48.985Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:48.546Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
          "HasResultSet": false,
          "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 1 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))[1:1]),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:48.985Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:49.050Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 1 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))[1:1]),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "327c0907-18d2-46db-aa62-16596d218376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:48.450Z",
      "Database": "dev",
      "Duration": 44223343,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
      "HasResultSet": false,
      "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed",
      "RedshiftPid": 1073938556,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:48.543Z",
          "Duration": 44223343,
          "HasResultSet": false,
          "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:48.985Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:48.546Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
          "HasResultSet": false,
          "Id": "0ac34754-2f90-499b-9861-7a95d2a1aaed:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 1 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))[1:1]),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:48.985Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:49.050Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:228:8)

  ● nest joined dimension bare - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9ef2e81-0957-4d06-94b7-87083a87d2c6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:51.358Z",
      "Database": "dev",
      "Duration": 45263836,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
      "HasResultSet": false,
      "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118",
      "RedshiftPid": 1073750139,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:51.475Z",
          "Duration": 45263836,
          "HasResultSet": false,
          "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:51.925Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:51.478Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
          "HasResultSet": false,
          "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 2 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:51.925Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:51.990Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 2 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9ef2e81-0957-4d06-94b7-87083a87d2c6",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:51.358Z",
      "Database": "dev",
      "Duration": 45263836,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
      "HasResultSet": false,
      "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118",
      "RedshiftPid": 1073750139,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:51.475Z",
          "Duration": 45263836,
          "HasResultSet": false,
          "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:51.925Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:51.478Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 16, column 16\n  Position: 383",
          "HasResultSet": false,
          "Id": "db0a9c1c-3b84-4935-8f3a-7231eb260118:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 2 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:51.925Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:51.990Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:248:8)

  ● joined dimension nest refinement - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a984c2e6-5436-4605-b924-942a78d9a678",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:54.328Z",
      "Database": "dev",
      "Duration": 44295348,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 488",
      "HasResultSet": false,
      "Id": "cb37271e-5950-499f-91a3-416a8ee4b855",
      "RedshiftPid": 1073971323,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:54.419Z",
          "Duration": 44295348,
          "HasResultSet": false,
          "Id": "cb37271e-5950-499f-91a3-416a8ee4b855:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:54.871Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:54.422Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 488",
          "HasResultSet": false,
          "Id": "cb37271e-5950-499f-91a3-416a8ee4b855:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 2 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"c__1\"::DOUBLE PRECISION as \"c\", \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"c__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"m\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:54.871Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:54.928Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          y_0."n"
          END as "n__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1"
      FROM (SELECT 1 as "n") as base
       LEFT JOIN (SELECT 2 as "n") AS y_0
        ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "c__1"::DOUBLE PRECISION as "c", 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "c__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "m"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a984c2e6-5436-4605-b924-942a78d9a678",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:54.328Z",
      "Database": "dev",
      "Duration": 44295348,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 488",
      "HasResultSet": false,
      "Id": "cb37271e-5950-499f-91a3-416a8ee4b855",
      "RedshiftPid": 1073971323,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:54.419Z",
          "Duration": 44295348,
          "HasResultSet": false,
          "Id": "cb37271e-5950-499f-91a3-416a8ee4b855:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:54.871Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:54.422Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 488",
          "HasResultSet": false,
          "Id": "cb37271e-5950-499f-91a3-416a8ee4b855:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      y_0.\"n\"\n      END as \"n__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\"\n  FROM (SELECT 1 as \"n\") as base\n   LEFT JOIN (SELECT 2 as \"n\") AS y_0\n    ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"c__1\"::DOUBLE PRECISION as \"c\", \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"c__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"m\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:54.871Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:54.928Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:266:8)

  ● nest dimension only in refinement - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "03c7b611-149d-42f4-8153-5f8477ae42cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:55.681Z",
      "Database": "dev",
      "Duration": 44338044,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 15, column 22\n  Position: 304",
      "HasResultSet": false,
      "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b",
      "RedshiftPid": 1073889397,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:55.779Z",
          "Duration": 44338044,
          "HasResultSet": false,
          "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:56.205Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:55.783Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 15, column 22\n  Position: 304",
          "HasResultSet": false,
          "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:56.205Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:56.271Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."n"
          END as "n__1"
      FROM (SELECT 1 as "n") as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "n__1"::DOUBLE PRECISION as "n"
        ) as __x)  ORDER BY  "n__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "n"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "03c7b611-149d-42f4-8153-5f8477ae42cf",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:43:55.681Z",
      "Database": "dev",
      "Duration": 44338044,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 15, column 22\n  Position: 304",
      "HasResultSet": false,
      "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b",
      "RedshiftPid": 1073889397,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:43:55.779Z",
          "Duration": 44338044,
          "HasResultSet": false,
          "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:43:56.205Z"
        },
        {
          "CreatedAt": "2025-02-28T02:43:55.783Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"c__0\") FILTER\", at line 15, column 22\n  Position: 304",
          "HasResultSet": false,
          "Id": "aefd9032-f06e-4bde-b693-cbfc2f785d0b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"n\"\n      END as \"n__1\"\n  FROM (SELECT 1 as \"n\") as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"n__1\"::DOUBLE PRECISION as \"n\"\n    ) as __x)  ORDER BY  \"n__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"n\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:43:56.205Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:43:56.271Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/lenses.spec.ts:286:8)

FAIL test/src/databases/all/composite_sources.spec.ts (84.217 s)
  ● redshift › composite of a composite where greedy is bad- redshift

    SQL Generated:
      SELECT 
         1.3 as "foo",
         2.3 as "bar",
         3.3 as "baz"
      FROM "malloytest"."state_facts" as base
      GROUP BY 1,2,3
      ORDER BY 1 asc NULLS LAST
      
    Expected {foo: 1.3} Got: Non Numeric '"1.3"'
    Expected {bar: 2.3} Got: Non Numeric '"2.3"'
    Expected {baz: 3.3} Got: Non Numeric '"3.3"'

      215 |       // so the second input source is used instead
      216 |       run: x -> { group_by: foo, bar, baz }
    > 217 |     `).malloyResultMatches(runtime, {foo: 1.3, bar: 2.3, baz: 3.3});
          |        ^
      218 |   });
      219 |   it('composite with parameters', async () => {
      220 |     await expect(`

      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:217:8)

  ● redshift › reference composite field in nest

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "df867ca8-15d9-4a3d-8b67-dd2083c28c1e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:23.339Z",
      "Database": "dev",
      "Duration": 52619844,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 336",
      "HasResultSet": false,
      "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d",
      "RedshiftPid": 1073807482,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:23.438Z",
          "Duration": 52619844,
          "HasResultSet": false,
          "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:23.917Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:23.441Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 336",
          "HasResultSet": false,
          "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"x__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"x__1\"::DOUBLE PRECISION as \"x\"\n    ) as __x)  ORDER BY  \"x__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"foo\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:23.917Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:23.982Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "x__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "x__1"::DOUBLE PRECISION as "x"
        ) as __x)  ORDER BY  "x__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "foo"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "df867ca8-15d9-4a3d-8b67-dd2083c28c1e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:23.339Z",
      "Database": "dev",
      "Duration": 52619844,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 336",
      "HasResultSet": false,
      "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d",
      "RedshiftPid": 1073807482,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:23.438Z",
          "Duration": 52619844,
          "HasResultSet": false,
          "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:23.917Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:23.441Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 14, column 16\n  Position: 336",
          "HasResultSet": false,
          "Id": "067f4729-a7ca-4cda-a6ca-635fbb64411d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"x__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"x__1\"::DOUBLE PRECISION as \"x\"\n    ) as __x)  ORDER BY  \"x__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"foo\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:23.917Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:23.982Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:262:8)

  ● redshift › composite with each

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2c9346fc-1496-4274-acae-2c4d608b5bb0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:26.229Z",
      "Database": "dev",
      "Duration": 44018685,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca",
      "RedshiftPid": 1073741936,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:26.320Z",
          "Duration": 44018685,
          "HasResultSet": false,
          "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:26.765Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:26.323Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(0,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"foo\",\n   1 as \"bar\",\n   JSONB_EXTRACT_PATH_TEXT(arr_0,'value')::double precision as \"each\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3))) as v))) as arr_0 ON true\nGROUP BY 2,3\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:26.765Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:26.831Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(0,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(base."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "foo",
       1 as "bar",
       JSONB_EXTRACT_PATH_TEXT(arr_0,'value')::double precision as "each"
    FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3))) as v))) as arr_0 ON true
    GROUP BY 2,3
    ORDER BY 1 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2c9346fc-1496-4274-acae-2c4d608b5bb0",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:26.229Z",
      "Database": "dev",
      "Duration": 44018685,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca",
      "RedshiftPid": 1073741936,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:26.320Z",
          "Duration": 44018685,
          "HasResultSet": false,
          "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:26.765Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:26.323Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "6da2f119-0141-4b6b-a1a7-4ddee2fab5ca:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(0,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(base.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(base.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"foo\",\n   1 as \"bar\",\n   JSONB_EXTRACT_PATH_TEXT(arr_0,'value')::double precision as \"each\"\nFROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('value', v) FROM JSONB_ARRAY_ELEMENTS(TO_JSONB(JSONB_BUILD_ARRAY(1,2,3))) as v))) as arr_0 ON true\nGROUP BY 2,3\nORDER BY 1 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:26.765Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:26.831Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:285:8)

  ● redshift › index queries against composite sources › index query selects second input

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "fdec6dcf-3750-4b2f-8080-8e240f5c06df",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:36.561Z",
      "Database": "dev",
      "Duration": 45520485,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec",
      "RedshiftPid": 1073848426,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:36.661Z",
          "Duration": 45520485,
          "HasResultSet": false,
          "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:37.113Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:36.665Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:37.113Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:37.179Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    SELECT
      "fieldName",
      "fieldPath",
      "fieldType",
      COALESCE("fieldValue", "fieldRange") as "fieldValue",
      "weight"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "fdec6dcf-3750-4b2f-8080-8e240f5c06df",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:36.561Z",
      "Database": "dev",
      "Duration": 45520485,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec",
      "RedshiftPid": 1073848426,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:36.661Z",
          "Duration": 45520485,
          "HasResultSet": false,
          "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:37.113Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:36.665Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "8b97a025-9c31-465c-9d16-c6da7c549cec:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:37.113Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:37.179Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:381:10)

  ● redshift › index queries against composite sources › index query selects first input

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e72a618a-e941-44f0-b9bb-1eb6ada319e5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:37.943Z",
      "Database": "dev",
      "Duration": 51893247,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14",
      "RedshiftPid": 1073897583,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:38.045Z",
          "Duration": 51893247,
          "HasResultSet": false,
          "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:38.529Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:38.048Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:38.529Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:38.593Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    SELECT
      "fieldName",
      "fieldPath",
      "fieldType",
      COALESCE("fieldValue", "fieldRange") as "fieldValue",
      "weight"
    FROM __stage0

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e72a618a-e941-44f0-b9bb-1eb6ada319e5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:37.943Z",
      "Database": "dev",
      "Duration": 51893247,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14",
      "RedshiftPid": 1073897583,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:38.045Z",
          "Duration": 51893247,
          "HasResultSet": false,
          "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:38.529Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:38.048Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "0d505516-7c66-4d42-a5d9-ff4445014d14:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:38.529Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:38.593Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:391:10)

  ● redshift › index queries against composite sources › index query resolves when two stages

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "47ea4f6b-28f8-457d-b675-b48d679e721c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:39.377Z",
      "Database": "dev",
      "Duration": 45027017,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7",
      "RedshiftPid": 1073799293,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:39.473Z",
          "Duration": 45027017,
          "HasResultSet": false,
          "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:39.892Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:39.476Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\"\nFROM __stage1 as base\nWHERE base.\"fieldName\" IS NOT NULL\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:39.892Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:39.958Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'bar'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName"
    FROM __stage1 as base
    WHERE base."fieldName" IS NOT NULL
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "47ea4f6b-28f8-457d-b675-b48d679e721c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:45:39.377Z",
      "Database": "dev",
      "Duration": 45027017,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7",
      "RedshiftPid": 1073799293,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:45:39.473Z",
          "Duration": 45027017,
          "HasResultSet": false,
          "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:45:39.892Z"
        },
        {
          "CreatedAt": "2025-02-28T02:45:39.476Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "00a8f177-0b45-494e-a8db-faef9473a0c7:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'bar'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(1 as VARCHAR)) || ' to ' || CAST(MAX(1) as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\"\nFROM __stage1 as base\nWHERE base.\"fieldName\" IS NOT NULL\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:45:39.892Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:45:39.958Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/composite_sources.spec.ts:401:10)

FAIL test/src/databases/all/join.spec.ts (53.846 s)
  ● redshift › model: unnest is left join

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2ffae9ae-7bd7-40b3-8058-e7d898b9f9b2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:46:19.206Z",
      "Database": "dev",
      "Duration": 44046876,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 18\n  Position: 457",
      "HasResultSet": false,
      "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41",
      "RedshiftPid": 1073987707,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:46:19.331Z",
          "Duration": 44046876,
          "HasResultSet": false,
          "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:46:19.794Z"
        },
        {
          "CreatedAt": "2025-02-28T02:46:19.335Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 18\n  Position: 457",
          "HasResultSet": false,
          "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" LIKE 'A%'\n  GROUP BY 1,2,3\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"somthing\"\n  FROM __stage0\n  GROUP BY 1\n)\n, __stage2 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(DISTINCT base.\"__distinct_key\")\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      JSONB_EXTRACT_PATH_TEXT(somthing_0,'state')\n      END as \"state__1\"\n  FROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n   LEFT JOIN __stage1 AS a_states_0\n    ON a_states_0.\"state\"=base.\"state\"\n  LEFT JOIN JSONB_ARRAY_ELEMENTS(a_states_0.\"somthing\") as somthing_0 ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__0\" as \"state\",\n  (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\"\n    ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"a\"\nFROM __stage2\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 5\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:46:19.794Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:46:19.860Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" LIKE 'A%'
      GROUP BY 1,2,3
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "somthing"
      FROM __stage0
      GROUP BY 1
    )
    , __stage2 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COUNT(DISTINCT base."__distinct_key")
          END as "c__0",
        CASE WHEN group_set=1 THEN
          JSONB_EXTRACT_PATH_TEXT(somthing_0,'state')
          END as "state__1"
      FROM (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
       LEFT JOIN __stage1 AS a_states_0
        ON a_states_0."state"=base."state"
      LEFT JOIN JSONB_ARRAY_ELEMENTS(a_states_0."somthing") as somthing_0 ON true
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__0" as "state",
      (ARRAY_AGG("c__0") FILTER (WHERE group_set=0 AND "c__0" IS NOT NULL))[1] as "c",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state"
        ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "a"
    FROM __stage2
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 5

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2ffae9ae-7bd7-40b3-8058-e7d898b9f9b2",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:46:19.206Z",
      "Database": "dev",
      "Duration": 44046876,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 18\n  Position: 457",
      "HasResultSet": false,
      "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41",
      "RedshiftPid": 1073987707,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:46:19.331Z",
          "Duration": 44046876,
          "HasResultSet": false,
          "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:46:19.794Z"
        },
        {
          "CreatedAt": "2025-02-28T02:46:19.335Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 18, column 18\n  Position: 457",
          "HasResultSet": false,
          "Id": "3c04b22d-118f-4e02-8359-3f03f70ced41:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" LIKE 'A%'\n  GROUP BY 1,2,3\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"somthing\"\n  FROM __stage0\n  GROUP BY 1\n)\n, __stage2 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(DISTINCT base.\"__distinct_key\")\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      JSONB_EXTRACT_PATH_TEXT(somthing_0,'state')\n      END as \"state__1\"\n  FROM (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n   LEFT JOIN __stage1 AS a_states_0\n    ON a_states_0.\"state\"=base.\"state\"\n  LEFT JOIN JSONB_ARRAY_ELEMENTS(a_states_0.\"somthing\") as somthing_0 ON true\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__0\" as \"state\",\n  (ARRAY_AGG(\"c__0\") FILTER (WHERE group_set=0 AND \"c__0\" IS NOT NULL))[1] as \"c\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\"\n    ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"a\"\nFROM __stage2\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 5\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:46:19.794Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:46:19.860Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/join.spec.ts:221:10)

  ● redshift › join issue1092

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "39aba9a7-b6a9-4a85-b250-44c7829bcd35",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:46:28.646Z",
      "Database": "dev",
      "Duration": 3982384,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140",
      "RedshiftPid": 1073971301,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:46:28.765Z",
          "Duration": 3982384,
          "HasResultSet": false,
          "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:46:29.248Z"
        },
        {
          "CreatedAt": "2025-02-28T02:46:28.768Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(CASE WHEN base.\"state\"='CA' THEN sf_0.\"births\" END,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(sf_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(sf_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"x\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS sf_0\n  ON sf_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:46:29.248Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:46:29.323Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       COALESCE(CAST((
        (
          SUM(DISTINCT
            (CAST(ROUND(COALESCE(CASE WHEN base."state"='CA' THEN sf_0."births" END,0)*(1*1.0), 9) AS DECIMAL) +
            ('x' || MD5(sf_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)
          ))
          -
           SUM(DISTINCT ('x' || MD5(sf_0."__distinct_key"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0."__distinct_key"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))
        )/(1*1.0)) AS DOUBLE PRECISION),0) as "x"
    FROM "malloytest"."state_facts" as base
     LEFT JOIN (SELECT GEN_RANDOM_UUID() as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS sf_0
      ON sf_0."state"=base."state"

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "39aba9a7-b6a9-4a85-b250-44c7829bcd35",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:46:28.646Z",
      "Database": "dev",
      "Duration": 3982384,
      "Error": "Query #2 failed with ERROR: DECIMAL precision 65 must be between 1 and 38",
      "HasResultSet": false,
      "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140",
      "RedshiftPid": 1073971301,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:46:28.765Z",
          "Duration": 3982384,
          "HasResultSet": false,
          "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:46:29.248Z"
        },
        {
          "CreatedAt": "2025-02-28T02:46:28.768Z",
          "Duration": -1,
          "Error": "ERROR: DECIMAL precision 65 must be between 1 and 38",
          "HasResultSet": false,
          "Id": "75b452d7-ddab-4010-9fa6-9e67ff2f0140:2",
          "QueryString": "SELECT \n   COALESCE(CAST((\n    (\n      SUM(DISTINCT\n        (CAST(ROUND(COALESCE(CASE WHEN base.\"state\"='CA' THEN sf_0.\"births\" END,0)*(1*1.0), 9) AS DECIMAL) +\n        ('x' || MD5(sf_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0)\n      ))\n      -\n       SUM(DISTINCT ('x' || MD5(sf_0.\"__distinct_key\"::varchar))::bit(64)::bigint::DECIMAL(65,0)  *18446744073709551616 + ('x' || SUBSTR(MD5(sf_0.\"__distinct_key\"::varchar),17))::bit(64)::bigint::DECIMAL(65,0))\n    )/(1*1.0)) AS DOUBLE PRECISION),0) as \"x\"\nFROM \"malloytest\".\"state_facts\" as base\n LEFT JOIN (SELECT GEN_RANDOM_UUID() as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) AS sf_0\n  ON sf_0.\"state\"=base.\"state\"\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:46:29.248Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:46:29.323Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/join.spec.ts:267:8)

FAIL test/src/databases/all/orderby.spec.ts (52.672 s)
  ● redshift › boolean type - redshift

    SQL Generated:
      SELECT 
         base."seats">=20 as "big",
         COUNT(1) as "model_count"
      FROM "malloytest"."aircraft_models" as base
      GROUP BY 1
      ORDER BY 2 desc NULLS LAST
      
    Expected {big: false} Got: null

      45 |         aggregate: model_count is count()
      46 |       }
    > 47 |     `).malloyResultMatches(orderByModel, {
         |        ^
      48 |       big: booleanResult(false, databaseName),
      49 |       model_count: 58451,
      50 |     });

      at Object.<anonymous> (test/src/databases/all/orderby.spec.ts:47:8)

  ● redshift › boolean in pipeline - redshift

    SQL Generated:
      WITH __stage0 AS (
        SELECT 
           base."manufacturer" as "manufacturer",
           base."seats">=21 as "big",
           COUNT(1) as "model_count"
        FROM "malloytest"."aircraft_models" as base
        GROUP BY 1,2
      )
      SELECT 
         base."big" as "big",
         COALESCE(SUM(base."model_count"),0) as "model_count"
      FROM __stage0 as base
      GROUP BY 1
      ORDER BY 2 desc NULLS LAST
      
    Expected {big: false} Got: null

      62 |         aggregate: model_count is model_count.sum()
      63 |       }
    > 64 |     `).malloyResultMatches(orderByModel, {
         |        ^
      65 |       big: booleanResult(false, databaseName),
      66 |       model_count: 58500,
      67 |     });

      at Object.<anonymous> (test/src/databases/all/orderby.spec.ts:64:8)

  ● redshift › reserved words are quoted in turtles - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "16d27f7a-841a-4493-8d32-1a2c9bca57d7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:47:07.462Z",
      "Database": "dev",
      "Duration": 45025536,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 19, column 18\n  Position: 501",
      "HasResultSet": false,
      "Id": "ff587126-673c-4272-9ace-11512a4881fe",
      "RedshiftPid": 1073905772,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:47:07.554Z",
          "Duration": 45025536,
          "HasResultSet": false,
          "Id": "ff587126-673c-4272-9ace-11512a4881fe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:47:07.986Z"
        },
        {
          "CreatedAt": "2025-02-28T02:47:07.558Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 19, column 18\n  Position: 501",
          "HasResultSet": false,
          "Id": "ff587126-673c-4272-9ace-11512a4881fe:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      UPPER(base.\"popular_name\")\n      END as \"select__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"fetch__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\n, __stage1 AS (\n  SELECT\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"select__1\" as \"select\", \n      \"fetch__1\"::DOUBLE PRECISION as \"fetch\"\n      ) as __x)  ORDER BY  \"fetch__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"withx\"\n  FROM __stage0\n)\nSELECT \n   LOWER(JSONB_EXTRACT_PATH_TEXT(withx_0,'select')) as \"withxz\",\n   JSONB_EXTRACT_PATH_TEXT(withx_0,'fetch')::double precision as \"fetch\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"withx\") as withx_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:47:07.986Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:47:08.052Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          UPPER(base."popular_name")
          END as "select__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "fetch__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    , __stage1 AS (
      SELECT
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "select__1" as "select", 
          "fetch__1"::DOUBLE PRECISION as "fetch"
          ) as __x)  ORDER BY  "fetch__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "withx"
      FROM __stage0
    )
    SELECT 
       LOWER(JSONB_EXTRACT_PATH_TEXT(withx_0,'select')) as "withxz",
       JSONB_EXTRACT_PATH_TEXT(withx_0,'fetch')::double precision as "fetch"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."withx") as withx_0 ON true

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "16d27f7a-841a-4493-8d32-1a2c9bca57d7",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:47:07.462Z",
      "Database": "dev",
      "Duration": 45025536,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 19, column 18\n  Position: 501",
      "HasResultSet": false,
      "Id": "ff587126-673c-4272-9ace-11512a4881fe",
      "RedshiftPid": 1073905772,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:47:07.554Z",
          "Duration": 45025536,
          "HasResultSet": false,
          "Id": "ff587126-673c-4272-9ace-11512a4881fe:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:47:07.986Z"
        },
        {
          "CreatedAt": "2025-02-28T02:47:07.558Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 19, column 18\n  Position: 501",
          "HasResultSet": false,
          "Id": "ff587126-673c-4272-9ace-11512a4881fe:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      UPPER(base.\"popular_name\")\n      END as \"select__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"fetch__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\n, __stage1 AS (\n  SELECT\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"select__1\" as \"select\", \n      \"fetch__1\"::DOUBLE PRECISION as \"fetch\"\n      ) as __x)  ORDER BY  \"fetch__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"withx\"\n  FROM __stage0\n)\nSELECT \n   LOWER(JSONB_EXTRACT_PATH_TEXT(withx_0,'select')) as \"withxz\",\n   JSONB_EXTRACT_PATH_TEXT(withx_0,'fetch')::double precision as \"fetch\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"withx\") as withx_0 ON true\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:47:07.986Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:47:08.052Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/orderby.spec.ts:104:8)

  ● redshift › modeled having complex - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c5658ef2-967d-4bc2-9f0b-7dbf57154fb1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:47:16.125Z",
      "Database": "dev",
      "Duration": 54285845,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"model_count__0\") FILTER\", at line 34, column 34\n  Position: 962",
      "HasResultSet": false,
      "Id": "650f8a07-8217-41ae-a813-6d094d0d718b",
      "RedshiftPid": 1073799267,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:47:16.231Z",
          "Duration": 54285845,
          "HasResultSet": false,
          "Id": "650f8a07-8217-41ae-a813-6d094d0d718b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:47:16.681Z"
        },
        {
          "CreatedAt": "2025-02-28T02:47:16.235Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"model_count__0\") FILTER\", at line 34, column 34\n  Position: 962",
          "HasResultSet": false,
          "Id": "650f8a07-8217-41ae-a813-6d094d0d718b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"manufacturer\" as \"manufacturer__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"model_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"manufacturer\"\n      END as \"manufacturer__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"model_count__1\",\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>100 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft_models\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST(\"manufacturer__0\" as VARCHAR)) as __shaving__0 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)\n  ))\n, __stage3 AS (\n  SELECT\n    \"manufacturer__0\" as \"manufacturer\",\n    (ARRAY_AGG(\"model_count__0\") FILTER (WHERE group_set=0 AND \"model_count__0\" IS NOT NULL))[1] as \"model_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"manufacturer__1\" as \"manufacturer\", \n      \"model_count__1\"::DOUBLE PRECISION as \"model_count\"\n      ) as __x)  ORDER BY  \"model_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as \"l\"\n  FROM __stage2\n  GROUP BY 1\n)\nSELECT \n   base.\"manufacturer\" as \"manufacturer\",\n   base.\"model_count\" as \"model_count\"\nFROM __stage3 as base\nORDER BY 2 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:47:16.681Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:47:16.746Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."manufacturer" as "manufacturer__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "model_count__0",
        CASE WHEN group_set=1 THEN
          base."manufacturer"
          END as "manufacturer__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "model_count__1",
        CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN
          COUNT(1)
          END)>100 THEN 0 ELSE 1 END END as __delete__0
      FROM "malloytest"."aircraft_models" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        *,
        MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST("manufacturer__0" as VARCHAR)) as __shaving__0 
      FROM __stage0)
    , __stage2 AS (
      SELECT *
      FROM __stage1
      WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)
      ))
    , __stage3 AS (
      SELECT
        "manufacturer__0" as "manufacturer",
        (ARRAY_AGG("model_count__0") FILTER (WHERE group_set=0 AND "model_count__0" IS NOT NULL))[1] as "model_count",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "manufacturer__1" as "manufacturer", 
          "model_count__1"::DOUBLE PRECISION as "model_count"
          ) as __x)  ORDER BY  "model_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as "l"
      FROM __stage2
      GROUP BY 1
    )
    SELECT 
       base."manufacturer" as "manufacturer",
       base."model_count" as "model_count"
    FROM __stage3 as base
    ORDER BY 2 ASC NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c5658ef2-967d-4bc2-9f0b-7dbf57154fb1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:47:16.125Z",
      "Database": "dev",
      "Duration": 54285845,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"model_count__0\") FILTER\", at line 34, column 34\n  Position: 962",
      "HasResultSet": false,
      "Id": "650f8a07-8217-41ae-a813-6d094d0d718b",
      "RedshiftPid": 1073799267,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:47:16.231Z",
          "Duration": 54285845,
          "HasResultSet": false,
          "Id": "650f8a07-8217-41ae-a813-6d094d0d718b:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:47:16.681Z"
        },
        {
          "CreatedAt": "2025-02-28T02:47:16.235Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"FILTER\" in context \"ARRAY_AGG(\"model_count__0\") FILTER\", at line 34, column 34\n  Position: 962",
          "HasResultSet": false,
          "Id": "650f8a07-8217-41ae-a813-6d094d0d718b:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"manufacturer\" as \"manufacturer__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"model_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"manufacturer\"\n      END as \"manufacturer__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"model_count__1\",\n    CASE WHEN group_set=0 THEN CASE WHEN (CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)>100 THEN 0 ELSE 1 END END as __delete__0\n  FROM \"malloytest\".\"aircraft_models\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    *,\n    MAX(CASE WHEN group_set IN (0,1) THEN __delete__0 END) OVER(partition by CAST(\"manufacturer__0\" as VARCHAR)) as __shaving__0 \n  FROM __stage0)\n, __stage2 AS (\n  SELECT *\n  FROM __stage1\n  WHERE NOT ((group_set IN (0,1) AND __shaving__0=1)\n  ))\n, __stage3 AS (\n  SELECT\n    \"manufacturer__0\" as \"manufacturer\",\n    (ARRAY_AGG(\"model_count__0\") FILTER (WHERE group_set=0 AND \"model_count__0\" IS NOT NULL))[1] as \"model_count\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"manufacturer__1\" as \"manufacturer\", \n      \"model_count__1\"::DOUBLE PRECISION as \"model_count\"\n      ) as __x)  ORDER BY  \"model_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))[1:5]),'[]'::JSONB) as \"l\"\n  FROM __stage2\n  GROUP BY 1\n)\nSELECT \n   base.\"manufacturer\" as \"manufacturer\",\n   base.\"model_count\" as \"model_count\"\nFROM __stage3 as base\nORDER BY 2 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:47:16.681Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:47:16.746Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/orderby.spec.ts:163:10)

FAIL test/src/databases/all/db_index.spec.ts (22.52 s)
  ● basic index  - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4b009110-a352-418a-8c3f-5463637e3f9e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:03.755Z",
      "Database": "dev",
      "Duration": 101429200,
      "Error": "Query #3 failed with ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"airports\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 68\n  Position: 143",
      "HasResultSet": false,
      "Id": "21bf86c8-0721-4a56-a525-7a1070ffe355",
      "RedshiftPid": 1073963126,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:03.843Z",
          "Duration": 53126719,
          "HasResultSet": false,
          "Id": "21bf86c8-0721-4a56-a525-7a1070ffe355:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:04.437Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:03.847Z",
          "Duration": 48302481,
          "HasResultSet": false,
          "Id": "21bf86c8-0721-4a56-a525-7a1070ffe355:2",
          "QueryString": "DROP TABLE IF EXISTS tt8f20bd7b3cab6c2cbe6d4613a9f91a09;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:04.437Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:03.850Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"airports\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 68\n  Position: 143",
          "HasResultSet": false,
          "Id": "21bf86c8-0721-4a56-a525-7a1070ffe355:3",
          "QueryString": "CREATE TEMP TABLE tt8f20bd7b3cab6c2cbe6d4613a9f91a09 AS WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"airports\" TABLESAMPLE SYSTEM_ROWS(50000)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'act_date'\n      WHEN 1 THEN 'aero_cht'\n      WHEN 2 THEN 'c_ldg_rts'\n      WHEN 3 THEN 'cbd_dir'\n      WHEN 4 THEN 'cbd_dist'\n      WHEN 5 THEN 'cert'\n      WHEN 6 THEN 'city'\n      WHEN 7 THEN 'cntl_twr'\n      WHEN 8 THEN 'code'\n      WHEN 9 THEN 'county'\n      WHEN 10 THEN 'cust_intl'\n      WHEN 11 THEN 'elevation'\n      WHEN 12 THEN 'faa_dist'\n      WHEN 13 THEN 'faa_region'\n      WHEN 14 THEN 'fac_type'\n      WHEN 15 THEN 'fac_use'\n      WHEN 16 THEN 'fed_agree'\n      WHEN 17 THEN 'full_name'\n      WHEN 18 THEN 'id'\n      WHEN 19 THEN 'joint_use'\n      WHEN 20 THEN 'latitude'\n      WHEN 21 THEN 'longitude'\n      WHEN 22 THEN 'major'\n      WHEN 23 THEN 'mil_rts'\n      WHEN 24 THEN 'own_type'\n      WHEN 25 THEN 'site_number'\n      WHEN 26 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'act_date'\n      WHEN 1 THEN 'aero_cht'\n      WHEN 2 THEN 'c_ldg_rts'\n      WHEN 3 THEN 'cbd_dir'\n      WHEN 4 THEN 'cbd_dist'\n      WHEN 5 THEN 'cert'\n      WHEN 6 THEN 'city'\n      WHEN 7 THEN 'cntl_twr'\n      WHEN 8 THEN 'code'\n      WHEN 9 THEN 'county'\n      WHEN 10 THEN 'cust_intl'\n      WHEN 11 THEN 'elevation'\n      WHEN 12 THEN 'faa_dist'\n      WHEN 13 THEN 'faa_region'\n      WHEN 14 THEN 'fac_type'\n      WHEN 15 THEN 'fac_use'\n      WHEN 16 THEN 'fed_agree'\n      WHEN 17 THEN 'full_name'\n      WHEN 18 THEN 'id'\n      WHEN 19 THEN 'joint_use'\n      WHEN 20 THEN 'latitude'\n      WHEN 21 THEN 'longitude'\n      WHEN 22 THEN 'major'\n      WHEN 23 THEN 'mil_rts'\n      WHEN 24 THEN 'own_type'\n      WHEN 25 THEN 'site_number'\n      WHEN 26 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'string'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'string'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'string'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'string'\n      WHEN 15 THEN 'string'\n      WHEN 16 THEN 'string'\n      WHEN 17 THEN 'string'\n      WHEN 18 THEN 'number'\n      WHEN 19 THEN 'string'\n      WHEN 20 THEN 'number'\n      WHEN 21 THEN 'number'\n      WHEN 22 THEN 'string'\n      WHEN 23 THEN 'string'\n      WHEN 24 THEN 'string'\n      WHEN 25 THEN 'string'\n      WHEN 26 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN base.\"act_date\"\n      WHEN 1 THEN base.\"aero_cht\"\n      WHEN 2 THEN base.\"c_ldg_rts\"\n      WHEN 3 THEN base.\"cbd_dir\"\n      WHEN 5 THEN base.\"cert\"\n      WHEN 6 THEN base.\"city\"\n      WHEN 7 THEN base.\"cntl_twr\"\n      WHEN 8 THEN base.\"code\"\n      WHEN 9 THEN base.\"county\"\n      WHEN 10 THEN base.\"cust_intl\"\n      WHEN 12 THEN base.\"faa_dist\"\n      WHEN 13 THEN base.\"faa_region\"\n      WHEN 14 THEN base.\"fac_type\"\n      WHEN 15 THEN base.\"fac_use\"\n      WHEN 16 THEN base.\"fed_agree\"\n      WHEN 17 THEN base.\"full_name\"\n      WHEN 19 THEN base.\"joint_use\"\n      WHEN 22 THEN base.\"major\"\n      WHEN 23 THEN base.\"mil_rts\"\n      WHEN 24 THEN base.\"own_type\"\n      WHEN 25 THEN base.\"site_number\"\n      WHEN 26 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 4 THEN MIN(CAST(base.\"cbd_dist\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"cbd_dist\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"elevation\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"elevation\") as VARCHAR)\n      WHEN 18 THEN MIN(CAST(base.\"id\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id\") as VARCHAR)\n      WHEN 20 THEN MIN(CAST(base.\"latitude\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"latitude\") as VARCHAR)\n      WHEN 21 THEN MIN(CAST(base.\"longitude\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"longitude\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,27,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\nSELECT\n  \"fieldName\",\n  \"fieldPath\",\n  \"fieldType\",\n  COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n  \"weight\"\nFROM __stage1\n;",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:04.437Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:04.502Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● index value map  - redshift

    Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e0cbc3ce-b2ef-42bb-8b15-b625a1dd2b5b",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:05.434Z",
      "Database": "dev",
      "Duration": 45563948,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 145, column 18\n  Position: 4570",
      "HasResultSet": false,
      "Id": "79276399-65b2-4e82-8ba3-550887cb4917",
      "RedshiftPid": 1073971327,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:05.530Z",
          "Duration": 45563948,
          "HasResultSet": false,
          "Id": "79276399-65b2-4e82-8ba3-550887cb4917:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:05.961Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:05.533Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 145, column 18\n  Position: 4570",
          "HasResultSet": false,
          "Id": "79276399-65b2-4e82-8ba3-550887cb4917:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'act_date'\n      WHEN 1 THEN 'aero_cht'\n      WHEN 2 THEN 'c_ldg_rts'\n      WHEN 3 THEN 'cbd_dir'\n      WHEN 4 THEN 'cbd_dist'\n      WHEN 5 THEN 'cert'\n      WHEN 6 THEN 'city'\n      WHEN 7 THEN 'cntl_twr'\n      WHEN 8 THEN 'code'\n      WHEN 9 THEN 'county'\n      WHEN 10 THEN 'cust_intl'\n      WHEN 11 THEN 'elevation'\n      WHEN 12 THEN 'faa_dist'\n      WHEN 13 THEN 'faa_region'\n      WHEN 14 THEN 'fac_type'\n      WHEN 15 THEN 'fac_use'\n      WHEN 16 THEN 'fed_agree'\n      WHEN 17 THEN 'full_name'\n      WHEN 18 THEN 'id'\n      WHEN 19 THEN 'joint_use'\n      WHEN 20 THEN 'latitude'\n      WHEN 21 THEN 'longitude'\n      WHEN 22 THEN 'major'\n      WHEN 23 THEN 'mil_rts'\n      WHEN 24 THEN 'own_type'\n      WHEN 25 THEN 'site_number'\n      WHEN 26 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'act_date'\n      WHEN 1 THEN 'aero_cht'\n      WHEN 2 THEN 'c_ldg_rts'\n      WHEN 3 THEN 'cbd_dir'\n      WHEN 4 THEN 'cbd_dist'\n      WHEN 5 THEN 'cert'\n      WHEN 6 THEN 'city'\n      WHEN 7 THEN 'cntl_twr'\n      WHEN 8 THEN 'code'\n      WHEN 9 THEN 'county'\n      WHEN 10 THEN 'cust_intl'\n      WHEN 11 THEN 'elevation'\n      WHEN 12 THEN 'faa_dist'\n      WHEN 13 THEN 'faa_region'\n      WHEN 14 THEN 'fac_type'\n      WHEN 15 THEN 'fac_use'\n      WHEN 16 THEN 'fed_agree'\n      WHEN 17 THEN 'full_name'\n      WHEN 18 THEN 'id'\n      WHEN 19 THEN 'joint_use'\n      WHEN 20 THEN 'latitude'\n      WHEN 21 THEN 'longitude'\n      WHEN 22 THEN 'major'\n      WHEN 23 THEN 'mil_rts'\n      WHEN 24 THEN 'own_type'\n      WHEN 25 THEN 'site_number'\n      WHEN 26 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'string'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'string'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'string'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'string'\n      WHEN 15 THEN 'string'\n      WHEN 16 THEN 'string'\n      WHEN 17 THEN 'string'\n      WHEN 18 THEN 'number'\n      WHEN 19 THEN 'string'\n      WHEN 20 THEN 'number'\n      WHEN 21 THEN 'number'\n      WHEN 22 THEN 'string'\n      WHEN 23 THEN 'string'\n      WHEN 24 THEN 'string'\n      WHEN 25 THEN 'string'\n      WHEN 26 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN base.\"act_date\"\n      WHEN 1 THEN base.\"aero_cht\"\n      WHEN 2 THEN base.\"c_ldg_rts\"\n      WHEN 3 THEN base.\"cbd_dir\"\n      WHEN 5 THEN base.\"cert\"\n      WHEN 6 THEN base.\"city\"\n      WHEN 7 THEN base.\"cntl_twr\"\n      WHEN 8 THEN base.\"code\"\n      WHEN 9 THEN base.\"county\"\n      WHEN 10 THEN base.\"cust_intl\"\n      WHEN 12 THEN base.\"faa_dist\"\n      WHEN 13 THEN base.\"faa_region\"\n      WHEN 14 THEN base.\"fac_type\"\n      WHEN 15 THEN base.\"fac_use\"\n      WHEN 16 THEN base.\"fed_agree\"\n      WHEN 17 THEN base.\"full_name\"\n      WHEN 19 THEN base.\"joint_use\"\n      WHEN 22 THEN base.\"major\"\n      WHEN 23 THEN base.\"mil_rts\"\n      WHEN 24 THEN base.\"own_type\"\n      WHEN 25 THEN base.\"site_number\"\n      WHEN 26 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 4 THEN MIN(CAST(base.\"cbd_dist\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"cbd_dist\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"elevation\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"elevation\") as VARCHAR)\n      WHEN 18 THEN MIN(CAST(base.\"id\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id\") as VARCHAR)\n      WHEN 20 THEN MIN(CAST(base.\"latitude\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"latitude\") as VARCHAR)\n      WHEN 21 THEN MIN(CAST(base.\"longitude\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"longitude\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,27,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\n, __stage2 AS (\n  SELECT\n    group_set,\n    base.\"fieldName\" as \"fieldName__0\",\n    CASE WHEN group_set=0 THEN\n      count(distinct base.\"fieldValue\")\n      END as \"cardinality__0\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      base.\"fieldValue\" as \"fieldValue\", \n      base.\"weight\"::DOUBLE PRECISION as \"weight\"\n      ) as __x)  ORDER BY  base.\"weight\" desc NULLS LAST ) FILTER (WHERE group_set=0))[1:10]),'[]'::JSONB) as \"values__0\"\n  FROM __stage1 as base\n  CROSS JOIN GENERATE_SERIES(0,0,1) as group_set\n  WHERE base.\"fieldType\"='string'\n  GROUP BY 1,2\n)\nSELECT\n  \"fieldName__0\" as \"fieldName\",\n  (ARRAY_AGG(\"cardinality__0\") FILTER (WHERE group_set=0 AND \"cardinality__0\" IS NOT NULL))[1] as \"cardinality\",\n  (ARRAY_AGG(\"values__0\") FILTER (WHERE group_set=0 AND \"values__0\" IS NOT NULL))[1] as \"values\"\nFROM __stage2\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 1000\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:05.961Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:06.026Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● index no sample rows - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2c520e98-e4e6-4078-8796-e6cf49a4e8c8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:08.303Z",
      "Database": "dev",
      "Duration": 53174865,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308",
      "RedshiftPid": 1073954938,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:08.401Z",
          "Duration": 53174865,
          "HasResultSet": false,
          "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:08.853Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:08.404Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:08.853Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:08.918Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."state"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage1 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2c520e98-e4e6-4078-8796-e6cf49a4e8c8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:08.303Z",
      "Database": "dev",
      "Duration": 53174865,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308",
      "RedshiftPid": 1073954938,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:08.401Z",
          "Duration": 53174865,
          "HasResultSet": false,
          "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:08.853Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:08.404Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "4e598bd6-4ace-44e0-bd0b-aa19c3bb0308:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:08.853Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:08.918Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/db_index.spec.ts:96:8)

  ● index rows count - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b774dbea-383b-4fec-bc31-7e5897f1ce3c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:09.689Z",
      "Database": "dev",
      "Duration": 53404053,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 71\n  Position: 90",
      "HasResultSet": false,
      "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054",
      "RedshiftPid": 1073995900,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:09.785Z",
          "Duration": 53404053,
          "HasResultSet": false,
          "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:10.222Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:09.788Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 71\n  Position: 90",
          "HasResultSet": false,
          "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS(10)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage2 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage1\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage2 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:10.222Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:10.288Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT * from (SELECT * FROM "malloytest"."state_facts" TABLESAMPLE SYSTEM_ROWS(10)) as x limit 100000 )
    , __stage1 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'state'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."state"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM __stage0 as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage2 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage1
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage2 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "b774dbea-383b-4fec-bc31-7e5897f1ce3c",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:09.689Z",
      "Database": "dev",
      "Duration": 53404053,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 71\n  Position: 90",
      "HasResultSet": false,
      "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054",
      "RedshiftPid": 1073995900,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:09.785Z",
          "Duration": 53404053,
          "HasResultSet": false,
          "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:10.222Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:09.788Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM_ROWS\" in context \"FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS\", at line 2, column 71\n  Position: 90",
          "HasResultSet": false,
          "Id": "7f2a398f-c2ee-4e2f-a351-76e961477054:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"state_facts\" TABLESAMPLE SYSTEM_ROWS(10)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'state'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"state\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage2 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage1\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage2 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:10.222Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:10.288Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/db_index.spec.ts:110:10)

  ● index rows count - redshift

    query.run failed: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4bd08b84-3f8b-4531-9801-a3be8a3c2140",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:12.533Z",
      "Database": "dev",
      "Duration": 52060224,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"SYSTEM\" in context \"FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM\", at line 2, column 67\n  Position: 86",
      "HasResultSet": false,
      "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a",
      "RedshiftPid": 1073848435,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:12.671Z",
          "Duration": 52060224,
          "HasResultSet": false,
          "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:13.144Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:12.674Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM\" in context \"FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM\", at line 2, column 67\n  Position: 86",
          "HasResultSet": false,
          "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM (50)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'tail_num'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'tail_num'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage2 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage1\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage2 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:13.144Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:13.209Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT * from (SELECT * FROM "malloytest"."flights" TABLESAMPLE SYSTEM (50)) as x limit 100000 )
    , __stage1 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'tail_num'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'one'
          WHEN 1 THEN 'tail_num'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'string'
          WHEN 1 THEN 'string'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 0 THEN 'one'
          WHEN 1 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''  END as "fieldRange"
      FROM __stage0 as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage2 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage1
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."weight" as "weight",
       base."fieldValue" as "fieldValue"
    FROM __stage2 as base
    WHERE base."fieldName"='one'
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
    {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "4bd08b84-3f8b-4531-9801-a3be8a3c2140",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-02-28T02:48:12.533Z",
      "Database": "dev",
      "Duration": 52060224,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"SYSTEM\" in context \"FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM\", at line 2, column 67\n  Position: 86",
      "HasResultSet": false,
      "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a",
      "RedshiftPid": 1073848435,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-02-28T02:48:12.671Z",
          "Duration": 52060224,
          "HasResultSet": false,
          "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-02-28T02:48:13.144Z"
        },
        {
          "CreatedAt": "2025-02-28T02:48:12.674Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"SYSTEM\" in context \"FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM\", at line 2, column 67\n  Position: 86",
          "HasResultSet": false,
          "Id": "d4f30bd7-c97d-4e03-8ba8-f8dd7fa0b03a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT * from (SELECT * FROM \"malloytest\".\"flights\" TABLESAMPLE SYSTEM (50)) as x limit 100000 )\n, __stage1 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'tail_num'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN 'tail_num'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'string'\n      WHEN 1 THEN 'string'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 0 THEN 'one'\n      WHEN 1 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''  END as \"fieldRange\"\n  FROM __stage0 as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage2 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage1\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"weight\" as \"weight\",\n   base.\"fieldValue\" as \"fieldValue\"\nFROM __stage2 as base\nWHERE base.\"fieldName\"='one'\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-02-28T02:48:13.144Z"
        }
      ],
      "UpdatedAt": "2025-02-28T02:48:13.209Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n${JSON.stringify(statusResponse, null, 2)}`
      366 |       );
      367 |     }

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/db_index.spec.ts:121:8)


Test Suites: 10 failed, 33 skipped, 31 passed, 41 of 74 total
Tests:       254 failed, 292 skipped, 2 todo, 1196 passed, 1744 total
Snapshots:   0 total
Time:        1495.651 s
Ran all test suites.

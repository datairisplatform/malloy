
> malloy@0.0.1 test
> jest --runInBand nomodel

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "d__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        (ARRAY_AGG(CASE WHEN group_set=0 AND "c__0" IS NOT NULL THEN "c__0" END))[1] as "c",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "d__1"::DOUBLE PRECISION as "d"
          ) as __x)  ORDER BY  "d__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "p"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       base."state" as "state",
       base."c" as "c",
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as "d"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."p") as p_0 ON true
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" ~ '^(A|M)'
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        "popular_name__0" as "popular_name",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "popular_name__1" as "popular_name"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "nested_state"
      FROM __stage0
      GROUP BY 1,2
    )
    SELECT 
       base."state" as "state",
       am_states_0."state" as "am_state",
       COUNT(DISTINCT am_states_0."__distinct_key" || 'x' || (nested_state_0->>'__row_id')) as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM __stage1 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0."nested_state") __xx ))) as nested_state_0 ON true
    WHERE base."state"='CA'
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
          WHEN 1 THEN 'sql native'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'sql native'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'number'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'number'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'number'
          WHEN 15 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 2 THEN base."cancelled"
          WHEN 3 THEN base."carrier"
          WHEN 6 THEN base."destination"
          WHEN 8 THEN base."diverted"
          WHEN 9 THEN base."flight_num"
          WHEN 12 THEN base."origin"
          WHEN 13 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base."arr_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."arr_delay") as VARCHAR)
          WHEN 4 THEN MIN(CAST(base."dep_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."dep_delay") as VARCHAR)
          WHEN 7 THEN MIN(CAST(base."distance" as VARCHAR)) || ' to ' || CAST(MAX(base."distance") as VARCHAR)
          WHEN 10 THEN MIN(CAST(base."flight_time" as VARCHAR)) || ' to ' || CAST(MAX(base."flight_time") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."id2" as VARCHAR)) || ' to ' || CAST(MAX(base."id2") as VARCHAR)
          WHEN 14 THEN MIN(CAST(base."taxi_in" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_in") as VARCHAR)
          WHEN 15 THEN MIN(CAST(base."taxi_out" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_out") as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."flights" as base
      CROSS JOIN GENERATE_SERIES(0,16,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."fieldPath" as "fieldPath",
       base."fieldType" as "fieldType",
       base."fieldValue" as "fieldValue",
       base."weight" as "weight"
    FROM __stage1 as base
    WHERE base."fieldName"='carrier'
    ORDER BY 4 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "births_per_100k__1" IS NOT NULL THEN "births_per_100k__1" END))[1] as "births_per_100k"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1",
        CASE WHEN group_set=2 THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "births_per_100k__1" IS NOT NULL THEN "births_per_100k__1" END))[1] as "births_per_100k",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "total_births__2"::DOUBLE PRECISION as "total_births"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_name"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 1000

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX(CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END) OVER () as "m__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" IN ('CA','NY')
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "m__1" IS NOT NULL THEN "m__1" END))[1] as "m"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG(CASE WHEN group_set=0 AND "total_births__0" IS NOT NULL THEN "total_births__0" END))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_name"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END as "faa_region__1",
        CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END as "fac_type__5",
        CASE WHEN group_set=5 THEN
          COUNT(1)
          END as "c__5",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all___5",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all_state_region__5",
        MAX((CASE WHEN group_set=3 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END) as "all_of_this_type__5",
        MAX((CASE WHEN group_set=4 THEN
          COUNT(1)
          END)) OVER () as "all_top__5"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,5,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,3,7
    )
    SELECT
      "faa_region__1" as "faa_region",
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "c__1" IS NOT NULL THEN "c__1" END))[1] as "c",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "all___1" IS NOT NULL THEN "all___1" END))[1] as "all_",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "airport_count__1" IS NOT NULL THEN "airport_count__1" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__5" as "fac_type", 
        "c__5"::DOUBLE PRECISION as "c", 
        "all___5"::DOUBLE PRECISION as "all_", 
        "all_state_region__5"::DOUBLE PRECISION as "all_state_region", 
        "all_of_this_type__5"::DOUBLE PRECISION as "all_of_this_type", 
        "all_top__5"::DOUBLE PRECISION as "all_top"
        ) as __x)  ORDER BY  "c__5" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2,3,4)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set=3 THEN
          base."fac_type"
          END as "fac_type__3",
        CASE WHEN group_set IN (3,2) THEN
          base."major"
          END as "major__3",
        CASE WHEN group_set=3 THEN
          COUNT(1)
          END as "c__3",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all___3",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN
          base."major"
          END, CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all_major__3"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,6,7
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "c__1" IS NOT NULL THEN "c__1" END))[1] as "c",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "all___1" IS NOT NULL THEN "all___1" END))[1] as "all_",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "airport_count__1" IS NOT NULL THEN "airport_count__1" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__3" as "fac_type", 
        "major__3" as "major", 
        "c__3"::DOUBLE PRECISION as "c", 
        "all___3"::DOUBLE PRECISION as "all_", 
        "all_major__3"::DOUBLE PRECISION as "all_major"
        ) as __x)  ORDER BY  "c__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY base."popular_name"))*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__0" as "popular_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        UPPER(base."popular_name") as "upper_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY UPPER(base."popular_name")))*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "upper_name__0" as "upper_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300.0::FLOAT8) as "f__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300.0::FLOAT8)) as "ug__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "f__0" as "f",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "ug__1"::DOUBLE PRECISION as "ug"
        ) as __x)  ORDER BY  "ug__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER () as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__2" as "popular_name",
      "state__2" as "state",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "total_births__2" IS NOT NULL THEN "total_births__2" END))[1] as "total_births",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "all_births__2" IS NOT NULL THEN "all_births__2" END))[1] as "all_births",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "all_name__2" IS NOT NULL THEN "all_name__2" END))[1] as "all_name"
    FROM __stage0
    WHERE group_set NOT IN (0,1)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300::FLOAT8) as "abc__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300::FLOAT8)) as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END, FLOOR(base."airport_count"*1.0/300::FLOAT8)) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,5
    )
    SELECT
      "abc__0" as "abc",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "total_births__0" IS NOT NULL THEN "total_births__0" END))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "state__2" as "state", 
        "total_births__2"::DOUBLE PRECISION as "total_births", 
        "all_births__2"::DOUBLE PRECISION as "all_births", 
        "all_name__2"::DOUBLE PRECISION as "all_name"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_stuff"
    FROM __stage0
    WHERE group_set NOT IN (1)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "t__1"::DOUBLE PRECISION as "t") as __x)) FILTER (WHERE group_set=1))[1])))) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        2 as "two__0",
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "two__0" as "two",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 1 asc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."faa_region" as "faa_region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "airport_count__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "airport_count__2"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      WHERE (base."faa_region" IS NULL)
      AND ((group_set NOT IN (1) OR (group_set IN (1) AND base."state" IS NOT NULL)))
      AND ((group_set NOT IN (2) OR (group_set IN (2) AND base."state" IS NOT NULL)))
      GROUP BY 1,2,4,6
    )
    SELECT
      "faa_region__0" as "faa_region",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "airport_count__0" IS NOT NULL THEN "airport_count__0" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__2" as "state", 
        "airport_count__2"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:1]),'[]'::JSONB) as "by_state1"
    FROM __stage0
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airports__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."aircraft_count"),0)
          END as "aircrafts__2",
        CASE WHEN group_set=3 THEN
          base."state"
          END as "state__3",
        CASE WHEN group_set=3 THEN
          COALESCE(SUM(base."aircraft_count"),0)
          END as "aircrafts__3"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."popular_name" ~ 'I'
      GROUP BY 1,2,3,5,7
    )
    SELECT
      "popular_name__0" as "popular_name",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'airports')::double precision),0) as "airports"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "airports__1"::DOUBLE PRECISION as "airports"
          ) as __x)  ORDER BY  "airports__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 ASC NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as "aircrafts"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "aircrafts__2"::DOUBLE PRECISION as "aircrafts"
          ) as __x)  ORDER BY  "aircrafts__2" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 ASC NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view2",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as "aircrafts"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__3" as "state", 
          "aircrafts__3"::DOUBLE PRECISION as "aircrafts"
          ) as __x)  ORDER BY  "aircrafts__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 desc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view3"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     SELECT 
       '\' as "back"
    FROM (SELECT 1 as one) as base

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

  console.log
    Error in SQL:
     WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "P O P__0",
        j_o_space_0."popular_name" as "J P O P__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c o u n t__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "R O W__0",
        CASE WHEN group_set=0 THEN LAG((base."popular_name"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "l a g__0",
        CASE WHEN group_set=1 THEN
          j_o_space_0."state"
          END as "J S__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c o u n t__1"
      FROM "malloytest"."state_facts" as base
       LEFT JOIN "malloytest"."state_facts" AS j_o_space_0
        ON j_o_space_0."state"=base."state"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,7
    )
    SELECT
      "P O P__0" as "P O P",
      "J P O P__0" as "J P O P",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "c o u n t__0" IS NOT NULL THEN "c o u n t__0" END))[1] as "c o u n t",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "R O W__0" IS NOT NULL THEN "R O W__0" END))[1] as "R O W",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "l a g__0" IS NOT NULL THEN "l a g__0" END))[1] as "l a g",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "J S__1" as "J S", 
        "c o u n t__1"::DOUBLE PRECISION as "c o u n t"
        ) as __x)  ORDER BY  "c o u n t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by state"
    FROM __stage0
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

      at RedshiftTestConnection.runSQL (test/src/runtimes.ts:148:15)

FAIL test/src/databases/all/nomodel.spec.ts (194.969 s)
  ✓ parenthesize output field values - redshift (70532 ms)
  ✓ bug 151 which used to throw unknown dialect is still fixed- redshift (1612 ms)
  ✓ refine query from query - redshift (3215 ms)
  ✓ source- not -found  - redshift (44 ms)
  ✓ join_many - redshift (4123 ms)
  ✓ join_many condition no primary key - redshift (2796 ms)
  ✓ join_many filter multiple values - redshift (1436 ms)
  ✓ join_one condition no primary key - redshift (1465 ms)
  ✓ join_one filter multiple values - redshift (1445 ms)
  ✕ join_many cross from  - redshift (1473 ms)
  ✓ join_one only  - redshift (1567 ms)
  ✓ join_many cross ON  - redshift (1573 ms)
  ✓ limit - provided - redshift (1365 ms)
  ✓ join inner- redshift (1655 ms)
  ✓ join left - redshift (1408 ms)
  ✓ join right - redshift (1583 ms)
  ✓ join full - redshift (1411 ms)
  ✓ leafy count - redshift (1420 ms)
  ✕ nest/unnest -basic - redshift (1455 ms)
  ✓ count at root should not use distinct key - redshift (1558 ms)
  ✕ leafy nested count - redshift (1436 ms)
  ✕ basic index - redshift (2815 ms)
  ✕ number as null 2 - redshift (1438 ms)
  ✓ sql block- redshift (3063 ms)
  ✓ avg ignore null- redshift (2814 ms)
  ✓ limit - not provided - redshift (1420 ms)
  ✕ ungrouped top level - redshift (1387 ms)
  ✕ ungrouped top level with nested  - redshift (1361 ms)
  ✕ ungrouped - eliminate rows  - redshift (1392 ms)
  ✕ ungrouped nested with no grouping above - redshift (1345 ms)
  ✕ ungrouped - partial grouping - redshift (1358 ms)
  ✕ ungrouped - all nested - redshift (1426 ms)
  ✕ ungrouped nested  - redshift (1370 ms)
  ✕ ungrouped nested expression  - redshift (1520 ms)
  ✕ ungrouped nested group by float  - redshift (1501 ms)
  ✓ run simple sql - redshift (2861 ms)
  ✓ simple sql is exactly as written - redshift (1421 ms)
  ✓ source from query defined as sql query - redshift (1415 ms)
  ✓ source from query defined as other query - redshift (1404 ms)
  ✕ all with parameters - basic  - redshift (1330 ms)
  ✕ all with parameters - nest  - redshift (1354 ms)
  ✕ single value to udf - redshift (1410 ms)
  ✕ Multi value to udf - redshift (1481 ms)
  ✕ Multi value to udf group by - redshift (1354 ms)
  ✓ sql as source - redshift (4154 ms)
  ✓ sql directly - redshift (1413 ms)
  ✓ sql with turducken- redshift (4019 ms)
  ✓ local declarations external query - redshift (1470 ms)
  ✓ local declarations named query - redshift (1449 ms)
  ✓ local declarations refined named query - redshift (1457 ms)
  ✓ regexp match- redshift (3942 ms)
  ✓ substitution precedence- redshift (2917 ms)
  ✕ array unnest - redshift (1 ms)
  ✕ array unnest x 2 - redshift
  ✕ nest null - redshift (1413 ms)
  ✕ Nested pipelines sort properly - redshift (1528 ms)
  ✕ number as null- redshift (1371 ms)
  ✓ removes surpuflous order_by - solo aggregates - redshift (1414 ms)
  ✓ removes surpuflous order_by - pipeline - redshift (1411 ms)
  ✓ removes surpuflous order_by - joined_query - redshift (1460 ms)
  ✓ removes surpuflous order_by - joined_query pipeline - redshift (1476 ms)
  ○ skipped can unnest simply from file - redshift
  ○ skipped can unnest from file - redshift
  ○ skipped can double unnest - redshift
  quoting and strings
    ✓ backslash quote (2959 ms)
    ✕ backslash backslash (1349 ms)
    ✓ source with reserve word (1435 ms)
    ✕ spaces in names (1408 ms)

  ● join_many cross from  - redshift

    SQL Generated:
      SELECT 
         count(distinct CONCAT(base."state",a_0."state")) as "row_count",
         COUNT(DISTINCT base."__distinct_key") as "left_count",
         COUNT(DISTINCT a_0."__distinct_key") as "right_count",
         COALESCE(CAST((
          (
            SUM(DISTINCT
              (CAST(ROUND(COALESCE(base."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
              (STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 1, 15), 16)::DECIMAL(38,0) * 4294967296 + STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 17, 8), 16)::DECIMAL(38,0))
            ))
            -
             SUM(DISTINCT (STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 1, 15), 16)::DECIMAL(38,0) * 4294967296 + STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 17, 8), 16)::DECIMAL(38,0)))
          )/(1*1.0)) AS DOUBLE PRECISION),0) as "left_sum",
         COALESCE(CAST((
          (
            SUM(DISTINCT
              (CAST(ROUND(COALESCE(a_0."airport_count",0)*(1*1.0), 9) AS DECIMAL) +
              (STRTOL(SUBSTRING(MD5(CAST(a_0."__distinct_key" AS VARCHAR)), 1, 15), 16)::DECIMAL(38,0) * 4294967296 + STRTOL(SUBSTRING(MD5(CAST(a_0."__distinct_key" AS VARCHAR)), 17, 8), 16)::DECIMAL(38,0))
            ))
            -
             SUM(DISTINCT (STRTOL(SUBSTRING(MD5(CAST(a_0."__distinct_key" AS VARCHAR)), 1, 15), 16)::DECIMAL(38,0) * 4294967296 + STRTOL(SUBSTRING(MD5(CAST(a_0."__distinct_key" AS VARCHAR)), 17, 8), 16)::DECIMAL(38,0)))
          )/(1*1.0)) AS DOUBLE PRECISION),0) as "right_sum",
         ROUND((COALESCE(CAST((
          (
            SUM(DISTINCT
              (CAST(ROUND(COALESCE((base."airport_count"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +
              (STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 1, 15), 16)::DECIMAL(38,0) * 4294967296 + STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 17, 8), 16)::DECIMAL(38,0))
            ))
            -
             SUM(DISTINCT (STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 1, 15), 16)::DECIMAL(38,0) * 4294967296 + STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 17, 8), 16)::DECIMAL(38,0)))
          )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::FLOAT8) as "left_small_sum",
         ROUND((COALESCE(CAST((
          (
            SUM(DISTINCT
              (CAST(ROUND(COALESCE((base."airport_count"*1.0/10000),0)*(1*1.0), 9) AS DECIMAL) +
              (STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 1, 15), 16)::DECIMAL(38,0) * 4294967296 + STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 17, 8), 16)::DECIMAL(38,0))
            ))
            -
             SUM(DISTINCT (STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 1, 15), 16)::DECIMAL(38,0) * 4294967296 + STRTOL(SUBSTRING(MD5(CAST(base."__distinct_key" AS VARCHAR)), 17, 8), 16)::DECIMAL(38,0)))
          )/(1*1.0)) AS DOUBLE PRECISION),0)*10000)::FLOAT8) as "right_small_sum"
      FROM (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
            SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
            SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
            SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
            SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
       LEFT JOIN (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
            SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
            SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
            SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
            SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) AS a_0
        ON 1=1
      
    Expected {left_small_sum: 19701} Got: 0
    Expected {right_small_sum: 19701} Got: 0

      220 |           right_small_sum is round(x.sum() * 10000)
      221 |       }
    > 222 |     `).malloyResultMatches(runtime, {
          |        ^
      223 |       row_count: 51 * 51,
      224 |       left_sum: 19701,
      225 |       right_sum: 19701,

      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:222:8)

  ● nest/unnest -basic - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "d__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        (ARRAY_AGG(CASE WHEN group_set=0 AND "c__0" IS NOT NULL THEN "c__0" END))[1] as "c",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "d__1"::DOUBLE PRECISION as "d"
          ) as __x)  ORDER BY  "d__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "p"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       base."state" as "state",
       base."c" as "c",
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as "d"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."p") as p_0 ON true
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "31c61d8d-20aa-4f4b-83d2-17dae52e5a9e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:10.169Z",
      "Database": "dev",
      "Duration": 45610436,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 25, column 18\n  Position: 775",
      "HasResultSet": false,
      "Id": "d95830bc-6b2e-4279-b742-5307739bc0c7",
      "RedshiftPid": 1073905766,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:10.273Z",
          "Duration": 45610436,
          "HasResultSet": false,
          "Id": "d95830bc-6b2e-4279-b742-5307739bc0c7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:10.689Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:10.277Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 25, column 18\n  Position: 775",
          "HasResultSet": false,
          "Id": "d95830bc-6b2e-4279-b742-5307739bc0c7:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"d__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    (ARRAY_AGG(CASE WHEN group_set=0 AND \"c__0\" IS NOT NULL THEN \"c__0\" END))[1] as \"c\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"d__1\"::DOUBLE PRECISION as \"d\"\n      ) as __x)  ORDER BY  \"d__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"p\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   base.\"state\" as \"state\",\n   base.\"c\" as \"c\",\n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as \"d\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"p\") as p_0 ON true\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:10.689Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:10.745Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "d__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        (ARRAY_AGG(CASE WHEN group_set=0 AND "c__0" IS NOT NULL THEN "c__0" END))[1] as "c",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "d__1"::DOUBLE PRECISION as "d"
          ) as __x)  ORDER BY  "d__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "p"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       base."state" as "state",
       base."c" as "c",
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as "d"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."p") as p_0 ON true
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "c__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "d__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,4
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        (ARRAY_AGG(CASE WHEN group_set=0 AND "c__0" IS NOT NULL THEN "c__0" END))[1] as "c",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "popular_name__1" as "popular_name", 
          "d__1"::DOUBLE PRECISION as "d"
          ) as __x)  ORDER BY  "d__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "p"
      FROM __stage0
      GROUP BY 1
    )
    SELECT 
       base."state" as "state",
       base."c" as "c",
       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as "d"
    FROM __stage1 as base
    LEFT JOIN JSONB_ARRAY_ELEMENTS(base."p") as p_0 ON true
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "31c61d8d-20aa-4f4b-83d2-17dae52e5a9e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:10.169Z",
      "Database": "dev",
      "Duration": 45610436,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 25, column 18\n  Position: 775",
      "HasResultSet": false,
      "Id": "d95830bc-6b2e-4279-b742-5307739bc0c7",
      "RedshiftPid": 1073905766,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:10.273Z",
          "Duration": 45610436,
          "HasResultSet": false,
          "Id": "d95830bc-6b2e-4279-b742-5307739bc0c7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:10.689Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:10.277Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 25, column 18\n  Position: 775",
          "HasResultSet": false,
          "Id": "d95830bc-6b2e-4279-b742-5307739bc0c7:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"c__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"d__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,4\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    (ARRAY_AGG(CASE WHEN group_set=0 AND \"c__0\" IS NOT NULL THEN \"c__0\" END))[1] as \"c\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"popular_name__1\" as \"popular_name\", \n      \"d__1\"::DOUBLE PRECISION as \"d\"\n      ) as __x)  ORDER BY  \"d__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"p\"\n  FROM __stage0\n  GROUP BY 1\n)\nSELECT \n   base.\"state\" as \"state\",\n   base.\"c\" as \"c\",\n   COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(p_0,'d')::double precision),0) as \"d\"\nFROM __stage1 as base\nLEFT JOIN JSONB_ARRAY_ELEMENTS(base.\"p\") as p_0 ON true\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:10.689Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:10.745Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:476:10)

  ● leafy nested count - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" ~ '^(A|M)'
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        "popular_name__0" as "popular_name",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "popular_name__1" as "popular_name"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "nested_state"
      FROM __stage0
      GROUP BY 1,2
    )
    SELECT 
       base."state" as "state",
       am_states_0."state" as "am_state",
       COUNT(DISTINCT am_states_0."__distinct_key" || 'x' || (nested_state_0->>'__row_id')) as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM __stage1 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0."nested_state") __xx ))) as nested_state_0 ON true
    WHERE base."state"='CA'
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a0bc0e9f-13ee-41f3-8048-334d1708f2b8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:13.186Z",
      "Database": "dev",
      "Duration": 51348212,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
      "HasResultSet": false,
      "Id": "df65beff-7094-4331-8d3b-4c3a44344f6c",
      "RedshiftPid": 1073799266,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:13.291Z",
          "Duration": 51348212,
          "HasResultSet": false,
          "Id": "df65beff-7094-4331-8d3b-4c3a44344f6c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:13.795Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:13.294Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
          "HasResultSet": false,
          "Id": "df65beff-7094-4331-8d3b-4c3a44344f6c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" ~ '^(A|M)'\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    \"popular_name__0\" as \"popular_name\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"popular_name__1\" as \"popular_name\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"nested_state\"\n  FROM __stage0\n  GROUP BY 1,2\n)\nSELECT \n   base.\"state\" as \"state\",\n   am_states_0.\"state\" as \"am_state\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\" || 'x' || (nested_state_0->>'__row_id')) as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as \"__distinct_key\", x.*  FROM __stage1 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0.\"nested_state\") __xx ))) as nested_state_0 ON true\nWHERE base.\"state\"='CA'\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:13.795Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:13.859Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" ~ '^(A|M)'
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        "popular_name__0" as "popular_name",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "popular_name__1" as "popular_name"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "nested_state"
      FROM __stage0
      GROUP BY 1,2
    )
    SELECT 
       base."state" as "state",
       am_states_0."state" as "am_state",
       COUNT(DISTINCT am_states_0."__distinct_key" || 'x' || (nested_state_0->>'__row_id')) as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM __stage1 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0."nested_state") __xx ))) as nested_state_0 ON true
    WHERE base."state"='CA'
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" ~ '^(A|M)'
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "state__0" as "state",
        "popular_name__0" as "popular_name",
        COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "popular_name__1" as "popular_name"
          ) as __x)  ORDER BY  "state__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "nested_state"
      FROM __stage0
      GROUP BY 1,2
    )
    SELECT 
       base."state" as "state",
       am_states_0."state" as "am_state",
       COUNT(DISTINCT am_states_0."__distinct_key" || 'x' || (nested_state_0->>'__row_id')) as "leafy_count",
       COUNT(DISTINCT base."__distinct_key") as "root_count"
    FROM (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM "malloytest"."state_facts" as x) as base
     LEFT JOIN (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||
          SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as "__distinct_key", x.*  FROM __stage1 as x) AS am_states_0
      ON base."state"=am_states_0."state"
    LEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0."nested_state") __xx ))) as nested_state_0 ON true
    WHERE base."state"='CA'
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a0bc0e9f-13ee-41f3-8048-334d1708f2b8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:13.186Z",
      "Database": "dev",
      "Duration": 51348212,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
      "HasResultSet": false,
      "Id": "df65beff-7094-4331-8d3b-4c3a44344f6c",
      "RedshiftPid": 1073799266,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:13.291Z",
          "Duration": 51348212,
          "HasResultSet": false,
          "Id": "df65beff-7094-4331-8d3b-4c3a44344f6c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:13.795Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:13.294Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 18\n  Position: 682",
          "HasResultSet": false,
          "Id": "df65beff-7094-4331-8d3b-4c3a44344f6c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" ~ '^(A|M)'\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"state__0\" as \"state\",\n    \"popular_name__0\" as \"popular_name\",\n    COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"popular_name__1\" as \"popular_name\"\n      ) as __x)  ORDER BY  \"state__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"nested_state\"\n  FROM __stage0\n  GROUP BY 1,2\n)\nSELECT \n   base.\"state\" as \"state\",\n   am_states_0.\"state\" as \"am_state\",\n   COUNT(DISTINCT am_states_0.\"__distinct_key\" || 'x' || (nested_state_0->>'__row_id')) as \"leafy_count\",\n   COUNT(DISTINCT base.\"__distinct_key\") as \"root_count\"\nFROM (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as \"__distinct_key\", x.*  FROM \"malloytest\".\"state_facts\" as x) as base\n LEFT JOIN (SELECT SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 1, 8) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 9, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 13, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 17, 4) || '-' ||\n      SUBSTRING(MD5(RANDOM()::text || current_timestamp::text), 21, 12) as \"__distinct_key\", x.*  FROM __stage1 as x) AS am_states_0\n  ON base.\"state\"=am_states_0.\"state\"\nLEFT JOIN UNNEST(ARRAY((SELECT jsonb_build_object('__row_number', row_number() over())|| __xx::jsonb as b FROM  JSONB_ARRAY_ELEMENTS(am_states_0.\"nested_state\") __xx ))) as nested_state_0 ON true\nWHERE base.\"state\"='CA'\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:13.795Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:13.859Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:523:10)

  ● basic index - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
          WHEN 1 THEN 'sql native'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'sql native'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'number'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'number'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'number'
          WHEN 15 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 2 THEN base."cancelled"
          WHEN 3 THEN base."carrier"
          WHEN 6 THEN base."destination"
          WHEN 8 THEN base."diverted"
          WHEN 9 THEN base."flight_num"
          WHEN 12 THEN base."origin"
          WHEN 13 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base."arr_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."arr_delay") as VARCHAR)
          WHEN 4 THEN MIN(CAST(base."dep_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."dep_delay") as VARCHAR)
          WHEN 7 THEN MIN(CAST(base."distance" as VARCHAR)) || ' to ' || CAST(MAX(base."distance") as VARCHAR)
          WHEN 10 THEN MIN(CAST(base."flight_time" as VARCHAR)) || ' to ' || CAST(MAX(base."flight_time") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."id2" as VARCHAR)) || ' to ' || CAST(MAX(base."id2") as VARCHAR)
          WHEN 14 THEN MIN(CAST(base."taxi_in" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_in") as VARCHAR)
          WHEN 15 THEN MIN(CAST(base."taxi_out" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_out") as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."flights" as base
      CROSS JOIN GENERATE_SERIES(0,16,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."fieldPath" as "fieldPath",
       base."fieldType" as "fieldType",
       base."fieldValue" as "fieldValue",
       base."weight" as "weight"
    FROM __stage1 as base
    WHERE base."fieldName"='carrier'
    ORDER BY 4 ASC NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6f0fd241-46cf-4d75-ae02-8ea4db1d15d9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:16.044Z",
      "Database": "dev",
      "Duration": 45709065,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "e7563149-3686-4841-a0a4-0c3329ddb273",
      "RedshiftPid": 1073889386,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:16.132Z",
          "Duration": 45709065,
          "HasResultSet": false,
          "Id": "e7563149-3686-4841-a0a4-0c3329ddb273:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:16.596Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:16.136Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "e7563149-3686-4841-a0a4-0c3329ddb273:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n      WHEN 1 THEN 'sql native'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'sql native'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'number'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'number'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'number'\n      WHEN 15 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 2 THEN base.\"cancelled\"\n      WHEN 3 THEN base.\"carrier\"\n      WHEN 6 THEN base.\"destination\"\n      WHEN 8 THEN base.\"diverted\"\n      WHEN 9 THEN base.\"flight_num\"\n      WHEN 12 THEN base.\"origin\"\n      WHEN 13 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base.\"arr_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"arr_delay\") as VARCHAR)\n      WHEN 4 THEN MIN(CAST(base.\"dep_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"dep_delay\") as VARCHAR)\n      WHEN 7 THEN MIN(CAST(base.\"distance\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"distance\") as VARCHAR)\n      WHEN 10 THEN MIN(CAST(base.\"flight_time\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"flight_time\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"id2\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id2\") as VARCHAR)\n      WHEN 14 THEN MIN(CAST(base.\"taxi_in\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_in\") as VARCHAR)\n      WHEN 15 THEN MIN(CAST(base.\"taxi_out\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_out\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"flights\" as base\n  CROSS JOIN GENERATE_SERIES(0,16,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"fieldPath\" as \"fieldPath\",\n   base.\"fieldType\" as \"fieldType\",\n   base.\"fieldValue\" as \"fieldValue\",\n   base.\"weight\" as \"weight\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='carrier'\nORDER BY 4 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:16.596Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:16.662Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
          WHEN 1 THEN 'sql native'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'sql native'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'number'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'number'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'number'
          WHEN 15 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 2 THEN base."cancelled"
          WHEN 3 THEN base."carrier"
          WHEN 6 THEN base."destination"
          WHEN 8 THEN base."diverted"
          WHEN 9 THEN base."flight_num"
          WHEN 12 THEN base."origin"
          WHEN 13 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base."arr_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."arr_delay") as VARCHAR)
          WHEN 4 THEN MIN(CAST(base."dep_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."dep_delay") as VARCHAR)
          WHEN 7 THEN MIN(CAST(base."distance" as VARCHAR)) || ' to ' || CAST(MAX(base."distance") as VARCHAR)
          WHEN 10 THEN MIN(CAST(base."flight_time" as VARCHAR)) || ' to ' || CAST(MAX(base."flight_time") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."id2" as VARCHAR)) || ' to ' || CAST(MAX(base."id2") as VARCHAR)
          WHEN 14 THEN MIN(CAST(base."taxi_in" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_in") as VARCHAR)
          WHEN 15 THEN MIN(CAST(base."taxi_out" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_out") as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."flights" as base
      CROSS JOIN GENERATE_SERIES(0,16,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."fieldPath" as "fieldPath",
       base."fieldType" as "fieldType",
       base."fieldValue" as "fieldValue",
       base."weight" as "weight"
    FROM __stage1 as base
    WHERE base."fieldName"='carrier'
    ORDER BY 4 ASC NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldName",
        CASE group_set
          WHEN 0 THEN 'arr_delay'
          WHEN 1 THEN 'arr_time'
          WHEN 2 THEN 'cancelled'
          WHEN 3 THEN 'carrier'
          WHEN 4 THEN 'dep_delay'
          WHEN 5 THEN 'dep_time'
          WHEN 6 THEN 'destination'
          WHEN 7 THEN 'distance'
          WHEN 8 THEN 'diverted'
          WHEN 9 THEN 'flight_num'
          WHEN 10 THEN 'flight_time'
          WHEN 11 THEN 'id2'
          WHEN 12 THEN 'origin'
          WHEN 13 THEN 'tail_num'
          WHEN 14 THEN 'taxi_in'
          WHEN 15 THEN 'taxi_out'
        END as "fieldPath",
        CASE group_set
          WHEN 0 THEN 'number'
          WHEN 1 THEN 'sql native'
          WHEN 2 THEN 'string'
          WHEN 3 THEN 'string'
          WHEN 4 THEN 'number'
          WHEN 5 THEN 'sql native'
          WHEN 6 THEN 'string'
          WHEN 7 THEN 'number'
          WHEN 8 THEN 'string'
          WHEN 9 THEN 'string'
          WHEN 10 THEN 'number'
          WHEN 11 THEN 'number'
          WHEN 12 THEN 'string'
          WHEN 13 THEN 'string'
          WHEN 14 THEN 'number'
          WHEN 15 THEN 'number'
        END as "fieldType",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)
          WHEN 2 THEN base."cancelled"
          WHEN 3 THEN base."carrier"
          WHEN 6 THEN base."destination"
          WHEN 8 THEN base."diverted"
          WHEN 9 THEN base."flight_num"
          WHEN 12 THEN base."origin"
          WHEN 13 THEN base."tail_num"
        END as "fieldValue",
       COUNT(*) as "weight",
        CASE group_set
          WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base."arr_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."arr_delay") as VARCHAR)
          WHEN 4 THEN MIN(CAST(base."dep_delay" as VARCHAR)) || ' to ' || CAST(MAX(base."dep_delay") as VARCHAR)
          WHEN 7 THEN MIN(CAST(base."distance" as VARCHAR)) || ' to ' || CAST(MAX(base."distance") as VARCHAR)
          WHEN 10 THEN MIN(CAST(base."flight_time" as VARCHAR)) || ' to ' || CAST(MAX(base."flight_time") as VARCHAR)
          WHEN 11 THEN MIN(CAST(base."id2" as VARCHAR)) || ' to ' || CAST(MAX(base."id2") as VARCHAR)
          WHEN 14 THEN MIN(CAST(base."taxi_in" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_in") as VARCHAR)
          WHEN 15 THEN MIN(CAST(base."taxi_out" as VARCHAR)) || ' to ' || CAST(MAX(base."taxi_out") as VARCHAR)
        END as "fieldRange"
      FROM "malloytest"."flights" as base
      CROSS JOIN GENERATE_SERIES(0,16,1) as group_set
      GROUP BY 1,2,3,4,5
    )
    , __stage1 AS (
      SELECT
        "fieldName",
        "fieldPath",
        "fieldType",
        COALESCE("fieldValue", "fieldRange") as "fieldValue",
        "weight"
      FROM __stage0
    )
    SELECT 
       base."fieldName" as "fieldName",
       base."fieldPath" as "fieldPath",
       base."fieldType" as "fieldType",
       base."fieldValue" as "fieldValue",
       base."weight" as "weight"
    FROM __stage1 as base
    WHERE base."fieldName"='carrier'
    ORDER BY 4 ASC NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "6f0fd241-46cf-4d75-ae02-8ea4db1d15d9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:16.044Z",
      "Database": "dev",
      "Duration": 45709065,
      "Error": "Query #2 failed with ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
      "HasResultSet": false,
      "Id": "e7563149-3686-4841-a0a4-0c3329ddb273",
      "RedshiftPid": 1073889386,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:16.132Z",
          "Duration": 45709065,
          "HasResultSet": false,
          "Id": "e7563149-3686-4841-a0a4-0c3329ddb273:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:16.596Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:16.136Z",
          "Duration": -1,
          "Error": "ERROR: Specified types or functions (one per INFO message) not supported on Redshift tables.",
          "HasResultSet": false,
          "Id": "e7563149-3686-4841-a0a4-0c3329ddb273:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldName\",\n    CASE group_set\n      WHEN 0 THEN 'arr_delay'\n      WHEN 1 THEN 'arr_time'\n      WHEN 2 THEN 'cancelled'\n      WHEN 3 THEN 'carrier'\n      WHEN 4 THEN 'dep_delay'\n      WHEN 5 THEN 'dep_time'\n      WHEN 6 THEN 'destination'\n      WHEN 7 THEN 'distance'\n      WHEN 8 THEN 'diverted'\n      WHEN 9 THEN 'flight_num'\n      WHEN 10 THEN 'flight_time'\n      WHEN 11 THEN 'id2'\n      WHEN 12 THEN 'origin'\n      WHEN 13 THEN 'tail_num'\n      WHEN 14 THEN 'taxi_in'\n      WHEN 15 THEN 'taxi_out'\n    END as \"fieldPath\",\n    CASE group_set\n      WHEN 0 THEN 'number'\n      WHEN 1 THEN 'sql native'\n      WHEN 2 THEN 'string'\n      WHEN 3 THEN 'string'\n      WHEN 4 THEN 'number'\n      WHEN 5 THEN 'sql native'\n      WHEN 6 THEN 'string'\n      WHEN 7 THEN 'number'\n      WHEN 8 THEN 'string'\n      WHEN 9 THEN 'string'\n      WHEN 10 THEN 'number'\n      WHEN 11 THEN 'number'\n      WHEN 12 THEN 'string'\n      WHEN 13 THEN 'string'\n      WHEN 14 THEN 'number'\n      WHEN 15 THEN 'number'\n    END as \"fieldType\",  CASE group_set WHEN 99999 THEN CAST(NULL as VARCHAR)\n      WHEN 2 THEN base.\"cancelled\"\n      WHEN 3 THEN base.\"carrier\"\n      WHEN 6 THEN base.\"destination\"\n      WHEN 8 THEN base.\"diverted\"\n      WHEN 9 THEN base.\"flight_num\"\n      WHEN 12 THEN base.\"origin\"\n      WHEN 13 THEN base.\"tail_num\"\n    END as \"fieldValue\",\n   COUNT(*) as \"weight\",\n    CASE group_set\n      WHEN 99999 THEN ''    WHEN 0 THEN MIN(CAST(base.\"arr_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"arr_delay\") as VARCHAR)\n      WHEN 4 THEN MIN(CAST(base.\"dep_delay\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"dep_delay\") as VARCHAR)\n      WHEN 7 THEN MIN(CAST(base.\"distance\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"distance\") as VARCHAR)\n      WHEN 10 THEN MIN(CAST(base.\"flight_time\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"flight_time\") as VARCHAR)\n      WHEN 11 THEN MIN(CAST(base.\"id2\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"id2\") as VARCHAR)\n      WHEN 14 THEN MIN(CAST(base.\"taxi_in\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_in\") as VARCHAR)\n      WHEN 15 THEN MIN(CAST(base.\"taxi_out\" as VARCHAR)) || ' to ' || CAST(MAX(base.\"taxi_out\") as VARCHAR)\n    END as \"fieldRange\"\n  FROM \"malloytest\".\"flights\" as base\n  CROSS JOIN GENERATE_SERIES(0,16,1) as group_set\n  GROUP BY 1,2,3,4,5\n)\n, __stage1 AS (\n  SELECT\n    \"fieldName\",\n    \"fieldPath\",\n    \"fieldType\",\n    COALESCE(\"fieldValue\", \"fieldRange\") as \"fieldValue\",\n    \"weight\"\n  FROM __stage0\n)\nSELECT \n   base.\"fieldName\" as \"fieldName\",\n   base.\"fieldPath\" as \"fieldPath\",\n   base.\"fieldType\" as \"fieldType\",\n   base.\"fieldValue\" as \"fieldValue\",\n   base.\"weight\" as \"weight\"\nFROM __stage1 as base\nWHERE base.\"fieldName\"='carrier'\nORDER BY 4 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:16.596Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:16.662Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:543:10)

  ● number as null 2 - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "28c808a8-cc6b-4945-9320-390bda7e095f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:17.396Z",
      "Database": "dev",
      "Duration": 44226777,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "5d7c3e9e-d493-4be0-96cd-9f719f85b7c5",
      "RedshiftPid": 1073979513,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:17.496Z",
          "Duration": 44226777,
          "HasResultSet": false,
          "Id": "5d7c3e9e-d493-4be0-96cd-9f719f85b7c5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:17.917Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:17.499Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "5d7c3e9e-d493-4be0-96cd-9f719f85b7c5:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:17.917Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:17.980Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "28c808a8-cc6b-4945-9320-390bda7e095f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:17.396Z",
      "Database": "dev",
      "Duration": 44226777,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "5d7c3e9e-d493-4be0-96cd-9f719f85b7c5",
      "RedshiftPid": 1073979513,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:17.496Z",
          "Duration": 44226777,
          "HasResultSet": false,
          "Id": "5d7c3e9e-d493-4be0-96cd-9f719f85b7c5:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:17.917Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:17.499Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "5d7c3e9e-d493-4be0-96cd-9f719f85b7c5:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:17.917Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:17.980Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:562:10)

  ● ungrouped top level - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "births_per_100k__1" IS NOT NULL THEN "births_per_100k__1" END))[1] as "births_per_100k"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "914d7466-1387-40e3-8b06-5926ad958f52",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:26.152Z",
      "Database": "dev",
      "Duration": 44347206,
      "Error": "Query #2 failed with ERROR: function array_agg(double precision) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "87c44987-44a4-4766-b7ee-e9e3bc1c0731",
      "RedshiftPid": 1073954923,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:26.252Z",
          "Duration": 44347206,
          "HasResultSet": false,
          "Id": "87c44987-44a4-4766-b7ee-e9e3bc1c0731:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:26.703Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:26.256Z",
          "Duration": -1,
          "Error": "ERROR: function array_agg(double precision) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "87c44987-44a4-4766-b7ee-e9e3bc1c0731:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000::FLOAT8) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"births_per_100k__1\" IS NOT NULL THEN \"births_per_100k__1\" END))[1] as \"births_per_100k\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:26.703Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:26.769Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "births_per_100k__1" IS NOT NULL THEN "births_per_100k__1" END))[1] as "births_per_100k"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "births_per_100k__1" IS NOT NULL THEN "births_per_100k__1" END))[1] as "births_per_100k"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "914d7466-1387-40e3-8b06-5926ad958f52",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:26.152Z",
      "Database": "dev",
      "Duration": 44347206,
      "Error": "Query #2 failed with ERROR: function array_agg(double precision) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "87c44987-44a4-4766-b7ee-e9e3bc1c0731",
      "RedshiftPid": 1073954923,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:26.252Z",
          "Duration": 44347206,
          "HasResultSet": false,
          "Id": "87c44987-44a4-4766-b7ee-e9e3bc1c0731:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:26.703Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:26.256Z",
          "Duration": -1,
          "Error": "ERROR: function array_agg(double precision) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "87c44987-44a4-4766-b7ee-e9e3bc1c0731:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000::FLOAT8) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"births_per_100k__1\" IS NOT NULL THEN \"births_per_100k__1\" END))[1] as \"births_per_100k\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:26.703Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:26.769Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:615:11)

  ● ungrouped top level with nested  - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1",
        CASE WHEN group_set=2 THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "births_per_100k__1" IS NOT NULL THEN "births_per_100k__1" END))[1] as "births_per_100k",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "total_births__2"::DOUBLE PRECISION as "total_births"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_name"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 1000
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "89c75a03-096a-4273-9b2e-e785f5790c42",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:27.529Z",
      "Database": "dev",
      "Duration": 44490608,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 28, column 16\n  Position: 989",
      "HasResultSet": false,
      "Id": "8b74889e-d735-4861-a3d3-58994e763af7",
      "RedshiftPid": 1073963111,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:27.613Z",
          "Duration": 44490608,
          "HasResultSet": false,
          "Id": "8b74889e-d735-4861-a3d3-58994e763af7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:28.063Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:27.617Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 28, column 16\n  Position: 989",
          "HasResultSet": false,
          "Id": "8b74889e-d735-4861-a3d3-58994e763af7:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000::FLOAT8) as \"births_per_100k__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"births_per_100k__1\" IS NOT NULL THEN \"births_per_100k__1\" END))[1] as \"births_per_100k\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 1000\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:28.063Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:28.128Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1",
        CASE WHEN group_set=2 THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "births_per_100k__1" IS NOT NULL THEN "births_per_100k__1" END))[1] as "births_per_100k",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "total_births__2"::DOUBLE PRECISION as "total_births"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_name"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 1000

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,2) THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1",
        CASE WHEN group_set=2 THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "births_per_100k__1" IS NOT NULL THEN "births_per_100k__1" END))[1] as "births_per_100k",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "total_births__2"::DOUBLE PRECISION as "total_births"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_name"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
    LIMIT 1000
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "89c75a03-096a-4273-9b2e-e785f5790c42",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:27.529Z",
      "Database": "dev",
      "Duration": 44490608,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 28, column 16\n  Position: 989",
      "HasResultSet": false,
      "Id": "8b74889e-d735-4861-a3d3-58994e763af7",
      "RedshiftPid": 1073963111,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:27.613Z",
          "Duration": 44490608,
          "HasResultSet": false,
          "Id": "8b74889e-d735-4861-a3d3-58994e763af7:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:28.063Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:27.617Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 28, column 16\n  Position: 989",
          "HasResultSet": false,
          "Id": "8b74889e-d735-4861-a3d3-58994e763af7:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000::FLOAT8) as \"births_per_100k__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"births_per_100k__1\" IS NOT NULL THEN \"births_per_100k__1\" END))[1] as \"births_per_100k\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\nLIMIT 1000\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:28.063Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:28.128Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:633:11)

  ● ungrouped - eliminate rows  - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX(CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END) OVER () as "m__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" IN ('CA','NY')
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "m__1" IS NOT NULL THEN "m__1" END))[1] as "m"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1010a1fe-cc4d-474a-af22-78ef48dc4878",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:28.909Z",
      "Database": "dev",
      "Duration": 46060768,
      "Error": "Query #2 failed with ERROR: function array_agg(bigint) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5277b664-0a86-4bca-9474-1aeae832a09c",
      "RedshiftPid": 1073954912,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:29.006Z",
          "Duration": 46060768,
          "HasResultSet": false,
          "Id": "5277b664-0a86-4bca-9474-1aeae832a09c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:29.443Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:29.010Z",
          "Duration": -1,
          "Error": "ERROR: function array_agg(bigint) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5277b664-0a86-4bca-9474-1aeae832a09c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX(CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END) OVER () as \"m__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" IN ('CA','NY')\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"m__1\" IS NOT NULL THEN \"m__1\" END))[1] as \"m\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:29.443Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:29.499Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX(CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END) OVER () as "m__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" IN ('CA','NY')
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "m__1" IS NOT NULL THEN "m__1" END))[1] as "m"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX(CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END) OVER () as "m__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      WHERE base."state" IN ('CA','NY')
      GROUP BY 1,2
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "m__1" IS NOT NULL THEN "m__1" END))[1] as "m"
    FROM __stage0
    WHERE group_set NOT IN (0)
    GROUP BY 1
    ORDER BY 1 ASC NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1010a1fe-cc4d-474a-af22-78ef48dc4878",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:28.909Z",
      "Database": "dev",
      "Duration": 46060768,
      "Error": "Query #2 failed with ERROR: function array_agg(bigint) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "5277b664-0a86-4bca-9474-1aeae832a09c",
      "RedshiftPid": 1073954912,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:29.006Z",
          "Duration": 46060768,
          "HasResultSet": false,
          "Id": "5277b664-0a86-4bca-9474-1aeae832a09c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:29.443Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:29.010Z",
          "Duration": -1,
          "Error": "ERROR: function array_agg(bigint) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "5277b664-0a86-4bca-9474-1aeae832a09c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX(CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END) OVER () as \"m__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  WHERE base.\"state\" IN ('CA','NY')\n  GROUP BY 1,2\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"m__1\" IS NOT NULL THEN \"m__1\" END))[1] as \"m\"\nFROM __stage0\nWHERE group_set NOT IN (0)\nGROUP BY 1\nORDER BY 1 ASC NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:29.443Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:29.499Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:646:11)

  ● ungrouped nested with no grouping above - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG(CASE WHEN group_set=0 AND "total_births__0" IS NOT NULL THEN "total_births__0" END))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_name"
    FROM __stage0
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3b2cc400-fcb0-47d5-8555-5a0a7021c376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:30.251Z",
      "Database": "dev",
      "Duration": 52170068,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 877",
      "HasResultSet": false,
      "Id": "e1e27c51-974e-4474-83e8-4c63d318e74e",
      "RedshiftPid": 1073848444,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:30.350Z",
          "Duration": 52170068,
          "HasResultSet": false,
          "Id": "e1e27c51-974e-4474-83e8-4c63d318e74e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:30.815Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:30.353Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 877",
          "HasResultSet": false,
          "Id": "e1e27c51-974e-4474-83e8-4c63d318e74e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000::FLOAT8) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"total_births__0\" IS NOT NULL THEN \"total_births__0\" END))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:30.815Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:30.880Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG(CASE WHEN group_set=0 AND "total_births__0" IS NOT NULL THEN "total_births__0" END))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_name"
    FROM __stage0

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER ())*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,3
    )
    SELECT
      (ARRAY_AGG(CASE WHEN group_set=0 AND "total_births__0" IS NOT NULL THEN "total_births__0" END))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_name"
    FROM __stage0
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "3b2cc400-fcb0-47d5-8555-5a0a7021c376",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:30.251Z",
      "Database": "dev",
      "Duration": 52170068,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 877",
      "HasResultSet": false,
      "Id": "e1e27c51-974e-4474-83e8-4c63d318e74e",
      "RedshiftPid": 1073848444,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:30.350Z",
          "Duration": 52170068,
          "HasResultSet": false,
          "Id": "e1e27c51-974e-4474-83e8-4c63d318e74e:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:30.815Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:30.353Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 24, column 16\n  Position: 877",
          "HasResultSet": false,
          "Id": "e1e27c51-974e-4474-83e8-4c63d318e74e:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER ())*100000::FLOAT8) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,3\n)\nSELECT\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"total_births__0\" IS NOT NULL THEN \"total_births__0\" END))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_name\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:30.815Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:30.880Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:666:13)

  ● ungrouped - partial grouping - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END as "faa_region__1",
        CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END as "fac_type__5",
        CASE WHEN group_set=5 THEN
          COUNT(1)
          END as "c__5",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all___5",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all_state_region__5",
        MAX((CASE WHEN group_set=3 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END) as "all_of_this_type__5",
        MAX((CASE WHEN group_set=4 THEN
          COUNT(1)
          END)) OVER () as "all_top__5"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,5,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,3,7
    )
    SELECT
      "faa_region__1" as "faa_region",
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "c__1" IS NOT NULL THEN "c__1" END))[1] as "c",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "all___1" IS NOT NULL THEN "all___1" END))[1] as "all_",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "airport_count__1" IS NOT NULL THEN "airport_count__1" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__5" as "fac_type", 
        "c__5"::DOUBLE PRECISION as "c", 
        "all___5"::DOUBLE PRECISION as "all_", 
        "all_state_region__5"::DOUBLE PRECISION as "all_state_region", 
        "all_of_this_type__5"::DOUBLE PRECISION as "all_of_this_type", 
        "all_top__5"::DOUBLE PRECISION as "all_top"
        ) as __x)  ORDER BY  "c__5" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2,3,4)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7fec1031-707e-4b52-bdbf-908000ceb35e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:31.622Z",
      "Database": "dev",
      "Duration": 44633901,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 65, column 16\n  Position: 2295",
      "HasResultSet": false,
      "Id": "0dc4f113-9af8-4e1e-a403-91e906f361d3",
      "RedshiftPid": 1073823856,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:31.707Z",
          "Duration": 44633901,
          "HasResultSet": false,
          "Id": "0dc4f113-9af8-4e1e-a403-91e906f361d3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:32.127Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:31.710Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 65, column 16\n  Position: 2295",
          "HasResultSet": false,
          "Id": "0dc4f113-9af8-4e1e-a403-91e906f361d3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END as \"faa_region__1\",\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END as \"fac_type__5\",\n    CASE WHEN group_set=5 THEN\n      COUNT(1)\n      END as \"c__5\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all___5\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all_state_region__5\",\n    MAX((CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END) as \"all_of_this_type__5\",\n    MAX((CASE WHEN group_set=4 THEN\n      COUNT(1)\n      END)) OVER () as \"all_top__5\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,5,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"faa_region__1\" as \"faa_region\",\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"c__1\" IS NOT NULL THEN \"c__1\" END))[1] as \"c\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"all___1\" IS NOT NULL THEN \"all___1\" END))[1] as \"all_\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"airport_count__1\" IS NOT NULL THEN \"airport_count__1\" END))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__5\" as \"fac_type\", \n    \"c__5\"::DOUBLE PRECISION as \"c\", \n    \"all___5\"::DOUBLE PRECISION as \"all_\", \n    \"all_state_region__5\"::DOUBLE PRECISION as \"all_state_region\", \n    \"all_of_this_type__5\"::DOUBLE PRECISION as \"all_of_this_type\", \n    \"all_top__5\"::DOUBLE PRECISION as \"all_top\"\n    ) as __x)  ORDER BY  \"c__5\" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2,3,4)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:32.127Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:32.193Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END as "faa_region__1",
        CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END as "fac_type__5",
        CASE WHEN group_set=5 THEN
          COUNT(1)
          END as "c__5",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all___5",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all_state_region__5",
        MAX((CASE WHEN group_set=3 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END) as "all_of_this_type__5",
        MAX((CASE WHEN group_set=4 THEN
          COUNT(1)
          END)) OVER () as "all_top__5"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,5,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,3,7
    )
    SELECT
      "faa_region__1" as "faa_region",
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "c__1" IS NOT NULL THEN "c__1" END))[1] as "c",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "all___1" IS NOT NULL THEN "all___1" END))[1] as "all_",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "airport_count__1" IS NOT NULL THEN "airport_count__1" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__5" as "fac_type", 
        "c__5"::DOUBLE PRECISION as "c", 
        "all___5"::DOUBLE PRECISION as "all_", 
        "all_state_region__5"::DOUBLE PRECISION as "all_state_region", 
        "all_of_this_type__5"::DOUBLE PRECISION as "all_of_this_type", 
        "all_top__5"::DOUBLE PRECISION as "all_top"
        ) as __x)  ORDER BY  "c__5" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2,3,4)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END as "faa_region__1",
        CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END as "fac_type__5",
        CASE WHEN group_set=5 THEN
          COUNT(1)
          END as "c__5",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all___5",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN
          base."faa_region"
          END, CASE WHEN group_set IN (1,5,2) THEN
          base."state"
          END) as "all_state_region__5",
        MAX((CASE WHEN group_set=3 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN
          base."fac_type"
          END) as "all_of_this_type__5",
        MAX((CASE WHEN group_set=4 THEN
          COUNT(1)
          END)) OVER () as "all_top__5"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,5,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,3,7
    )
    SELECT
      "faa_region__1" as "faa_region",
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "c__1" IS NOT NULL THEN "c__1" END))[1] as "c",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "all___1" IS NOT NULL THEN "all___1" END))[1] as "all_",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "airport_count__1" IS NOT NULL THEN "airport_count__1" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__5" as "fac_type", 
        "c__5"::DOUBLE PRECISION as "c", 
        "all___5"::DOUBLE PRECISION as "all_", 
        "all_state_region__5"::DOUBLE PRECISION as "all_state_region", 
        "all_of_this_type__5"::DOUBLE PRECISION as "all_of_this_type", 
        "all_top__5"::DOUBLE PRECISION as "all_top"
        ) as __x)  ORDER BY  "c__5" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2,3,4)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "7fec1031-707e-4b52-bdbf-908000ceb35e",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:31.622Z",
      "Database": "dev",
      "Duration": 44633901,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 65, column 16\n  Position: 2295",
      "HasResultSet": false,
      "Id": "0dc4f113-9af8-4e1e-a403-91e906f361d3",
      "RedshiftPid": 1073823856,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:31.707Z",
          "Duration": 44633901,
          "HasResultSet": false,
          "Id": "0dc4f113-9af8-4e1e-a403-91e906f361d3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:32.127Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:31.710Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 65, column 16\n  Position: 2295",
          "HasResultSet": false,
          "Id": "0dc4f113-9af8-4e1e-a403-91e906f361d3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END as \"faa_region__1\",\n    CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END as \"fac_type__5\",\n    CASE WHEN group_set=5 THEN\n      COUNT(1)\n      END as \"c__5\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all___5\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,5,2) THEN\n      base.\"faa_region\"\n      END, CASE WHEN group_set IN (1,5,2) THEN\n      base.\"state\"\n      END) as \"all_state_region__5\",\n    MAX((CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (5,3) THEN\n      base.\"fac_type\"\n      END) as \"all_of_this_type__5\",\n    MAX((CASE WHEN group_set=4 THEN\n      COUNT(1)\n      END)) OVER () as \"all_top__5\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,5,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"faa_region__1\" as \"faa_region\",\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"c__1\" IS NOT NULL THEN \"c__1\" END))[1] as \"c\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"all___1\" IS NOT NULL THEN \"all___1\" END))[1] as \"all_\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"airport_count__1\" IS NOT NULL THEN \"airport_count__1\" END))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__5\" as \"fac_type\", \n    \"c__5\"::DOUBLE PRECISION as \"c\", \n    \"all___5\"::DOUBLE PRECISION as \"all_\", \n    \"all_state_region__5\"::DOUBLE PRECISION as \"all_state_region\", \n    \"all_of_this_type__5\"::DOUBLE PRECISION as \"all_of_this_type\", \n    \"all_top__5\"::DOUBLE PRECISION as \"all_top\"\n    ) as __x)  ORDER BY  \"c__5\" desc NULLS LAST ) FILTER (WHERE group_set=5))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2,3,4)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:32.127Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:32.193Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:695:10)

  ● ungrouped - all nested - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set=3 THEN
          base."fac_type"
          END as "fac_type__3",
        CASE WHEN group_set IN (3,2) THEN
          base."major"
          END as "major__3",
        CASE WHEN group_set=3 THEN
          COUNT(1)
          END as "c__3",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all___3",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN
          base."major"
          END, CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all_major__3"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,6,7
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "c__1" IS NOT NULL THEN "c__1" END))[1] as "c",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "all___1" IS NOT NULL THEN "all___1" END))[1] as "all_",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "airport_count__1" IS NOT NULL THEN "airport_count__1" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__3" as "fac_type", 
        "major__3" as "major", 
        "c__3"::DOUBLE PRECISION as "c", 
        "all___3"::DOUBLE PRECISION as "all_", 
        "all_major__3"::DOUBLE PRECISION as "all_major"
        ) as __x)  ORDER BY  "c__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9b9a11c-6792-44f3-b17c-19c3ef95e138",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:33.026Z",
      "Database": "dev",
      "Duration": 44107833,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 53, column 16\n  Position: 1789",
      "HasResultSet": false,
      "Id": "eda1da33-b488-48c4-a41b-4ff0ac5ab2e3",
      "RedshiftPid": 1073971326,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:33.121Z",
          "Duration": 44107833,
          "HasResultSet": false,
          "Id": "eda1da33-b488-48c4-a41b-4ff0ac5ab2e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:33.570Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:33.124Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 53, column 16\n  Position: 1789",
          "HasResultSet": false,
          "Id": "eda1da33-b488-48c4-a41b-4ff0ac5ab2e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set=3 THEN\n      base.\"fac_type\"\n      END as \"fac_type__3\",\n    CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END as \"major__3\",\n    CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END as \"c__3\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all___3\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END, CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all_major__3\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,6,7\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"c__1\" IS NOT NULL THEN \"c__1\" END))[1] as \"c\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"all___1\" IS NOT NULL THEN \"all___1\" END))[1] as \"all_\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"airport_count__1\" IS NOT NULL THEN \"airport_count__1\" END))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__3\" as \"fac_type\", \n    \"major__3\" as \"major\", \n    \"c__3\"::DOUBLE PRECISION as \"c\", \n    \"all___3\"::DOUBLE PRECISION as \"all_\", \n    \"all_major__3\"::DOUBLE PRECISION as \"all_major\"\n    ) as __x)  ORDER BY  \"c__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:33.570Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:33.636Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set=3 THEN
          base."fac_type"
          END as "fac_type__3",
        CASE WHEN group_set IN (3,2) THEN
          base."major"
          END as "major__3",
        CASE WHEN group_set=3 THEN
          COUNT(1)
          END as "c__3",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all___3",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN
          base."major"
          END, CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all_major__3"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,6,7
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "c__1" IS NOT NULL THEN "c__1" END))[1] as "c",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "all___1" IS NOT NULL THEN "all___1" END))[1] as "all_",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "airport_count__1" IS NOT NULL THEN "airport_count__1" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__3" as "fac_type", 
        "major__3" as "major", 
        "c__3"::DOUBLE PRECISION as "c", 
        "all___3"::DOUBLE PRECISION as "all_", 
        "all_major__3"::DOUBLE PRECISION as "all_major"
        ) as __x)  ORDER BY  "c__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c__1",
        MAX((CASE WHEN group_set=0 THEN
          COUNT(1)
          END)) OVER () as "all___1",
        (CASE WHEN group_set=1 THEN
          COUNT(CASE WHEN base."fac_type"='AIRPORT' THEN 1 END)
          END) as "airport_count__1",
        CASE WHEN group_set=3 THEN
          base."fac_type"
          END as "fac_type__3",
        CASE WHEN group_set IN (3,2) THEN
          base."major"
          END as "major__3",
        CASE WHEN group_set=3 THEN
          COUNT(1)
          END as "c__3",
        MAX((CASE WHEN group_set=1 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all___3",
        MAX((CASE WHEN group_set=2 THEN
          COUNT(1)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN
          base."major"
          END, CASE WHEN group_set IN (1,3,2) THEN
          base."state"
          END) as "all_major__3"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."state" IN ('TX','NY')
      GROUP BY 1,2,6,7
    )
    SELECT
      "state__1" as "state",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "c__1" IS NOT NULL THEN "c__1" END))[1] as "c",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "all___1" IS NOT NULL THEN "all___1" END))[1] as "all_",
      (ARRAY_AGG(CASE WHEN group_set=1 AND "airport_count__1" IS NOT NULL THEN "airport_count__1" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "fac_type__3" as "fac_type", 
        "major__3" as "major", 
        "c__3"::DOUBLE PRECISION as "c", 
        "all___3"::DOUBLE PRECISION as "all_", 
        "all_major__3"::DOUBLE PRECISION as "all_major"
        ) as __x)  ORDER BY  "c__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as "fac_type"
    FROM __stage0
    WHERE group_set NOT IN (0,2)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f9b9a11c-6792-44f3-b17c-19c3ef95e138",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:33.026Z",
      "Database": "dev",
      "Duration": 44107833,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 53, column 16\n  Position: 1789",
      "HasResultSet": false,
      "Id": "eda1da33-b488-48c4-a41b-4ff0ac5ab2e3",
      "RedshiftPid": 1073971326,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:33.121Z",
          "Duration": 44107833,
          "HasResultSet": false,
          "Id": "eda1da33-b488-48c4-a41b-4ff0ac5ab2e3:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:33.570Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:33.124Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 53, column 16\n  Position: 1789",
          "HasResultSet": false,
          "Id": "eda1da33-b488-48c4-a41b-4ff0ac5ab2e3:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END)) OVER () as \"all___1\",\n    (CASE WHEN group_set=1 THEN\n      COUNT(CASE WHEN base.\"fac_type\"='AIRPORT' THEN 1 END)\n      END) as \"airport_count__1\",\n    CASE WHEN group_set=3 THEN\n      base.\"fac_type\"\n      END as \"fac_type__3\",\n    CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END as \"major__3\",\n    CASE WHEN group_set=3 THEN\n      COUNT(1)\n      END as \"c__3\",\n    MAX((CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all___3\",\n    MAX((CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (3,2) THEN\n      base.\"major\"\n      END, CASE WHEN group_set IN (1,3,2) THEN\n      base.\"state\"\n      END) as \"all_major__3\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"state\" IN ('TX','NY')\n  GROUP BY 1,2,6,7\n)\nSELECT\n  \"state__1\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"c__1\" IS NOT NULL THEN \"c__1\" END))[1] as \"c\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"all___1\" IS NOT NULL THEN \"all___1\" END))[1] as \"all_\",\n  (ARRAY_AGG(CASE WHEN group_set=1 AND \"airport_count__1\" IS NOT NULL THEN \"airport_count__1\" END))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"fac_type__3\" as \"fac_type\", \n    \"major__3\" as \"major\", \n    \"c__3\"::DOUBLE PRECISION as \"c\", \n    \"all___3\"::DOUBLE PRECISION as \"all_\", \n    \"all_major__3\"::DOUBLE PRECISION as \"all_major\"\n    ) as __x)  ORDER BY  \"c__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB) as \"fac_type\"\nFROM __stage0\nWHERE group_set NOT IN (0,2)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:33.570Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:33.636Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:726:10)

  ● ungrouped nested  - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY base."popular_name"))*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__0" as "popular_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1da63d09-2a3e-40a4-887e-79bc09a7075a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:34.403Z",
      "Database": "dev",
      "Duration": 52195485,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
      "HasResultSet": false,
      "Id": "ffdac2c0-62ff-43a2-b1be-ac438314c8cf",
      "RedshiftPid": 1073758307,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:34.507Z",
          "Duration": 52195485,
          "HasResultSet": false,
          "Id": "ffdac2c0-62ff-43a2-b1be-ac438314c8cf:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:34.929Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:34.510Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
          "HasResultSet": false,
          "Id": "ffdac2c0-62ff-43a2-b1be-ac438314c8cf:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY base.\"popular_name\"))*100000::FLOAT8) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:34.929Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:35.004Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY base."popular_name"))*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__0" as "popular_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY base."popular_name"))*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__0" as "popular_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1da63d09-2a3e-40a4-887e-79bc09a7075a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:34.403Z",
      "Database": "dev",
      "Duration": 52195485,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
      "HasResultSet": false,
      "Id": "ffdac2c0-62ff-43a2-b1be-ac438314c8cf",
      "RedshiftPid": 1073758307,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:34.507Z",
          "Duration": 52195485,
          "HasResultSet": false,
          "Id": "ffdac2c0-62ff-43a2-b1be-ac438314c8cf:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:34.929Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:34.510Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 748",
          "HasResultSet": false,
          "Id": "ffdac2c0-62ff-43a2-b1be-ac438314c8cf:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY base.\"popular_name\"))*100000::FLOAT8) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:34.929Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:35.004Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:747:10)

  ● ungrouped nested expression  - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        UPPER(base."popular_name") as "upper_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY UPPER(base."popular_name")))*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "upper_name__0" as "upper_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e30042b7-8fdb-491c-aa66-d05c0e2294b8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:35.881Z",
      "Database": "dev",
      "Duration": 53220047,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 756",
      "HasResultSet": false,
      "Id": "268433ea-69ff-4ce3-bb17-1c56f9558abc",
      "RedshiftPid": 1073832035,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:36.005Z",
          "Duration": 53220047,
          "HasResultSet": false,
          "Id": "268433ea-69ff-4ce3-bb17-1c56f9558abc:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:36.491Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:36.009Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 756",
          "HasResultSet": false,
          "Id": "268433ea-69ff-4ce3-bb17-1c56f9558abc:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    UPPER(base.\"popular_name\") as \"upper_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY UPPER(base.\"popular_name\")))*100000::FLOAT8) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"upper_name__0\" as \"upper_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:36.491Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:36.556Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        UPPER(base."popular_name") as "upper_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY UPPER(base."popular_name")))*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "upper_name__0" as "upper_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        UPPER(base."popular_name") as "upper_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        FLOOR(((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)*1.0/MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY UPPER(base."popular_name")))*100000::FLOAT8) as "births_per_100k__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "upper_name__0" as "upper_name",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "births_per_100k__1"::DOUBLE PRECISION as "births_per_100k"
        ) as __x)  ORDER BY  "births_per_100k__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "e30042b7-8fdb-491c-aa66-d05c0e2294b8",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:35.881Z",
      "Database": "dev",
      "Duration": 53220047,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 756",
      "HasResultSet": false,
      "Id": "268433ea-69ff-4ce3-bb17-1c56f9558abc",
      "RedshiftPid": 1073832035,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:36.005Z",
          "Duration": 53220047,
          "HasResultSet": false,
          "Id": "268433ea-69ff-4ce3-bb17-1c56f9558abc:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:36.491Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:36.009Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 22, column 16\n  Position: 756",
          "HasResultSet": false,
          "Id": "268433ea-69ff-4ce3-bb17-1c56f9558abc:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    UPPER(base.\"popular_name\") as \"upper_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    FLOOR(((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)*1.0/MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY UPPER(base.\"popular_name\")))*100000::FLOAT8) as \"births_per_100k__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"upper_name__0\" as \"upper_name\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"births_per_100k__1\"::DOUBLE PRECISION as \"births_per_100k\"\n    ) as __x)  ORDER BY  \"births_per_100k__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:36.491Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:36.556Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:765:10)

  ● ungrouped nested group by float  - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300.0::FLOAT8) as "f__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300.0::FLOAT8)) as "ug__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "f__0" as "f",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "ug__1"::DOUBLE PRECISION as "ug"
        ) as __x)  ORDER BY  "ug__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2a96de23-20cc-4fca-a269-e6ca1bf14264",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:37.380Z",
      "Database": "dev",
      "Duration": 44770997,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 624",
      "HasResultSet": false,
      "Id": "59565f32-b955-47c5-99d4-3a5cb13b93f9",
      "RedshiftPid": 1073963128,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:37.514Z",
          "Duration": 44770997,
          "HasResultSet": false,
          "Id": "59565f32-b955-47c5-99d4-3a5cb13b93f9:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:37.960Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:37.518Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 624",
          "HasResultSet": false,
          "Id": "59565f32-b955-47c5-99d4-3a5cb13b93f9:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300.0::FLOAT8) as \"f__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300.0::FLOAT8)) as \"ug__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"f__0\" as \"f\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"ug__1\"::DOUBLE PRECISION as \"ug\"\n    ) as __x)  ORDER BY  \"ug__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:37.960Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:38.026Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300.0::FLOAT8) as "f__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300.0::FLOAT8)) as "ug__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "f__0" as "f",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "ug__1"::DOUBLE PRECISION as "ug"
        ) as __x)  ORDER BY  "ug__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300.0::FLOAT8) as "f__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300.0::FLOAT8)) as "ug__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "f__0" as "f",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "ug__1"::DOUBLE PRECISION as "ug"
        ) as __x)  ORDER BY  "ug__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "2a96de23-20cc-4fca-a269-e6ca1bf14264",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:37.380Z",
      "Database": "dev",
      "Duration": 44770997,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 624",
      "HasResultSet": false,
      "Id": "59565f32-b955-47c5-99d4-3a5cb13b93f9",
      "RedshiftPid": 1073963128,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:37.514Z",
          "Duration": 44770997,
          "HasResultSet": false,
          "Id": "59565f32-b955-47c5-99d4-3a5cb13b93f9:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:37.960Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:37.518Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 624",
          "HasResultSet": false,
          "Id": "59565f32-b955-47c5-99d4-3a5cb13b93f9:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300.0::FLOAT8) as \"f__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300.0::FLOAT8)) as \"ug__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"f__0\" as \"f\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"ug__1\"::DOUBLE PRECISION as \"ug\"\n    ) as __x)  ORDER BY  \"ug__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:37.960Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:38.026Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:783:10)

  ● all with parameters - basic  - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER () as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__2" as "popular_name",
      "state__2" as "state",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "total_births__2" IS NOT NULL THEN "total_births__2" END))[1] as "total_births",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "all_births__2" IS NOT NULL THEN "all_births__2" END))[1] as "all_births",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "all_name__2" IS NOT NULL THEN "all_name__2" END))[1] as "all_name"
    FROM __stage0
    WHERE group_set NOT IN (0,1)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a637907b-ea7e-49d6-b91e-a2841e04a9f1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:45.873Z",
      "Database": "dev",
      "Duration": 46070062,
      "Error": "Query #2 failed with ERROR: function array_agg(bigint) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f883dad0-4ad2-48d6-aca6-21348fdf6a3d",
      "RedshiftPid": 1073840384,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:45.970Z",
          "Duration": 46070062,
          "HasResultSet": false,
          "Id": "f883dad0-4ad2-48d6-aca6-21348fdf6a3d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:46.404Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:45.973Z",
          "Duration": -1,
          "Error": "ERROR: function array_agg(bigint) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f883dad0-4ad2-48d6-aca6-21348fdf6a3d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER () as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__2\" as \"popular_name\",\n  \"state__2\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=2 AND \"total_births__2\" IS NOT NULL THEN \"total_births__2\" END))[1] as \"total_births\",\n  (ARRAY_AGG(CASE WHEN group_set=2 AND \"all_births__2\" IS NOT NULL THEN \"all_births__2\" END))[1] as \"all_births\",\n  (ARRAY_AGG(CASE WHEN group_set=2 AND \"all_name__2\" IS NOT NULL THEN \"all_name__2\" END))[1] as \"all_name\"\nFROM __stage0\nWHERE group_set NOT IN (0,1)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:46.404Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:46.470Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER () as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__2" as "popular_name",
      "state__2" as "state",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "total_births__2" IS NOT NULL THEN "total_births__2" END))[1] as "total_births",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "all_births__2" IS NOT NULL THEN "all_births__2" END))[1] as "all_births",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "all_name__2" IS NOT NULL THEN "all_name__2" END))[1] as "all_name"
    FROM __stage0
    WHERE group_set NOT IN (0,1)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER () as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "popular_name__2" as "popular_name",
      "state__2" as "state",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "total_births__2" IS NOT NULL THEN "total_births__2" END))[1] as "total_births",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "all_births__2" IS NOT NULL THEN "all_births__2" END))[1] as "all_births",
      (ARRAY_AGG(CASE WHEN group_set=2 AND "all_name__2" IS NOT NULL THEN "all_name__2" END))[1] as "all_name"
    FROM __stage0
    WHERE group_set NOT IN (0,1)
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "a637907b-ea7e-49d6-b91e-a2841e04a9f1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:45.873Z",
      "Database": "dev",
      "Duration": 46070062,
      "Error": "Query #2 failed with ERROR: function array_agg(bigint) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
      "HasResultSet": false,
      "Id": "f883dad0-4ad2-48d6-aca6-21348fdf6a3d",
      "RedshiftPid": 1073840384,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:45.970Z",
          "Duration": 46070062,
          "HasResultSet": false,
          "Id": "f883dad0-4ad2-48d6-aca6-21348fdf6a3d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:46.404Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:45.973Z",
          "Duration": -1,
          "Error": "ERROR: function array_agg(bigint) does not exist\n  Hint: No function matches the given name and argument types. You may need to add explicit type casts.",
          "HasResultSet": false,
          "Id": "f883dad0-4ad2-48d6-aca6-21348fdf6a3d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER () as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"popular_name__2\" as \"popular_name\",\n  \"state__2\" as \"state\",\n  (ARRAY_AGG(CASE WHEN group_set=2 AND \"total_births__2\" IS NOT NULL THEN \"total_births__2\" END))[1] as \"total_births\",\n  (ARRAY_AGG(CASE WHEN group_set=2 AND \"all_births__2\" IS NOT NULL THEN \"all_births__2\" END))[1] as \"all_births\",\n  (ARRAY_AGG(CASE WHEN group_set=2 AND \"all_name__2\" IS NOT NULL THEN \"all_name__2\" END))[1] as \"all_name\"\nFROM __stage0\nWHERE group_set NOT IN (0,1)\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:46.404Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:46.470Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:845:8)

  ● all with parameters - nest  - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300::FLOAT8) as "abc__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300::FLOAT8)) as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END, FLOOR(base."airport_count"*1.0/300::FLOAT8)) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,5
    )
    SELECT
      "abc__0" as "abc",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "total_births__0" IS NOT NULL THEN "total_births__0" END))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "state__2" as "state", 
        "total_births__2"::DOUBLE PRECISION as "total_births", 
        "all_births__2"::DOUBLE PRECISION as "all_births", 
        "all_name__2"::DOUBLE PRECISION as "all_name"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_stuff"
    FROM __stage0
    WHERE group_set NOT IN (1)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "44be5fa9-6d92-42f0-bca4-3790c3db4bae",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:47.218Z",
      "Database": "dev",
      "Duration": 43371398,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 38, column 16\n  Position: 1460",
      "HasResultSet": false,
      "Id": "67ff7098-06fe-4489-aec0-c48563585583",
      "RedshiftPid": 1073996059,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:47.327Z",
          "Duration": 43371398,
          "HasResultSet": false,
          "Id": "67ff7098-06fe-4489-aec0-c48563585583:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:47.748Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:47.330Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 38, column 16\n  Position: 1460",
          "HasResultSet": false,
          "Id": "67ff7098-06fe-4489-aec0-c48563585583:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300::FLOAT8) as \"abc__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300::FLOAT8)) as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END, FLOOR(base.\"airport_count\"*1.0/300::FLOAT8)) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,5\n)\nSELECT\n  \"abc__0\" as \"abc\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"total_births__0\" IS NOT NULL THEN \"total_births__0\" END))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"state__2\" as \"state\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\", \n    \"all_births__2\"::DOUBLE PRECISION as \"all_births\", \n    \"all_name__2\"::DOUBLE PRECISION as \"all_name\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_stuff\"\nFROM __stage0\nWHERE group_set NOT IN (1)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:47.748Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:47.810Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300::FLOAT8) as "abc__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300::FLOAT8)) as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END, FLOOR(base."airport_count"*1.0/300::FLOAT8)) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,5
    )
    SELECT
      "abc__0" as "abc",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "total_births__0" IS NOT NULL THEN "total_births__0" END))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "state__2" as "state", 
        "total_births__2"::DOUBLE PRECISION as "total_births", 
        "all_births__2"::DOUBLE PRECISION as "all_births", 
        "all_name__2"::DOUBLE PRECISION as "all_name"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_stuff"
    FROM __stage0
    WHERE group_set NOT IN (1)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        FLOOR(base."airport_count"*1.0/300::FLOAT8) as "abc__0",
        CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__0",
        CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END as "popular_name__2",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."births"),0)
          END as "total_births__2",
        MAX((CASE WHEN group_set=0 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY FLOOR(base."airport_count"*1.0/300::FLOAT8)) as "all_births__2",
        MAX((CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."births"),0)
          END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN
          base."popular_name"
          END, FLOOR(base."airport_count"*1.0/300::FLOAT8)) as "all_name__2"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      GROUP BY 1,2,4,5
    )
    SELECT
      "abc__0" as "abc",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "total_births__0" IS NOT NULL THEN "total_births__0" END))[1] as "total_births",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__2" as "popular_name", 
        "state__2" as "state", 
        "total_births__2"::DOUBLE PRECISION as "total_births", 
        "all_births__2"::DOUBLE PRECISION as "all_births", 
        "all_name__2"::DOUBLE PRECISION as "all_name"
        ) as __x)  ORDER BY  "total_births__2" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as "by_stuff"
    FROM __stage0
    WHERE group_set NOT IN (1)
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "44be5fa9-6d92-42f0-bca4-3790c3db4bae",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:47.218Z",
      "Database": "dev",
      "Duration": 43371398,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 38, column 16\n  Position: 1460",
      "HasResultSet": false,
      "Id": "67ff7098-06fe-4489-aec0-c48563585583",
      "RedshiftPid": 1073996059,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:47.327Z",
          "Duration": 43371398,
          "HasResultSet": false,
          "Id": "67ff7098-06fe-4489-aec0-c48563585583:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:47.748Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:47.330Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 38, column 16\n  Position: 1460",
          "HasResultSet": false,
          "Id": "67ff7098-06fe-4489-aec0-c48563585583:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    FLOOR(base.\"airport_count\"*1.0/300::FLOAT8) as \"abc__0\",\n    CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__0\",\n    CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END as \"popular_name__2\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END as \"total_births__2\",\n    MAX((CASE WHEN group_set=0 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY FLOOR(base.\"airport_count\"*1.0/300::FLOAT8)) as \"all_births__2\",\n    MAX((CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"births\"),0)\n      END)) OVER (PARTITION BY CASE WHEN group_set IN (2,1) THEN\n      base.\"popular_name\"\n      END, FLOOR(base.\"airport_count\"*1.0/300::FLOAT8)) as \"all_name__2\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  GROUP BY 1,2,4,5\n)\nSELECT\n  \"abc__0\" as \"abc\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"total_births__0\" IS NOT NULL THEN \"total_births__0\" END))[1] as \"total_births\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__2\" as \"popular_name\", \n    \"state__2\" as \"state\", \n    \"total_births__2\"::DOUBLE PRECISION as \"total_births\", \n    \"all_births__2\"::DOUBLE PRECISION as \"all_births\", \n    \"all_name__2\"::DOUBLE PRECISION as \"all_name\"\n    ) as __x)  ORDER BY  \"total_births__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB) as \"by_stuff\"\nFROM __stage0\nWHERE group_set NOT IN (1)\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:47.748Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:47.810Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:869:10)

  ● single value to udf - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "t__1"::DOUBLE PRECISION as "t") as __x)) FILTER (WHERE group_set=1))[1])))) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1eb11846-3ef5-4620-89d6-3d5b99a1428f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:48.618Z",
      "Database": "dev",
      "Duration": 44762904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
      "HasResultSet": false,
      "Id": "008b06a9-19ca-4598-b5be-b81f26f883b8",
      "RedshiftPid": 1073881362,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:48.720Z",
          "Duration": 44762904,
          "HasResultSet": false,
          "Id": "008b06a9-19ca-4598-b5be-b81f26f883b8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:49.174Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:48.723Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
          "HasResultSet": false,
          "Id": "008b06a9-19ca-4598-b5be-b81f26f883b8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"t__1\"::DOUBLE PRECISION as \"t\") as __x)) FILTER (WHERE group_set=1))[1])))) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:49.174Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:49.239Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "t__1"::DOUBLE PRECISION as "t") as __x)) FILTER (WHERE group_set=1))[1])))) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT 
          "t__1"::DOUBLE PRECISION as "t") as __x)) FILTER (WHERE group_set=1))[1])))) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1eb11846-3ef5-4620-89d6-3d5b99a1428f",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:48.618Z",
      "Database": "dev",
      "Duration": 44762904,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
      "HasResultSet": false,
      "Id": "008b06a9-19ca-4598-b5be-b81f26f883b8",
      "RedshiftPid": 1073881362,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:48.720Z",
          "Duration": 44762904,
          "HasResultSet": false,
          "Id": "008b06a9-19ca-4598-b5be-b81f26f883b8:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:49.174Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:48.723Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"(\" in context \"UNNEST(ARRAY(\", at line 15, column 22\n  Position: 347",
          "HasResultSet": false,
          "Id": "008b06a9-19ca-4598-b5be-b81f26f883b8:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM UNNEST(ARRAY((SELECT TO_JSONB((ARRAY_AGG((SELECT __x FROM (SELECT \n      \"t__1\"::DOUBLE PRECISION as \"t\") as __x)) FILTER (WHERE group_set=1))[1])))) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:49.174Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:49.239Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:885:10)

  ● Multi value to udf - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        2 as "two__0",
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "two__0" as "two",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5a0eb7b0-61a8-4e31-b311-d9308ea5cbf1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:50.032Z",
      "Database": "dev",
      "Duration": 51728167,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
      "HasResultSet": false,
      "Id": "d9406d85-70ed-457b-ae8a-9ce23a0e336a",
      "RedshiftPid": 1073963277,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:50.202Z",
          "Duration": 51728167,
          "HasResultSet": false,
          "Id": "d9406d85-70ed-457b-ae8a-9ce23a0e336a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:50.653Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:50.206Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
          "HasResultSet": false,
          "Id": "d9406d85-70ed-457b-ae8a-9ce23a0e336a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    2 as \"two__0\",\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"two__0\" as \"two\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:50.653Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:50.718Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        2 as "two__0",
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "two__0" as "two",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        2 as "two__0",
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "two__0" as "two",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "5a0eb7b0-61a8-4e31-b311-d9308ea5cbf1",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:50.032Z",
      "Database": "dev",
      "Duration": 51728167,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
      "HasResultSet": false,
      "Id": "d9406d85-70ed-457b-ae8a-9ce23a0e336a",
      "RedshiftPid": 1073963277,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:50.202Z",
          "Duration": 51728167,
          "HasResultSet": false,
          "Id": "d9406d85-70ed-457b-ae8a-9ce23a0e336a:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:50.653Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:50.206Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 23, column 18\n  Position: 626",
          "HasResultSet": false,
          "Id": "d9406d85-70ed-457b-ae8a-9ce23a0e336a:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    2 as \"two__0\",\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"two__0\" as \"two\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:50.653Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:50.718Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:904:10)

  ● Multi value to udf group by - redshift

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 1 asc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "304a4349-9d71-42a5-89c7-01aa2ea9e254",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:51.460Z",
      "Database": "dev",
      "Duration": 44130937,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
      "HasResultSet": false,
      "Id": "65686fed-e542-4521-b1f0-0b611bb8771c",
      "RedshiftPid": 1073905930,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:51.558Z",
          "Duration": 44130937,
          "HasResultSet": false,
          "Id": "65686fed-e542-4521-b1f0-0b611bb8771c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:52.009Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:51.562Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
          "HasResultSet": false,
          "Id": "65686fed-e542-4521-b1f0-0b611bb8771c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 1 asc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:52.009Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:52.075Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 1 asc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        CASE WHEN group_set=1 THEN
          1
          END as "one__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "t__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2
    )
    SELECT
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as "t1"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "one__1"::DOUBLE PRECISION as "one", 
          "t__1"::DOUBLE PRECISION as "t"
          ) as __x)  ORDER BY  "t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 1 asc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "fun"
    FROM __stage0
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "304a4349-9d71-42a5-89c7-01aa2ea9e254",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:14:51.460Z",
      "Database": "dev",
      "Duration": 44130937,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
      "HasResultSet": false,
      "Id": "65686fed-e542-4521-b1f0-0b611bb8771c",
      "RedshiftPid": 1073905930,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:14:51.558Z",
          "Duration": 44130937,
          "HasResultSet": false,
          "Id": "65686fed-e542-4521-b1f0-0b611bb8771c:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:14:52.009Z"
        },
        {
          "CreatedAt": "2025-03-03T18:14:51.562Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 21, column 18\n  Position: 584",
          "HasResultSet": false,
          "Id": "65686fed-e542-4521-b1f0-0b611bb8771c:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    CASE WHEN group_set=1 THEN\n      1\n      END as \"one__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2\n)\nSELECT\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'t')::double precision+1 as \"t1\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"one__1\"::DOUBLE PRECISION as \"one\", \n      \"t__1\"::DOUBLE PRECISION as \"t\"\n      ) as __x)  ORDER BY  \"t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 1 asc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"fun\"\nFROM __stage0\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:14:52.009Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:14:52.075Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:920:10)

  ● array unnest - redshift

    TypeError: splitFN is not a function

      1035 |         SELECT
      1036 |           ${q`city`},
    > 1037 |           ${splitFN!(q`city`, ' ')} as ${q`words`}
           |             ^
      1038 |         FROM ${rootDbPath(databaseName)}malloytest.aircraft
      1039 |       """) -> {
      1040 |         where: words.value is not null

      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1037:13)

  ● array unnest x 2 - redshift

    TypeError: splitFN is not a function

      1055 |         SELECT
      1056 |           ${q`city`},
    > 1057 |           ${splitFN!(q`city`, ' ')} as ${q`words`},
           |             ^
      1058 |           ${splitFN!(q`city`, 'A')} as ${q`abreak`}
      1059 |         FROM ${rootDbPath(databaseName)}malloytest.aircraft
      1060 |         WHERE ${q`city`} IS NOT null

      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1057:13)

  ● nest null - redshift

    Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."faa_region" as "faa_region__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "airport_count__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "airport_count__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COUNT(1)
          END as "airport_count__2"
      FROM "malloytest"."airports" as base
      CROSS JOIN GENERATE_SERIES(0,2,1) as group_set
      WHERE (base."faa_region" IS NULL)
      AND ((group_set NOT IN (1) OR (group_set IN (1) AND base."state" IS NOT NULL)))
      AND ((group_set NOT IN (2) OR (group_set IN (2) AND base."state" IS NOT NULL)))
      GROUP BY 1,2,4,6
    )
    SELECT
      "faa_region__0" as "faa_region",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "airport_count__0" IS NOT NULL THEN "airport_count__0" END))[1] as "airport_count",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__1" as "state", 
        "airport_count__1"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by_state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "state__2" as "state", 
        "airport_count__2"::DOUBLE PRECISION as "airport_count"
        ) as __x)  ORDER BY  "airport_count__2" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:1]),'[]'::JSONB) as "by_state1"
    FROM __stage0
    GROUP BY 1
    ORDER BY 2 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "efcf1b1f-5cbf-49e5-b5ba-b8ba7c4251e9",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:15:13.690Z",
      "Database": "dev",
      "Duration": 43232524,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 33, column 16\n  Position: 1116",
      "HasResultSet": false,
      "Id": "b2909011-0842-4ab7-acb1-585cceb290d1",
      "RedshiftPid": 1073881217,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:15:13.806Z",
          "Duration": 43232524,
          "HasResultSet": false,
          "Id": "b2909011-0842-4ab7-acb1-585cceb290d1:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:15:14.237Z"
        },
        {
          "CreatedAt": "2025-03-03T18:15:13.809Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 33, column 16\n  Position: 1116",
          "HasResultSet": false,
          "Id": "b2909011-0842-4ab7-acb1-585cceb290d1:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"faa_region\" as \"faa_region__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"airport_count__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"airport_count__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COUNT(1)\n      END as \"airport_count__2\"\n  FROM \"malloytest\".\"airports\" as base\n  CROSS JOIN GENERATE_SERIES(0,2,1) as group_set\n  WHERE (base.\"faa_region\" IS NULL)\n  AND ((group_set NOT IN (1) OR (group_set IN (1) AND base.\"state\" IS NOT NULL)))\n  AND ((group_set NOT IN (2) OR (group_set IN (2) AND base.\"state\" IS NOT NULL)))\n  GROUP BY 1,2,4,6\n)\nSELECT\n  \"faa_region__0\" as \"faa_region\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"airport_count__0\" IS NOT NULL THEN \"airport_count__0\" END))[1] as \"airport_count\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__1\" as \"state\", \n    \"airport_count__1\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by_state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"state__2\" as \"state\", \n    \"airport_count__2\"::DOUBLE PRECISION as \"airport_count\"\n    ) as __x)  ORDER BY  \"airport_count__2\" desc NULLS LAST ) FILTER (WHERE group_set=2))[1:1]),'[]'::JSONB) as \"by_state1\"\nFROM __stage0\nGROUP BY 1\nORDER BY 2 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:15:14.237Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:15:14.303Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● Nested pipelines sort properly - redshift

    Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "popular_name__0",
        CASE WHEN group_set=1 THEN
          base."state"
          END as "state__1",
        CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END as "airports__1",
        CASE WHEN group_set=2 THEN
          base."state"
          END as "state__2",
        CASE WHEN group_set=2 THEN
          COALESCE(SUM(base."aircraft_count"),0)
          END as "aircrafts__2",
        CASE WHEN group_set=3 THEN
          base."state"
          END as "state__3",
        CASE WHEN group_set=3 THEN
          COALESCE(SUM(base."aircraft_count"),0)
          END as "aircrafts__3"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,3,1) as group_set
      WHERE base."popular_name" ~ 'I'
      GROUP BY 1,2,3,5,7
    )
    SELECT
      "popular_name__0" as "popular_name",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'airports')::double precision),0) as "airports"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__1" as "state", 
          "airports__1"::DOUBLE PRECISION as "airports"
          ) as __x)  ORDER BY  "airports__1" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 ASC NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as "aircrafts"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__2" as "state", 
          "aircrafts__2"::DOUBLE PRECISION as "aircrafts"
          ) as __x)  ORDER BY  "aircrafts__2" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 ASC NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view2",
      (WITH __stage0 AS (
        SELECT 
           JSONB_EXTRACT_PATH_TEXT(base,'state') as "state",
           COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as "aircrafts"
        FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
          "state__3" as "state", 
          "aircrafts__3"::DOUBLE PRECISION as "aircrafts"
          ) as __x)  ORDER BY  "aircrafts__3" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB)) as base
        GROUP BY 1
        ORDER BY 2 desc NULLS LAST
      )
      SELECT JSONB_AGG(__stage0) FROM __stage0
      ) as "base_view3"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "f4195f5c-13f7-410b-b49a-dd28e7d634ab",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:15:15.198Z",
      "Database": "dev",
      "Duration": 45785507,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1203",
      "HasResultSet": false,
      "Id": "5c9d1e4f-7294-40d4-915e-c825ed90a90d",
      "RedshiftPid": 1073832087,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:15:15.315Z",
          "Duration": 45785507,
          "HasResultSet": false,
          "Id": "5c9d1e4f-7294-40d4-915e-c825ed90a90d:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:15:15.751Z"
        },
        {
          "CreatedAt": "2025-03-03T18:15:15.318Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 37, column 18\n  Position: 1203",
          "HasResultSet": false,
          "Id": "5c9d1e4f-7294-40d4-915e-c825ed90a90d:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"popular_name__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"state\"\n      END as \"state__1\",\n    CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END as \"airports__1\",\n    CASE WHEN group_set=2 THEN\n      base.\"state\"\n      END as \"state__2\",\n    CASE WHEN group_set=2 THEN\n      COALESCE(SUM(base.\"aircraft_count\"),0)\n      END as \"aircrafts__2\",\n    CASE WHEN group_set=3 THEN\n      base.\"state\"\n      END as \"state__3\",\n    CASE WHEN group_set=3 THEN\n      COALESCE(SUM(base.\"aircraft_count\"),0)\n      END as \"aircrafts__3\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,3,1) as group_set\n  WHERE base.\"popular_name\" ~ 'I'\n  GROUP BY 1,2,3,5,7\n)\nSELECT\n  \"popular_name__0\" as \"popular_name\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'airports')::double precision),0) as \"airports\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__1\" as \"state\", \n      \"airports__1\"::DOUBLE PRECISION as \"airports\"\n      ) as __x)  ORDER BY  \"airports__1\" asc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 ASC NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as \"aircrafts\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__2\" as \"state\", \n      \"aircrafts__2\"::DOUBLE PRECISION as \"aircrafts\"\n      ) as __x)  ORDER BY  \"aircrafts__2\" asc NULLS LAST ) FILTER (WHERE group_set=2))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 ASC NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view2\",\n  (WITH __stage0 AS (\n    SELECT \n       JSONB_EXTRACT_PATH_TEXT(base,'state') as \"state\",\n       COALESCE(SUM(JSONB_EXTRACT_PATH_TEXT(base,'aircrafts')::double precision),0) as \"aircrafts\"\n    FROM JSONB_ARRAY_ELEMENTS(COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n      \"state__3\" as \"state\", \n      \"aircrafts__3\"::DOUBLE PRECISION as \"aircrafts\"\n      ) as __x)  ORDER BY  \"aircrafts__3\" desc NULLS LAST ) FILTER (WHERE group_set=3))),'[]'::JSONB)) as base\n    GROUP BY 1\n    ORDER BY 2 desc NULLS LAST\n  )\n  SELECT JSONB_AGG(__stage0) FROM __stage0\n  ) as \"base_view3\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:15:15.751Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:15:15.817Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● number as null- redshift

    Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."state" as "state__0",
        CASE WHEN group_set=1 THEN
          base."popular_name"
          END as "popular_name__1",
        (NULLIF(CASE WHEN group_set=1 THEN
          COALESCE(SUM(base."airport_count"),0)
          END*0,0))+1 as "foo__1"
      FROM "malloytest"."state_facts" as base
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3
    )
    SELECT
      "state__0" as "state",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "popular_name__1" as "popular_name", 
        "foo__1"::DOUBLE PRECISION as "foo"
        ) as __x)  ORDER BY  "foo__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "ugly"
    FROM __stage0
    GROUP BY 1
    ORDER BY 1 asc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "aa374282-8acd-4e40-9905-42fe1dc0ae9a",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:15:16.597Z",
      "Database": "dev",
      "Duration": 50336248,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
      "HasResultSet": false,
      "Id": "d328ba43-54ca-4ee2-84d9-3629b57f3f94",
      "RedshiftPid": 1073799309,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:15:16.709Z",
          "Duration": 50336248,
          "HasResultSet": false,
          "Id": "d328ba43-54ca-4ee2-84d9-3629b57f3f94:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:15:17.195Z"
        },
        {
          "CreatedAt": "2025-03-03T18:15:16.712Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 20, column 16\n  Position: 584",
          "HasResultSet": false,
          "Id": "d328ba43-54ca-4ee2-84d9-3629b57f3f94:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"state\" as \"state__0\",\n    CASE WHEN group_set=1 THEN\n      base.\"popular_name\"\n      END as \"popular_name__1\",\n    (NULLIF(CASE WHEN group_set=1 THEN\n      COALESCE(SUM(base.\"airport_count\"),0)\n      END*0,0))+1 as \"foo__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3\n)\nSELECT\n  \"state__0\" as \"state\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"popular_name__1\" as \"popular_name\", \n    \"foo__1\"::DOUBLE PRECISION as \"foo\"\n    ) as __x)  ORDER BY  \"foo__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"ugly\"\nFROM __stage0\nGROUP BY 1\nORDER BY 1 asc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:15:17.195Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:15:17.261Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)

  ● quoting and strings › backslash backslash

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    SELECT 
       '\' as "back"
    FROM (SELECT 1 as one) as base
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c9d24410-8451-4f42-ad02-d31bef0d0731",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:15:26.690Z",
      "Database": "dev",
      "Duration": 44531299,
      "Error": "Query #2 failed with Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
      "HasResultSet": false,
      "Id": "89d3486e-eb0b-446e-9657-590e952d9701",
      "RedshiftPid": 1073758343,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:15:26.786Z",
          "Duration": 44531299,
          "HasResultSet": false,
          "Id": "89d3486e-eb0b-446e-9657-590e952d9701:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:15:27.153Z"
        },
        {
          "CreatedAt": "2025-03-03T18:15:26.789Z",
          "Duration": -1,
          "Error": "Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
          "HasResultSet": false,
          "Id": "89d3486e-eb0b-446e-9657-590e952d9701:2",
          "QueryString": "SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:15:27.153Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:15:27.168Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: SELECT 
       '\' as "back"
    FROM (SELECT 1 as one) as base

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    SELECT 
       '\' as "back"
    FROM (SELECT 1 as one) as base
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "c9d24410-8451-4f42-ad02-d31bef0d0731",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:15:26.690Z",
      "Database": "dev",
      "Duration": 44531299,
      "Error": "Query #2 failed with Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
      "HasResultSet": false,
      "Id": "89d3486e-eb0b-446e-9657-590e952d9701",
      "RedshiftPid": 1073758343,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:15:26.786Z",
          "Duration": 44531299,
          "HasResultSet": false,
          "Id": "89d3486e-eb0b-446e-9657-590e952d9701:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:15:27.153Z"
        },
        {
          "CreatedAt": "2025-03-03T18:15:26.789Z",
          "Duration": -1,
          "Error": "Unterminated string literal started at position 11 in SQL SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n. Expected  char",
          "HasResultSet": false,
          "Id": "89d3486e-eb0b-446e-9657-590e952d9701:2",
          "QueryString": "SELECT \n   '\\' as \"back\"\nFROM (SELECT 1 as one) as base\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:15:27.153Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:15:27.168Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1350:10)

  ● quoting and strings › spaces in names

    query.run failed: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "P O P__0",
        j_o_space_0."popular_name" as "J P O P__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c o u n t__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "R O W__0",
        CASE WHEN group_set=0 THEN LAG((base."popular_name"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "l a g__0",
        CASE WHEN group_set=1 THEN
          j_o_space_0."state"
          END as "J S__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c o u n t__1"
      FROM "malloytest"."state_facts" as base
       LEFT JOIN "malloytest"."state_facts" AS j_o_space_0
        ON j_o_space_0."state"=base."state"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,7
    )
    SELECT
      "P O P__0" as "P O P",
      "J P O P__0" as "J P O P",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "c o u n t__0" IS NOT NULL THEN "c o u n t__0" END))[1] as "c o u n t",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "R O W__0" IS NOT NULL THEN "R O W__0" END))[1] as "R O W",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "l a g__0" IS NOT NULL THEN "l a g__0" END))[1] as "l a g",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "J S__1" as "J S", 
        "c o u n t__1"::DOUBLE PRECISION as "c o u n t"
        ) as __x)  ORDER BY  "c o u n t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by state"
    FROM __stage0
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1ca1f0de-bb77-4a65-9fa2-3ab997069ea5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:15:29.535Z",
      "Database": "dev",
      "Duration": 53422488,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 16\n  Position: 1455",
      "HasResultSet": false,
      "Id": "d58719e8-46a8-42a0-ac78-50d9470483ae",
      "RedshiftPid": 1073864862,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:15:29.631Z",
          "Duration": 53422488,
          "HasResultSet": false,
          "Id": "d58719e8-46a8-42a0-ac78-50d9470483ae:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:15:30.071Z"
        },
        {
          "CreatedAt": "2025-03-03T18:15:29.634Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 16\n  Position: 1455",
          "HasResultSet": false,
          "Id": "d58719e8-46a8-42a0-ac78-50d9470483ae:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"P O P__0\",\n    j_o_space_0.\"popular_name\" as \"J P O P__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c o u n t__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"R O W__0\",\n    CASE WHEN group_set=0 THEN LAG((base.\"popular_name\"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"l a g__0\",\n    CASE WHEN group_set=1 THEN\n      j_o_space_0.\"state\"\n      END as \"J S__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c o u n t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n   LEFT JOIN \"malloytest\".\"state_facts\" AS j_o_space_0\n    ON j_o_space_0.\"state\"=base.\"state\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"P O P__0\" as \"P O P\",\n  \"J P O P__0\" as \"J P O P\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"c o u n t__0\" IS NOT NULL THEN \"c o u n t__0\" END))[1] as \"c o u n t\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"R O W__0\" IS NOT NULL THEN \"R O W__0\" END))[1] as \"R O W\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"l a g__0\" IS NOT NULL THEN \"l a g__0\" END))[1] as \"l a g\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"J S__1\" as \"J S\", \n    \"c o u n t__1\"::DOUBLE PRECISION as \"c o u n t\"\n    ) as __x)  ORDER BY  \"c o u n t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by state\"\nFROM __stage0\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:15:30.071Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:15:30.136Z",
      "WorkgroupName": "default-workgroup"
    }
    SQL: WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "P O P__0",
        j_o_space_0."popular_name" as "J P O P__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c o u n t__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "R O W__0",
        CASE WHEN group_set=0 THEN LAG((base."popular_name"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "l a g__0",
        CASE WHEN group_set=1 THEN
          j_o_space_0."state"
          END as "J S__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c o u n t__1"
      FROM "malloytest"."state_facts" as base
       LEFT JOIN "malloytest"."state_facts" AS j_o_space_0
        ON j_o_space_0."state"=base."state"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,7
    )
    SELECT
      "P O P__0" as "P O P",
      "J P O P__0" as "J P O P",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "c o u n t__0" IS NOT NULL THEN "c o u n t__0" END))[1] as "c o u n t",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "R O W__0" IS NOT NULL THEN "R O W__0" END))[1] as "R O W",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "l a g__0" IS NOT NULL THEN "l a g__0" END))[1] as "l a g",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "J S__1" as "J S", 
        "c o u n t__1"::DOUBLE PRECISION as "c o u n t"
        ) as __x)  ORDER BY  "c o u n t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by state"
    FROM __stage0
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST

    Error: Batch error: 
     sql: SET search_path TO malloytest;
    WITH __stage0 AS (
      SELECT
        group_set,
        base."popular_name" as "P O P__0",
        j_o_space_0."popular_name" as "J P O P__0",
        CASE WHEN group_set=0 THEN
          COUNT(1)
          END as "c o u n t__0",
        CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "R O W__0",
        CASE WHEN group_set=0 THEN LAG((base."popular_name"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN
          COUNT(1)
          END desc NULLS LAST ) END as "l a g__0",
        CASE WHEN group_set=1 THEN
          j_o_space_0."state"
          END as "J S__1",
        CASE WHEN group_set=1 THEN
          COUNT(1)
          END as "c o u n t__1"
      FROM "malloytest"."state_facts" as base
       LEFT JOIN "malloytest"."state_facts" AS j_o_space_0
        ON j_o_space_0."state"=base."state"
      CROSS JOIN GENERATE_SERIES(0,1,1) as group_set
      GROUP BY 1,2,3,7
    )
    SELECT
      "P O P__0" as "P O P",
      "J P O P__0" as "J P O P",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "c o u n t__0" IS NOT NULL THEN "c o u n t__0" END))[1] as "c o u n t",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "R O W__0" IS NOT NULL THEN "R O W__0" END))[1] as "R O W",
      (ARRAY_AGG(CASE WHEN group_set=0 AND "l a g__0" IS NOT NULL THEN "l a g__0" END))[1] as "l a g",
      COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT 
        "J S__1" as "J S", 
        "c o u n t__1"::DOUBLE PRECISION as "c o u n t"
        ) as __x)  ORDER BY  "c o u n t__1" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as "by state"
    FROM __stage0
    GROUP BY 1,2
    ORDER BY 3 desc NULLS LAST
     
     {
      "$metadata": {
        "httpStatusCode": 200,
        "requestId": "1ca1f0de-bb77-4a65-9fa2-3ab997069ea5",
        "attempts": 1,
        "totalRetryDelay": 0
      },
      "CreatedAt": "2025-03-03T18:15:29.535Z",
      "Database": "dev",
      "Duration": 53422488,
      "Error": "Query #2 failed with ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 16\n  Position: 1455",
      "HasResultSet": false,
      "Id": "d58719e8-46a8-42a0-ac78-50d9470483ae",
      "RedshiftPid": 1073864862,
      "RedshiftQueryId": 0,
      "ResultFormat": "json",
      "ResultRows": -1,
      "ResultSize": -1,
      "SecretArn": "arn:aws:secretsmanager:us-west-1:977099028464:secret:redshift-access-secret-4MyGTg",
      "Status": "FAILED",
      "SubStatements": [
        {
          "CreatedAt": "2025-03-03T18:15:29.631Z",
          "Duration": 53422488,
          "HasResultSet": false,
          "Id": "d58719e8-46a8-42a0-ac78-50d9470483ae:1",
          "QueryString": "SET search_path TO malloytest;",
          "RedshiftQueryId": 0,
          "ResultRows": 0,
          "ResultSize": 0,
          "Status": "FINISHED",
          "UpdatedAt": "2025-03-03T18:15:30.071Z"
        },
        {
          "CreatedAt": "2025-03-03T18:15:29.634Z",
          "Duration": -1,
          "Error": "ERROR: syntax error at or near \"ORDER\" in context \"as __x)  ORDER\", at line 36, column 16\n  Position: 1455",
          "HasResultSet": false,
          "Id": "d58719e8-46a8-42a0-ac78-50d9470483ae:2",
          "QueryString": "WITH __stage0 AS (\n  SELECT\n    group_set,\n    base.\"popular_name\" as \"P O P__0\",\n    j_o_space_0.\"popular_name\" as \"J P O P__0\",\n    CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END as \"c o u n t__0\",\n    CASE WHEN group_set=0 THEN ROW_NUMBER() OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"R O W__0\",\n    CASE WHEN group_set=0 THEN LAG((base.\"popular_name\"),1) OVER(PARTITION BY group_set  ORDER BY  CASE WHEN group_set=0 THEN\n      COUNT(1)\n      END desc NULLS LAST ) END as \"l a g__0\",\n    CASE WHEN group_set=1 THEN\n      j_o_space_0.\"state\"\n      END as \"J S__1\",\n    CASE WHEN group_set=1 THEN\n      COUNT(1)\n      END as \"c o u n t__1\"\n  FROM \"malloytest\".\"state_facts\" as base\n   LEFT JOIN \"malloytest\".\"state_facts\" AS j_o_space_0\n    ON j_o_space_0.\"state\"=base.\"state\"\n  CROSS JOIN GENERATE_SERIES(0,1,1) as group_set\n  GROUP BY 1,2,3,7\n)\nSELECT\n  \"P O P__0\" as \"P O P\",\n  \"J P O P__0\" as \"J P O P\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"c o u n t__0\" IS NOT NULL THEN \"c o u n t__0\" END))[1] as \"c o u n t\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"R O W__0\" IS NOT NULL THEN \"R O W__0\" END))[1] as \"R O W\",\n  (ARRAY_AGG(CASE WHEN group_set=0 AND \"l a g__0\" IS NOT NULL THEN \"l a g__0\" END))[1] as \"l a g\",\n  COALESCE(TO_JSONB((ARRAY_AGG((SELECT TO_JSONB(__x) FROM (SELECT \n    \"J S__1\" as \"J S\", \n    \"c o u n t__1\"::DOUBLE PRECISION as \"c o u n t\"\n    ) as __x)  ORDER BY  \"c o u n t__1\" desc NULLS LAST ) FILTER (WHERE group_set=1))),'[]'::JSONB) as \"by state\"\nFROM __stage0\nGROUP BY 1,2\nORDER BY 3 desc NULLS LAST\n",
          "RedshiftQueryId": 0,
          "ResultRows": -1,
          "ResultSize": -1,
          "Status": "FAILED",
          "UpdatedAt": "2025-03-03T18:15:30.071Z"
        }
      ],
      "UpdatedAt": "2025-03-03T18:15:30.136Z",
      "WorkgroupName": "default-workgroup"
    }

      362 |       }
      363 |     } else {
    > 364 |       throw new Error(
          |             ^
      365 |         `Batch error: \n sql: ${sqlArray.join('\n')} \n ${JSON.stringify(
      366 |           statusResponse,
      367 |           null,

      at _callee10$ (packages/malloy-db-redshift/src/redshift_connection.ts:364:13)
      at tryCatch (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:45:16)
      at Generator.<anonymous> (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:133:17)
      at Generator.next (node_modules/@babel/runtime/helpers/regeneratorRuntime.js:74:21)
      at asyncGeneratorStep (node_modules/@babel/runtime/helpers/asyncToGenerator.js:3:24)
      at _next (node_modules/@babel/runtime/helpers/asyncToGenerator.js:22:9)
      at Object.<anonymous> (test/src/databases/all/nomodel.spec.ts:1381:10)

Test Suites: 1 failed, 1 total
Tests:       26 failed, 3 skipped, 39 passed, 68 total
Snapshots:   0 total
Time:        195.044 s
Ran all test suites matching /nomodel/i.

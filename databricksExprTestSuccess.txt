
> malloy@0.0.1 test
> jest --runInBand expr.spec

{"level":"info","message":"Created DBSQLClient"}
{"level":"info","message":"DBSQLClient: initializing thrift client"}
  console.log
    BRIAN schema rows [
      {
        col_name: 'aircraft_model_code',
        data_type: 'string',
        comment: null
      },
      { col_name: 'manufacturer', data_type: 'string', comment: null },
      { col_name: 'model', data_type: 'string', comment: null },
      { col_name: 'aircraft_type_id', data_type: 'bigint', comment: null },
      {
        col_name: 'aircraft_engine_type_id',
        data_type: 'bigint',
        comment: null
      },
      {
        col_name: 'aircraft_category_id',
        data_type: 'bigint',
        comment: null
      },
      { col_name: 'amateur', data_type: 'bigint', comment: null },
      { col_name: 'engines', data_type: 'bigint', comment: null },
      { col_name: 'seats', data_type: 'bigint', comment: null },
      { col_name: 'weight', data_type: 'bigint', comment: null },
      { col_name: 'speed', data_type: 'bigint', comment: null }
    ]

      at DatabricksTestConnection._callee4$ (packages/malloy-db-databricks/src/databricks_connection.ts:182:13)

  console.log
    BRIAN schema rows [
      { col_name: 'id', data_type: 'bigint', comment: null },
      { col_name: 'tail_num', data_type: 'string', comment: null },
      { col_name: 'aircraft_serial', data_type: 'string', comment: null },
      {
        col_name: 'aircraft_model_code',
        data_type: 'string',
        comment: null
      },
      {
        col_name: 'aircraft_engine_code',
        data_type: 'string',
        comment: null
      },
      { col_name: 'year_built', data_type: 'bigint', comment: null },
      { col_name: 'aircraft_type_id', data_type: 'bigint', comment: null },
      {
        col_name: 'aircraft_engine_type_id',
        data_type: 'bigint',
        comment: null
      },
      {
        col_name: 'registrant_type_id',
        data_type: 'bigint',
        comment: null
      },
      { col_name: 'name', data_type: 'string', comment: null },
      { col_name: 'address1', data_type: 'string', comment: null },
      { col_name: 'address2', data_type: 'string', comment: null },
      { col_name: 'city', data_type: 'string', comment: null },
      { col_name: 'state', data_type: 'string', comment: null },
      { col_name: 'zip', data_type: 'string', comment: null },
      { col_name: 'region', data_type: 'string', comment: null },
      { col_name: 'county', data_type: 'string', comment: null },
      { col_name: 'country', data_type: 'string', comment: null },
      { col_name: 'certification', data_type: 'string', comment: null },
      { col_name: 'status_code', data_type: 'string', comment: null },
      { col_name: 'mode_s_code', data_type: 'string', comment: null },
      { col_name: 'fract_owner', data_type: 'string', comment: null },
      { col_name: 'last_action_date', data_type: 'date', comment: null },
      { col_name: 'cert_issue_date', data_type: 'date', comment: null },
      { col_name: 'air_worth_date', data_type: 'date', comment: null }
    ]

      at DatabricksTestConnection._callee4$ (packages/malloy-db-databricks/src/databricks_connection.ts:182:13)

PASS test/src/databases/all/expr.spec.ts (30.811 s)
  databricks
    ✓ basic calculations (18561 ms)
    ○ skipped join dependencies tracked from annotated references
    ○ skipped Floor() -or any function bustage with aggregates
    ○ skipped computes mod correctly
    ○ skipped model: expression fixups.
    ○ skipped simple turtle
    ○ skipped double turtle
    ○ skipped double turtle - pipeline
    ○ skipped model: turtle
    ○ skipped model: filtered turtle
    ○ skipped model: simple having
    ○ skipped model: having in a nest
    ○ skipped model: turtle having on main
    ○ skipped model: having float group by partition
    ○ skipped model: aggregate functions distinct min max
    ○ skipped model: dates named
    ○ skipped named query metadata undefined
    ○ skipped named query metadata named
    ○ skipped named query metadata named head of pipeline
    ○ skipped filtered explores basic
    ○ skipped sql cast
    ○ skipped case expressions
    ○ skipped sql safe cast
    ○ skipped many_field.sum() has correct locality
    ○ skipped query with aliasname used twice
    ○ skipped joined filtered sources
    ○ skipped joined filtered explores with dependencies
    ○ skipped joined filtered explores with NO dependencies
    ○ skipped nullish ?? operator
    ○ skipped dimension expressions expanded with parens properly
    sql expr functions
      ○ skipped sql_string
      ○ skipped sql_number
      ○ skipped sql_number can be sum()med
      ○ skipped sql_boolean
      ○ skipped sql_date
      ○ skipped sql_timestamp
      ○ skipped with ${TABLE}.field
      ○ skipped with ${field}
      [not yet supported]
        ○ skipped ${view_name.dimension_name} - one path
        ○ skipped ${view_name.dimension_name} - multiple paths
        ○ skipped ${view_name.SQL_TABLE_NAME}
    alternations with not-eq
      ○ skipped x not-eq y or z : x eq y
      ○ skipped x not-eq y or z : x eq z
      ○ skipped x not-eq y or z : else
      ○ skipped x not-eq y and not-eq z : x eq y
      ○ skipped x not-eq y and not-eq z : x eq z
      ○ skipped x not-eq y and not-eq z : else
    string literal quoting
      ○ skipped quote single character
      ○ skipped quote single quote
      ○ skipped quote double quote
      ○ skipped quote backslash
    null safe booleans
      ○ skipped select boolean
      ○ skipped not boolean
      ○ skipped numeric != non-null to null
      ○ skipped string !~ non-null to null
      ○ skipped regex !~ non-null to null
      ○ skipped numeric != null-to-null
      ○ skipped string !~ null-to-null

Test Suites: 1 skipped, 1 passed, 1 of 2 total
Tests:       76 skipped, 1 passed, 77 total
Snapshots:   0 total
Time:        31.477 s
Ran all test suites matching /expr.spec/i.
